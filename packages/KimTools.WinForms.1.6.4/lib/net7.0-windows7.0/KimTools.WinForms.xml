<?xml version="1.0"?>
<doc>
    <assembly>
        <name>KimTools.WinForms</name>
    </assembly>
    <members>
        <member name="F:KimTools.WinForms.Designer.KtDesignerWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.Designer.KtDesignerWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.Designer.KtDesignerWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtButtonSelect.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtButtonSelect.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtButtonSelect.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtButton">
            <inheritdoc cref="!:" /> 
        </member>
        <member name="M:KimTools.WinForms.KtButton.GetBase">
            <summary>
            Gets the base.
            </summary>
            <returns>
            </returns>
        </member>
        <member name="F:KimTools.WinForms.KtButton.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtButton.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCanvasItem.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCanvasItem.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCanvasItem.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCanvasRect.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCanvasRect.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCanvasRect.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCanvasText.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCanvasText.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCanvasText.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtCanvas">
            <summary>
            Canvas Provider
            </summary>
            <seealso cref="T:System.ComponentModel.Component" />
            <seealso cref="T:System.ComponentModel.IExtenderProvider" />
        </member>
        <member name="M:KimTools.WinForms.KtCanvas.GetRenderingMode">
            <summary>
            Gets the rendering mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtCanvas.RenderSvg(System.String,System.Drawing.Size)">
            <summary>
            Renders the SVG.
            </summary>
            <param name="svg">The SVG.</param>
            <param name="targetControl">The targetControl.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtCanvas.SetPadding(System.Drawing.Image,System.Windows.Forms.Control)">
            <summary>
            Sets the padding.
            </summary>
            <param name="image">The image.</param>
            <param name="targetControl">The targetControl.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtCanvas.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtCanvas"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCanvas.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtCanvas"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="P:KimTools.WinForms.KtCanvas.RenderingMode">
            <summary>
            Gets or sets the rendering.
            </summary>
            <value>
            The rendering.
            </value>
        </member>
        <member name="M:KimTools.WinForms.KtCanvas.Render(System.Windows.Forms.Control,KimTools.WinForms.KtState)">
            <summary>
            Renders the specified targetControl.
            </summary>
            <param name="targetControl">The targetControl.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCanvas.Update">
            <summary>
            Updates this instance.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCanvas.Update(System.Windows.Forms.Control[])">
            <summary>
            Updates the specified controls.
            </summary>
            <param name="controls">The controls.</param>
        </member>
        <member name="F:KimTools.WinForms.KtCanvas.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCanvas.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCanvas.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCanvasHelpers.RenderSVG(System.String,System.Drawing.Size)">
            <summary>
            Renders the SVG.
            </summary>
            <param name="svg">The SVG.</param>
            <param name="targetControl">The targetControl.</param>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtCanvasBg">
            <summary>
            
            </summary>
            <seealso cref="T:KimTools.WinForms.IKtCanvasItem" />
        </member>
        <member name="P:KimTools.WinForms.KtCanvasBg.Border">
            <summary>
            Gets or sets the color.
            </summary>
            <value>
            The color.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvasBg.Fill">
            <summary>
            Gets or sets the colors. If colors > 1 gradient is used
            </summary>
            <value>
            The colors.
            </value>
            
        </member>
        <member name="P:KimTools.WinForms.KtCanvasBg.Margin">
            <summary>
            Gets or sets the margin.
            </summary>
            <value>
            The margin.
            </value>
            
        </member>
        <member name="P:KimTools.WinForms.KtCanvasBg.OnState">
            <summary>
            Gets or sets the triggers.
            </summary>
            <value>
            The triggers.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvasBg.Rotate">
            <summary>
            Gets or sets the rotate.
            </summary>
            <value>
            The rotate.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvasBg.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>
            The size.
            </value>
            
        </member>
        <member name="P:KimTools.WinForms.KtCanvasBg.Property">
            <summary>
            Gets or sets the target property.
            </summary>
            <value>
            The target property.
            </value>
        </member>
        <member name="M:KimTools.WinForms.KtCanvasBg.GetTemplate">
            <summary>
            Gets the template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtCanvasBg.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:KimTools.WinForms.KtCanvasObject">
            <summary>
            
            </summary> 
        </member>
        <member name="P:KimTools.WinForms.KtCanvasObject.Background">
            <summary>
            Gets or sets the shadows.
            </summary>
            <value>The shadows.</value>
            
        </member>
        <member name="P:KimTools.WinForms.KtCanvasObject.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
            <value>
            The padding.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvasObject.Property">
            <summary>
            Gets or sets the target property.
            </summary>
            <value>
            The target property.
            </value>
        </member>
        <member name="M:KimTools.WinForms.KtCanvasObject.Copy">
            <summary>
            Deprecated
            </summary>
            <value>
            The text.
            </value>
              
        </member>
        <member name="M:KimTools.WinForms.KtCanvasObject.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtCanvastText.Colors">
            <summary>
            Gets or sets the colors.
            </summary>
            <value>
            The colors.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvastText.Definitions">
            <summary>
            Gets or sets the dependencies.
            </summary>
            <value>
            The dependencies.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvastText.Font">
            <summary>
            Gets or sets the font.
            </summary>
            <value>
            The font.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvastText.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
            <value>
            The identifier.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvastText.Margin">
             <summary>
             Gets or sets the margin.
             </summary>
             <value>
             The margin.
             </value>
            
        </member>
        <member name="P:KimTools.WinForms.KtCanvastText.MultiLine">
            <summary>
            Gets or sets a value indicating whether [multi line].
            </summary>
            <value>
              <c>true</c> if [multi line]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvastText.Rotate">
            <summary>
            Gets or sets the rotate.
            </summary>
            <value>
            The rotate.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvastText.OnState">
            <summary>
            Gets or sets the triggers.
            </summary>
            <value>
            The triggers.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvastText.Property">
            <summary>
            Gets or sets the target property.
            </summary>
            <value>
            The target property.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCanvastText.Text">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:KimTools.WinForms.KtCanvastText.GetComponent">
            <summary>
            Gets the component.
            </summary>
            <param name="fill">The fill.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtCanvastText.GetTemplate">
            <summary>
            Gets the template.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtCanvastText.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtCanvastText.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:KimTools.WinForms.KtChart">
            <inheritdoc />
        </member>
        <member name="T:KimTools.WinForms.KtCheckBox">
            <summary>
            Provides enhanced visual support for on and off states when supporting feature selections.m
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.KtCheckBox.#ctor" -->
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.KtCheckBox.#ctor(System.Boolean)" -->
        <member name="M:KimTools.WinForms.KtCheckBox.#ctor(System.Boolean,System.Windows.Forms.Label)">
            <summary>
            Creates a new KtCheckBox control.
            </summary>
            <param name="isChecked">Sets the CheckBox check-state to true or false.</param>
            <param name="label">Sets the control to bind directly with the CheckBox; this in most cases is a Label.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.#ctor(System.Boolean,System.Windows.Forms.Label,System.Drawing.Point)">
            <summary>
            Creates a new KtCheckBox control.
            </summary>
            <param name="isChecked">Sets the CheckBox check-state to true or false.</param>
            <param name="label">Sets the control to bind directly with the CheckBox; this in most cases is a Label.</param>
            <param name="location">Sets the location of the CheckBox within the Form. [Example: New Point(12, 12)]</param>
        </member>
        <member name="T:KimTools.WinForms.KtCheckBox.CheckBoxStyles">
             <summary>
             Specifies the available styles applicable to Tailwind CheckBoxes.
             </summary>
            
        </member>
        <member name="F:KimTools.WinForms.KtCheckBox.CheckBoxStyles.Tailwind">
            <summary>
            Renders Tailwind's standard CheckBox.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCheckBox.CheckBoxStyles.Flat">
            <summary>
            Renders a standard flat designed CheckBox.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCheckBox.CheckBoxStyles.Round">
            <summary>
            Renders a smooth round designed CheckBox.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtCheckBox.CheckStates">
            <summary>
            Specifies the CheckBox check-state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCheckBox.CheckStates.Checked">
            <summary>
            The checked state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCheckBox.CheckStates.Unchecked">
            <summary>
            The unchecked state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCheckBox.CheckStates.Indeterminate">
            <summary>
            The indeterminate state.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtCheckBox.BindingControlPositions">
            <summary>
            Specifies the bound control's position in relation to the CheckBox attached to it.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCheckBox.BindingControlPositions.Left">
            <summary>
            Positions the control to the left of the CheckBox.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCheckBox.BindingControlPositions.Right">
            <summary>
            Positions the control to the right of the CheckBox.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.OnUncheck">
            <summary>
            Represents the normal or default state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.OnHoverChecked">
            <summary>
            Represents the hovered state of the control, that is, when the control gets mouse-focus.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.OnHoverUnchecked">
            <summary>
            Represents the hovered state of the control, that is, when the control gets mouse-focus.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.OnCheck">
            <summary>
            Represents the checked state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.OnDisable">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.BorderRadius">
            <summary>
            Gets or sets the control's overral border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.AutoCheck">
            <summary>
            Causes the Checkbox to automatically change state when clicked.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.Checked">
            <summary>
            Gets or sets the CheckBox check-state.
            </summary>
            <value>CheckState</value>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.CheckState">
            <summary>
            Gets or sets the CheckBox check-state.
            </summary>
            <value>CheckState</value>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.ThreeState">
            <summary>
            Gets or sets a value indicating whether the CheckBox will allow three states, that is, the \"Checked\", \"Unchecked\" and \"Indeterminate\" states rather than \"Checked\" and \"Unchecked\" only.
            </summary>
            <value>ThreeState</value>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.AnimateCheckMark">
            <summary>
            Gets or sets a value indicating whether the Checkmark will allow check-state-change animations/transitions at runtime.
            </summary> 
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.AnimateCheckBox">
            <summary>
            Gets or sets a value indicating whether the CheckBox will allow standard animations at runtime.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.AllowBindingControlAnimation">
            <summary>
            Gets or sets a value indicating whether the CheckBox animation will be applied to the bound control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.AllowBindingControlColorChanges">
            <summary>
            Gets or sets a value indicating whether the CheckBox will
            colorize the bound control. This is especially applicable
            where the bound control is a <see cref="T:System.Windows.Forms.Label"/>.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.AllowOnHoverStates">
            <summary>
            Gets a value indicating whether the CheckBox will allow the \"OnHoverChecked\" and \"OnHoverUnchecked\" states to be active at runtime.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.AllowBindingControlLocation">
            <summary>
            Gets or sets a value indicating whether the CheckBox will allow the bound control's location to be positioned based on it's own location.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.Label">
            <summary>
            Gets or sets the control to bind directly with the CheckBox; this in most cases is a Label. This setting also binds the most appropriate events of the CheckBox to the control selected.
            </summary>
            <value>
            BindingControl
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.LabelPosition">
            <summary>
            Gets or sets the position of the bound control in relation to the CheckBox.
            </summary>
            <value>
            BindingControlPosition
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.ToolTip">
            <summary>
            Gets or sets the control's ToolTip Html.
            </summary>
            <value>
            ToolTipText
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.Style">
            <summary>
            [Deprecated] Gets or sets the standard CheckBox style to be applied.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.CheckmarkRectangle">
            <summary>
            Gets the Checkmark's rectangle.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.NewBindingControl(System.Windows.Forms.Control)">
            <summary>
            Allows you to easily create a new binding control and automatically adds and binds it to the CheckBox.
            </summary>
            <param name="control">The control to create and bind, together with its properties.
            Note: You can create a label, a button or any other control you'd prefer to bind with.
            </param>
            <returns>Bound Control.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.NewBindingLabel(System.String,System.Drawing.Font,System.Drawing.Color)">
            <summary>
            Allows you to easily create a new Label that will automatically be bound with the CheckBox.
            </summary>
            <param name="text">The label's Html property value.</param>
            <param name="font">The label's FontDefault property value.</param>
            <param name="foreColor">The label's ForeColor property value.</param>
            <returns>Bound Label.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.Render">
            <summary>
            Forces the control to invalidate its client area and immediately redraw itself and any child controls.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.DrawCanvas(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Pen,System.Drawing.Color,KimTools.WinForms.CheckBoxState)">
            <summary>
            Draws a user-defined Graphics canvas.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="Bounds">The canvas rectangle-bounds.</param>
            <param name="cornerRadius">The canvas corner-radius.</param>
            <param name="drawingPen">The pen used to draw objects inside the canvas.</param>
            <param name="fillColor">Color of the fill.</param>
            <param name="checkBoxState">The state to manipulate/render.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.DrawCheckmark(System.Drawing.Graphics@,System.Drawing.Pen@,KimTools.WinForms.CheckBoxState@,System.Drawing.Point,System.Drawing.Point,System.Drawing.Point,System.Int32,System.Int32)">
            <summary>
            Draws the Checkmark bitmap.
            </summary>
            <param name="graphics">The Graphics to reference.</param>
            <param name="checkmarkPen">The checkmark pen.</param>
            <param name="checkBoxState">The current/active CheckBox state.</param>
            <param name="StartPoint">The start point.</param>
            <param name="LeftPoint">The left point.</param>
            <param name="RightPoint">The right point.</param>
            <param name="width">The checkmark width.</param>
            <param name="height">The checkmark height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.RenderCanvas(KimTools.WinForms.CheckBoxState)">
            <summary>
            Renders the control region.
            </summary>
            <param name="checkBoxState">Specify the state to be applied to the control.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.OnPropertyChange(System.String)">
            <summary>
            Invokes the <see cref="E:KimTools.WinForms.KtCheckBox.PropertyChanged"/> event.
            </summary>
            <param name="propertyName">
            The valid name of the property changed.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.PerformCheckStateTransitions">
            <summary>
            Performs a check-state-changed color transition within the CheckBox region.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.ShowCheckmark(System.Boolean)">
            <summary>
            Displays the checkmark allowing transitioning from the current size to the standard size.
            </summary>
            <param name="isRendering">Set to true if in render mode; otherwise set to false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.HideCheckmark(System.Boolean)">
            <summary>
            Hide the checkmark allowing transitioning from the current size to the standard size.
            </summary>
            <param name="isRendering">Set to <see cref="!:true"/> if in render mode; otherwise set to <see cref="!:false"/>.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.AnimateCheckBox_TransitionCompletedEvent(System.Object,KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.Args)">
            <summary>
            This event is called once the transitions have completed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.AnimateChecks_TransitionCompletedEvent(System.Object,KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.Args)">
            <summary>
            [Reserved] This event is called once the transitions have completed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.HandleControlLocationBinding(System.Boolean,System.Windows.Forms.Control)">
            <summary>
            Handles binding and moving of the internally bound/set control with the CheckBox.
            </summary>
            <param name="isInPropertyMode">Is the current call to this method within a property? If so, use the "value" parameter in the setter to pass the control.</param>
            <param name="boundControl">The selected user control to be bound with the CheckBox.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.IsDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode as per the LicenseManager module.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtCheckBox.CheckedChanged">
            <summary>
            Occurs whenever the Checked property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtCheckBox.CheckStateChanged">
            <summary>
            Occurs whenever the CheckState property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtCheckBox.StatePropertiesChanged">
            <summary>
            Occurs whenever the active CheckBox state's properties have been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtCheckBox.StylePropertyChanged">
            <summary>
            Occurs whenever the CheckBox Style property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtCheckBox.BindingControlChanged">
            <summary>
            Occurs whenever the bound control has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtCheckBox.BindingControlPositionChanged">
            <summary>
            Occurs whenever the bound control's position in relation to the CheckBox has been changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtCheckBox.CheckedChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtCheckBox.CheckedChanged"/> and <see cref="E:KimTools.WinForms.KtCheckBox.CheckStateChanged"/> events.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.CheckedChangedEventArgs.#ctor(KimTools.WinForms.KtCheckBox.CheckStates,System.Boolean)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtCheckBox.CheckedChanged"/> and <see cref="E:KimTools.WinForms.KtCheckBox.CheckStateChanged"/> events.
            </summary>
            <param name="state">Provide the state to be passed-in.</param>
            <param name="isChecked">Set the Checked value to true/false.</param>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.CheckedChangedEventArgs.Checked">
            <summary>
            Gets a value indicating whether the CheckBox is checked or not.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.CheckedChangedEventArgs.CheckState">
            <summary>
            Gets a value indicating whether the CheckBox check-state is set to true or false
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtCheckBox.StatePropertiesChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtCheckBox.StatePropertiesChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.StatePropertiesChangedEventArgs.#ctor(KimTools.WinForms.CheckBoxState)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtCheckBox.StatePropertiesChanged"/> event.
            </summary>
            <param name="currentState">The currently active CheckBox state.</param>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.StatePropertiesChangedEventArgs.CurrentState">
            <summary>
            Provides access to the available state properties in the CheckBox.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.StatePropertiesChangedEventArgs.CheckBoxColor">
            <summary>
            Gets the checkbox inner fill color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.StatePropertiesChangedEventArgs.BorderRadius">
            <summary>
            Gets the checkbox's border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.StatePropertiesChangedEventArgs.BorderThickness">
            <summary>
            Gets the checkbox border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.StatePropertiesChangedEventArgs.BorderColor">
            <summary>
            Gets the checkbox border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.StatePropertiesChangedEventArgs.CheckmarkColor">
            <summary>
            Gets the checkbox border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.StatePropertiesChangedEventArgs.CheckmarkThickness">
            <summary>
            Gets the checkmark thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.StatePropertiesChangedEventArgs.UseBorderThicknessForCheckmark">
            <summary>
            Gets a value indicating whether the property UseBorderThicknessForCheckmark has been allowed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtCheckBox.StylePropertyChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtCheckBox.StylePropertyChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.StylePropertyChangedEventArgs.#ctor(KimTools.WinForms.KtCheckBox.CheckBoxStyles)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtCheckBox.StylePropertyChanged"/> event.
            </summary>
            <param name="currentStyle">The currently applied CheckBox style.</param>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.StylePropertyChangedEventArgs.Style">
            <summary>
            Gets the Style applied to the CheckBox.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtCheckBox.BindingControlChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtCheckBox.BindingControlChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.BindingControlChangedEventArgs.#ctor(System.Windows.Forms.Control)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtCheckBox.BindingControlChanged"/> event.
            </summary>
            <param name="currentlyBoundControl">The currently bound control.</param>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.BindingControlChangedEventArgs.Control">
            <summary>
            Gets the control that is currently bound-up with the CheckBox.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtCheckBox.PositionChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtCheckBox.BindingControlPositionChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.PositionChangedEventArgs.#ctor(KimTools.WinForms.KtCheckBox.BindingControlPositions)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtCheckBox.BindingControlPositionChanged"/> event.
            </summary>
            <param name="currentControlPosition">The currently set control's position.</param>
        </member>
        <member name="P:KimTools.WinForms.KtCheckBox.PositionChangedEventArgs.BindingControlPosition">
            <summary>
            Gets the current position of the bound control in relation to the CheckBox.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtCheckBox.KtCheckboxActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtCheckBox.KtCheckboxActionList"/> class.
            </summary>
            <seealso cref="T:Microsoft.DotNet.DesignTools.Designers.Actions.DesignerActionList" />
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.KtCheckboxActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCheckBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCheckBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.CheckBoxState">
            <summary>
            An abstract class used to define various states within Tailwind CheckBox.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.CheckBoxState.#ctor(System.String)">
            <summary>
            Creates a new Tailwind CheckBox state.
            </summary>
            <param name="name">Provide a name for the state. This can be used to track the state once initialized.</param>
        </member>
        <member name="F:KimTools.WinForms.CheckBoxState.CheckBoxSize">
            <summary>
            Gets the current CheckBox size.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.CheckBoxState.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.CheckBoxState.NotifyPropertyChanged(System.String)">
            <summary>
            Notifies the property changed event.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.CheckBoxState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.CheckBoxState.CheckBoxColor">
            <summary>
            Gets or sets the CheckBox inner color.
            </summary>
            <value>CheckBoxColor.</value>
        </member>
        <member name="P:KimTools.WinForms.CheckBoxState.BorderRadius">
            <summary>
            Gets or sets the CheckBox border radius. The higher the value, the more curved the edges appear.
            </summary>
            <value>BorderRadius</value>
        </member>
        <member name="P:KimTools.WinForms.CheckBoxState.BorderThickness">
            <summary>
            Gets or sets the CheckBox border thickness.
            </summary>
            <value>BorderThickness</value>
        </member>
        <member name="P:KimTools.WinForms.CheckBoxState.BorderColor">
            <summary>
            Gets or sets the CheckBox border color.
            </summary>
            <value>BorderColor</value>
        </member>
        <member name="P:KimTools.WinForms.CheckBoxState.CheckmarkColor">
            <summary>
            Gets or sets the CheckBox checkmark color.
            </summary>
            <value>CheckmarkColor</value>
        </member>
        <member name="P:KimTools.WinForms.CheckBoxState.CheckmarkThickness">
            <summary>
            Gets or sets the CheckBox checkmark thickness.
            </summary>
            <value>CheckmarkThickness</value>
        </member>
        <member name="P:KimTools.WinForms.CheckBoxState.UseBorderThicknessForCheckmark">
            <summary>
            Gets or sets a value indicating whether to use the border thickness of the CheckBox as the border thickness of the checkmark.
            </summary>
            <value>UseBorderThicknessForCheckmark</value>
        </member>
        <member name="M:KimTools.WinForms.CheckBoxState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:KimTools.WinForms.CheckBoxState.BorderColor"/>, <see cref="P:KimTools.WinForms.CheckBoxState.CheckBoxColor"/>, 
            <see cref="P:KimTools.WinForms.CheckBoxState.CheckmarkColor"/>, <see cref="P:KimTools.WinForms.CheckBoxState.BorderRadius"/>, <see cref="P:KimTools.WinForms.CheckBoxState.BorderThickness"/>, 
            <see cref="P:KimTools.WinForms.CheckBoxState.CheckmarkThickness"/>, <see cref="P:KimTools.WinForms.CheckBoxState.UseBorderThicknessForCheckmark"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtCheckbox.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtControlboxControlBox.Extensions.ColorExtensions">
            <summary>
            Provides a collection of methods that extend the .NET Color class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtFormTools.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.BunifuFormDock.DragControlsEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.BunifuFormDock.DragControlsEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.BunifuFormDock.DragControlsEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Extensions.ColorExtensions">
            <summary>
            Provides a collection of methods that extend the .NET Color class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGaugeRadial.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Extensions.ColorExtensions">
            <summary>
            Provides a collection of methods that extend the .NET Color class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtGroupbox.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.DoubleBitmapControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.DoubleBitmapControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.DoubleBitmapControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.DoubleBitmapForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.DoubleBitmapForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.DoubleBitmapForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.PointFConverter.#ctor">
            <summary>
            Creates a new instance of PointFConverter
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.PointFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Boolean, true if the source type is a string
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.PointFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified string into a PointF
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.PointFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the PointF into a string
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.queue">
            <summary>
            The queue
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.thread">
            <summary>
            The thread
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.timer">
            <summary>
            The timer
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimationCompleted">
            <summary>
            Occurs when animation of the control is completed
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AllAnimationsCompleted">
            <summary>
            Ocuurs when all animations are completed
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeeded">
            <summary>
            Occurs when needed transform matrix
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeeded">
            <summary>
            Occurs when needed non-linear transformation
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.MouseDown">
            <summary>
            Occurs when user click on the animated control
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.FramePainted">
            <summary>
            Occurs when frame of animation is painting
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.MaxAnimationTime">
            <summary>
            Max time of animation (ms)
            </summary>
            <value>The maximum animation time.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.DefaultAnimation">
            <summary>
            Default animation
            </summary>
            <value>The default animation.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.Cursor">
            <summary>
            Cursor of animated control
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.IsCompleted">
            <summary>
            Are all animations completed?
            </summary>
            <value><c>true</c> if this instance is completed; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.Interval">
            <summary>
            Interval between frames (ms)
            </summary>
            <value>The interval.</value>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.animationType">
            <summary>
            The animation type
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimationType">
            <summary>
            Type of built-in animation
            </summary>
            <value>The type of the animation.</value>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition" /> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition" /> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.Init">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.invokerControl">
            <summary>
            The invoker control
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.timer_Tick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the timer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.Animator_Disposed(System.Object,System.EventArgs)">
            <summary>
            Handles the Disposed event of the Animator control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.Work">
            <summary>
            Works this instance.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.CheckRequests">
            <summary>
            initializeComponent result state of controls
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.IsStateOK(System.Windows.Forms.Control,KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimateMode)">
            <summary>
            Determines whether [is state ok] [the specified control].
            </summary>
            <param name="control">The control.</param>
            <param name="mode">The mode.</param>
            <returns><c>true</c> if [is state ok] [the specified control]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.RepairState(System.Windows.Forms.Control,KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimateMode)">
            <summary>
            Repairs the state.
            </summary>
            <param name="control">The control.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.counter">
            <summary>
            The counter
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.DoAnimation(KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem)">
            <summary>
            Does the animation.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.InitDefaultAnimation(KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.AnimationType)">
            <summary>
            Initializes the default animation.
            </summary>
            <param name="animationType">Type of the animation.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TimeStep">
            <summary>
            Time step
            </summary>
            <value>The time step.</value>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.Show(System.Windows.Forms.Control,System.Boolean,KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.Animation)">
            <summary>
            Shows the control. As result the control will be shown with animation.
            </summary>
            <param name="control">Target control</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.ShowSync(System.Windows.Forms.Control,System.Boolean,KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.Animation)">
            <summary>
            Shows the control and waits while animation will be completed. As result the control will be shown with animation.
            </summary>
            <param name="control">Target control</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.Hide(System.Windows.Forms.Control,System.Boolean,KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.Animation)">
            <summary>
            Hides the control. As result the control will be hidden with animation.
            </summary>
            <param name="control">Target control</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.HideSync(System.Windows.Forms.Control,System.Boolean,KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.Animation)">
            <summary>
            Hides the control and waits while animation will be completed. As result the control will be hidden with animation.
            </summary>
            <param name="control">Target control</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.BeginUpdate(System.Windows.Forms.Control,System.Boolean,KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.Animation,System.Drawing.Rectangle)">
            <summary>
            It makes snapshot of the control before updating. It requires EndUpdate calling.
            </summary>
            <param name="control">Target control</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
            <param name="clipRectangle">Clip rectangle for animation</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.EndUpdate(System.Windows.Forms.Control)">
            <summary>
            Upadates control view with animation. It requires to call BeginUpdate before.
            </summary>
            <param name="control">Target control</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.EndUpdateSync(System.Windows.Forms.Control)">
            <summary>
            Upadates control view with animation and waits while animation will be completed. It requires to call BeginUpdate before.
            </summary>
            <param name="control">Target control</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.WaitAllAnimations">
            <summary>
            Waits while all animations will completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.WaitAnimation(System.Windows.Forms.Control)">
            <summary>
            Waits while animation of the control will completed.
            </summary>
            <param name="animatedControl">The animated control.</param>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.requests">
            <summary>
            The requests
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.OnCompleted(KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem)">
            <summary>
            Called when [completed].
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AddToQueue(System.Windows.Forms.Control,KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimateMode,System.Boolean,KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.Animation,System.Drawing.Rectangle)">
            <summary>
            Adds the contol to animation queue.
            </summary>
            <param name="control">Target control</param>
            <param name="mode">Animation mode</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
            <param name="clipRectangle">The clip rectangle.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.CreateDoubleBitmap(System.Windows.Forms.Control,KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimateMode,KimTools.WinForms.KtToastHelpers.KtPages.KtPgAnimatorNS.Animation,System.Drawing.Rectangle)">
            <summary>
            Creates the double bitmap.
            </summary>
            <param name="control">The control.</param>
            <param name="mode">The mode.</param>
            <param name="animation">The animation.</param>
            <param name="clipRect">The clip rect.</param>
            <returns>Controller.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.OnFramePainted(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the <see cref="E:FramePainted" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.OnNonLinearTransfromNeeded(System.Object,KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg)">
            <summary>
            Called when [non linear transfrom needed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.OnTransformNeeded(System.Object,KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg)">
            <summary>
            Called when [transform needed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.ClearQueue">
            <summary>
            Clears queue.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.OnAnimationCompleted(KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimationCompletedEventArg)">
            <summary>
            Called when [animation completed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.OnAllAnimationsCompleted">
            <summary>
            Called when [all animations completed].
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem">
            <summary>
            Class QueueItem.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem.animation">
            <summary>
            The animation
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem.controller">
            <summary>
            The controller
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem.control">
            <summary>
            The control
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem.ActivateTime">
            <summary>
            Gets the activate time.
            </summary>
            <value>The activate time.</value>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem.mode">
            <summary>
            The mode
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem.clipRectangle">
            <summary>
            The clip rectangle
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem.isActive">
            <summary>
            The is active
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.QueueItem.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.GetDecoration(System.Windows.Forms.Control)">
            <summary>
            Gets the decoration.
            </summary>
            <param name="control">The control.</param>
            <returns>DecorationType.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.SetDecoration(System.Windows.Forms.Control,KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.DecorationType)">
            <summary>
            Sets the decoration.
            </summary>
            <param name="control">The control.</param>
            <param name="decoration">The decoration.</param>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.DecorationByControls">
            <summary>
            The decoration by controls
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.CanExtend(System.Object)">
            <summary>
            Specifies whether this object can provide its extender properties to the specified object.
            </summary>
            <param name="extendee">The <see cref="T:System.Object" /> to receive the extender properties.</param>
            <returns>true if this object can provide extender properties to the specified object; otherwise, false.</returns>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.DecorationType">
            <summary>
            Enum DecorationType
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.DecorationType.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.DecorationType.BottomMirror">
            <summary>
            The bottom mirror
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.DecorationType.Custom">
            <summary>
            The custom
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimationCompletedEventArg">
            <summary>
            Class AnimationCompletedEventArg.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimationCompletedEventArg.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>The animation.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimationCompletedEventArg.Control">
            <summary>
            Gets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimationCompletedEventArg.Mode">
            <summary>
            Gets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg">
            <summary>
            Class TransfromNeededEventArg.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg" /> class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg.Matrix">
            <summary>
            Gets or sets the matrix.
            </summary>
            <value>The matrix.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg.CurrentTime">
            <summary>
            Gets the current time.
            </summary>
            <value>The current time.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg.ClientRectangle">
            <summary>
            Gets the client rectangle.
            </summary>
            <value>The client rectangle.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg.ClipRectangle">
            <summary>
            Gets the clip rectangle.
            </summary>
            <value>The clip rectangle.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>The animation.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg.Control">
            <summary>
            Gets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg.Mode">
            <summary>
            Gets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.TransfromNeededEventArg.UseDefaultMatrix">
            <summary>
            Gets or sets a value indicating whether [use default matrix].
            </summary>
            <value><c>true</c> if [use default matrix]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg">
            <summary>
            Class NonLinearTransfromNeededEventArg.
            </summary>
            <seealso cref="T:System.EventArgs" />
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.CurrentTime">
            <summary>
            Gets the current time.
            </summary>
            <value>The current time.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.ClientRectangle">
            <summary>
            Gets the client rectangle.
            </summary>
            <value>The client rectangle.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.Pixels">
            <summary>
            Gets the pixels.
            </summary>
            <value>The pixels.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.Stride">
            <summary>
            Gets the stride.
            </summary>
            <value>The stride.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.SourceClientRectangle">
            <summary>
            Gets the source client rectangle.
            </summary>
            <value>The source client rectangle.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.SourcePixels">
            <summary>
            Gets the source pixels.
            </summary>
            <value>The source pixels.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.SourceStride">
            <summary>
            Gets or sets the source stride.
            </summary>
            <value>The source stride.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>The animation.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.Control">
            <summary>
            Gets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.Mode">
            <summary>
            Gets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.NonLinearTransfromNeededEventArg.UseDefaultTransform">
            <summary>
            Gets or sets a value indicating whether [use default transform].
            </summary>
            <value><c>true</c> if [use default transform]; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimateMode">
            <summary>
            Enum AnimateMode
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimateMode.Show">
            <summary>
            The show
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimateMode.Hide">
            <summary>
            The hide
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimateMode.Update">
            <summary>
            The update
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.AnimateMode.BeginUpdate">
            <summary>
            The begin update
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPages.KtPagesTransition.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtPanelGradient.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition,KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.ProgressRadial.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtProgress.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtRadio.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtScrollBars.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar">
            <summary>
            Provides enhanced vertical content-scrolling capabilities and extended customization options at design time.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar"/> control class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ArrowType">
            <summary>
            Provides a list of arrow-types for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ArrowType.TopArrow">
            <summary>
            Specifies the Up or Top arrow.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ArrowType.BottomArrow">
            <summary>
            Specifies the Down or Bottom arrow.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ArrowStyle">
            <summary>
            Provides a list of arrow-styles for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ArrowStyle.Line">
            <summary>
            Specifies a line-style arrow.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ArrowStyle.Fill">
            <summary>
            Specifies a fill-style arrow.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.EffectType">
            <summary>
            Provides a set of states that can be specified for the control's mouse-effect transitions.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.EffectType.OnEnter">
            <summary>
            Specifies the MouseEnter event-state effect.
            Note: The "MouseHover" event is called each time 
            scrolling occurs and thus is not advisable to use.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.EffectType.OnPress">
            <summary>
            Specifies the MouseDown event-state effect.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.EffectType.OnLeave">
            <summary>
            Specifies the MouseLeave event-state effect.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbStyles">
            <summary>
            Provides options for choosing the thumb's style within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbStyles.Inset">
            <summary>
            Adjusts the thumb's position to appear within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbStyles.Proportional">
            <summary>
            Adjusts the thumb's position to appear in the same size as the ScrollBar.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Direction">
            <summary>
            Provides a list of the thumb's directional movements within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Direction.Left">
            <summary>
            Returns if the thumb is moving towards the left of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Direction.Right">
            <summary>
            Returns if the thumb is moving towards the right of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Direction.InCursor">
            <summary>
            Returns if the thumb is has reached the cursor's current position.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarVisualStyles">
            <summary>
            Provides visual style options for customizing the 
            look and feel of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarVisualStyles.ScrollBar">
            <summary>
            Switches the ScrollBar to its default style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarVisualStyles.Slider">
            <summary>
            Switches the ScrollBar to visually mimic a slider.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DrawModes">
            <summary>
            Provides rendering options used whenever elements
            are being drawn within a control's surface.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DrawModes.Fill">
            <summary>
            Draws an element filling its entire
            surface with its primary color.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DrawModes.Outline">
            <summary>
            Draws an element in outline form, 
            leaving its inner surface either 
            color-filled or transparent.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.SliderThumbStyles">
            <summary>
            Provides styling options for the slider's thumb.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.SliderThumbStyles.Thin">
            <summary>
            Renders a thin or stick-like thumb.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.SliderThumbStyles.Circular">
            <summary>
            Renders a circular thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.OnDisable">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BindingContainer">
            <summary>
            Gets or sets the container-control attached with the ScrollBar.
            The container control needs to be a <see cref="T:System.Windows.Forms.ScrollableControl"/> 
            or a <see cref="T:System.Windows.Forms.DataGridView"/> for it to be attached.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Value">
            <summary>
            Gets or sets the thumb's value or position in the ScrollBar.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the value set is outside appropriate range, that is, between the Minimum and Maximum set values.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Maximum">
            <summary>
            Gets or sets the ScrollBar's minimum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Minimum property value is greater than the Maximum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Minimum">
            <summary>
            Gets or sets the ScrollBar's maximum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Maximum property value is greater than the Minimum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.SmallChange">
            <summary>
            Gets or sets the amount by which the thumb's value changes when the user presses an arrow key.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.LargeChange">
            <summary>
             Gets or sets the amount by which the thumb's value changes when the user clicks in the scroll bar or presses the PageUp or PageDown keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BorderRadius">
            <summary>
            [Reserved] Gets or sets the border-radius of the ScrollBar and the thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BorderThickness">
            <summary>
            Gets or sets the border-thickness of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbStyle">
            <summary>
             Gets or sets the thumb's style in relation to the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbLength">
            <summary>
            Gets or sets the length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbMargin">
            <summary>
            Gets or sets the distance between the thumb and the ScrollBar's edges.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.MinimumThumbLength">
            <summary>
            Gets or sets the minimum length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DurationBeforeShrink">
            <summary>
            Gets or sets the duration the ScrollBar will wait before it shrinks back when inactive.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ShrinkSizeLimit">
            <summary>
            Gets or sets the shrink-size limit of the ScrollBar when focus is lost.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AllowShrinkingOnFocusLost">
            <summary>
            Gets or sets a value indicating whether the ScrollBar will automatically shrink when focus is lost.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AllowCursorChanges">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow changes to the cursor during the thumb's movement.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AllowScrollOptionsMenu">
            <summary>
            Gets or sets a value indicating whether the ScrollBar will allow displaying of the scroll options menu on right-clicking it.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AllowScrollKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow detection of the standard scroll navigation keys 
             which include the Up/Down arrow keys and the Page-up/Page-down keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AllowScrollingAnimations">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow animations whenever the thumb is moved.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AllowHomeEndKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow detection of the Home/End special navigation keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AllowIncrementalClickMoves">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow incremental 
             thumb movements whenever the scrolling region is clicked at any one point.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AllowMouseDownEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow mouse-down effects when active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AllowMouseHoverEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow mouse-hover effects when active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollOptionsMenuVisible">
            <summary>
            Gets a value indicating whether the ScrollBar's options menu is currently visible.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbSize">
            <summary>
            Gets or sets the default thumb size.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Orientation">
            <summary>
            Gets the orientation of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarRectangle">
            <summary>
            Gets the ScrollBar's enclosing rectangle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.CreateParams">
            <summary>
            Overrides the CreateParams method to stop flickering issues 
            by setting the "WS_EX_COMPOSITED" (0x02000000) style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.VisualStyle">
            <summary>
            Gets or sets a preset visual style to be applied in the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.SliderThumbStyle">
            <summary>
            Gets or sets a style for the slider's thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbBorderThickness">
            <summary>
            Gets or sets the thumb's border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbFillColor">
            <summary>
            Gets or sets the thumb's inner fill color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ThumbDrawMode">
            <summary>
            Gets or sets the thumb's default draw-mode.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ValueChanged">
            <summary>
            Occurs whenever the Value property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Scroll">
            <summary>
            Occurs whenever the Scroll event has been raised.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.MouseCaptureChanged">
            <summary>
            Occurs after the mouse capture is changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ValueChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ValueChangedEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ValueChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ValueChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.MouseCaptureChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.MouseCaptureChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.MouseCaptureChangedEventArgs.#ctor(System.Int32,KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Direction)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.MouseCaptureChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.MouseCaptureChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.MouseCaptureChangedEventArgs.ThumbDirection">
            <summary>
            Gets the thumb's directional movement.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Scroll"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="!:HScrollbar.ScrollChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Allows for the processing of the assigned movement keys to the ScrollBar when active.
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Refresh">
            <summary>
            Redraws the control's surface.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BindTo(System.Windows.Forms.Control)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/> 
            to attach to.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BindTo(System.Windows.Forms.ScrollableControl)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/>.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> to attach to.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BindTo(System.Windows.Forms.DataGridView,System.Boolean)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="dataGridView">
            The <see cref="T:System.Windows.Forms.DataGridView"/> to attach to.
            </param>
            <param name="allowSelection">
            Allow cell-selections when scrolling?
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DrawScrollBar">
            <summary>
            Draws the ScrollBar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DrawThumb(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's thumb.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="thumbPen">The pen used to draw the thumb.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the thumb.</param>
            <param name="height">The thumb's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DrawTopArrow(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws the ScrollBar's top arrow.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="arrowPen">The pen used to draw the arrow.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the arrow.</param>
            <param name="height">The arrow's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ArrowType,KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ArrowStyle,System.Drawing.Color)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name="g">The Graphics object.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="type">The type of arrow to be drawn.</param>
            <param name="style">The style of arrow to be rendered.</param>
            <param name="arrowColor">The arrow color to apply.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DrawArrow(System.Drawing.Graphics@,System.Drawing.Pen,KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ArrowType,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name = "graphics" > The Graphics canvas.</param>
            <param name = "arrowPen" > The pen used to draw the graphics surface.</param>
            <param name = "type" > The type of arrow to be drawn - either top or bottom.</param>
            <param name = "controlRectangle" > The rectangle surface on which to draw the graphics.</param>
            <param name = "thickness" > The thickness of the arrow.</param>
            <param name = "width" > The arrow's width.</param>
            <param name = "height" > The arrow's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DrawRoundedRectangle(System.Drawing.RectangleF,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws a rectangle in the indicated Rectangle rounding the indicated corners.
            </summary>
            <param name="rect"></param>
            <param name="xradius"></param>
            <param name="yradius"></param>
            <param name="round_ul"></param>
            <param name="round_ur"></param>
            <param name="round_lr"></param>
            <param name="round_ll"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DrawLayout(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Creates the control's container layout.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="Bounds">The canvas rectangle-bounds.</param>
            <param name="radius">The canvas corner-radius.</param>
            <param name="pen">The pen used to draw objects inside the canvas.</param>
            <param name="backColor">The layout's background color.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.HandleMouseCapture(System.Boolean)">
            <summary>
            Handles mouse-capture events in the ScrollBar.
            </summary>
            <param name="isInTimerMode">Prevents attaching multiple events when moving the thumb through the Timer when set to "true".</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BindToContainerControl">
            <summary>
            Automatically binds the attached container-control
            or DataGridView at runtime.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.IsControlScrollBindable(System.Windows.Forms.Control)">
            <summary>
            Determines if a certain control can 
            be bound-up with Tailwind Scrollbars.
            </summary>
            <param name="control">The control to determine.</param>
            <returns>True if scroll-bindable, or False if not scroll-bindable.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.DebugString(System.String)">
            <summary>
            Allows you to view the value of a parameter or object value from the parent form's "Html" caption.
            </summary>
            <param name="value">The value (in <see cref="T:System.String"/> format) to be printed.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BeginThumbMovement(System.Int32)">
            <summary>
            Begins moving the thumb using the Timer from the "MouseDown" event.
            </summary>
            <param name="movementIntervals">The timer intervals to skip before the thumb moves again.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.EndThumbMovement">
            <summary>
            Resets the duration set and then ends the thumb's movement in the 
            Timer from the "MouseUp" event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AutoGrowScrollBar">
            <summary>
            Adjusts the ScrollBar's size when inactive. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AutoShrinkScrollBar">
            <summary>
            Adjusts the ScrollBar's size when active. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Shrink(System.Object)">
            <summary>
            [Asynchronous] Called by the method <see cref="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.AutoShrinkScrollBar"/> to shrink the ScrollBar.
            </summary>
            <param name="stateInfo">May be used to represent the state of the ScrollBar.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.MoveThumb(System.Int32,System.Boolean)">
            <summary>
            Moves the thumb to a specified position.
            </summary>
            <param name="to">The new thumb's position.</param>
            <param name="allowTransition">Enable/disable the thumb's transition.
            Disabling the animation is important when handling on-demand thumb-change scenarios.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.MoveValue(System.Int32)">
            <summary>
            Moves any value to a newly specified position.
            </summary>
            <param name="to">The new value.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.PerformMouseEffect(KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.EffectType)">
            <summary>
            Performs a directed mouse effect to the control.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.SetThumbLength">
            <summary>
            Sets the appropriate length of the thumb.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.SetScrollBounds">
            <summary>
            Applies the standard scroll values responsible for setting the bounds of the ScrollBar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.IsPointInRect(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Determines whether rectangle contains given point.
            </summary>
            <param name="pt">The point to test.</param>
            <param name="rect">The base rectangle.</param>
            <returns>
            	<c>true</c> if rectangle contains given point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.IsMouseInThumb(System.Boolean)">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <param name="applyUniqueCheck">Applies a unique check whereby anywhere within the thumb's region is used instead of the thumb's rectangle region.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.IsMouseInScrollBar">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ConvertRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts the ScrollBar's size dimensions to the user-specified range dimensions.
            </summary>
            <param name="originalStart">The original starting point.</param>
            <param name="originalEnd">The original ending point.</param>
            <param name="newStart">The new starting point in the user-specified range.</param>
            <param name="newEnd">The new ending point in the user-specified range.</param>
            <param name="value">The value to be set within the range.</param>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BunifuHScrollBarActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BunifuHScrollBarActionList"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.BunifuHScrollBarActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarState">
            <summary>
            An abstract class used to define various states within Tailwind ScrollBars.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarState.#ctor(System.String)">
            <summary>
            Creates a new Tailwind ScrollBar state.
            </summary>
            <param name="name">Provide a name for the state. This can be used to track the state once initialized.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarState.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarState.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarState.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarState.ScrollBarBorderColor"/>, <see cref="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarState.ScrollBarColor"/>, 
            <see cref="P:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.ScrollBarState.ThumbColor"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.HScrollbar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar">
            <summary>
            Provides enhanced vertical content-scrolling capabilities and extended customization options at design time.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar"/> control class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DirectionalMovements">
            <summary>
            Provides directional options that the vertical
            ScrollBar can adjust to whenever movement occurs.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DirectionalMovements.TopDown">
            <summary>
            Adjusts movement from top to bottom.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DirectionalMovements.BottomUp">
            <summary>
            Adjusts movement from bottom to top.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ArrowType">
            <summary>
            Provides a list of arrow-types for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ArrowType.TopArrow">
            <summary>
            Specifies the Up or Top arrow.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ArrowType.BottomArrow">
            <summary>
            Specifies the Down or Bottom arrow.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ArrowStyle">
            <summary>
            Provides a list of arrow-styles for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ArrowStyle.Line">
            <summary>
            Specifies a line-style arrow.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ArrowStyle.Fill">
            <summary>
            Specifies a fill-style arrow.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.EffectType">
            <summary>
            Provides a set of states that can be specified for the control's mouse-effect transitions.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.EffectType.OnEnter">
            <summary>
            Specifies the MouseEnter event-state effect.
            Note: The "MouseHover" event is called each time 
            scrolling occurs and thus is not advisable to use.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.EffectType.OnPress">
            <summary>
            Specifies the MouseDown event-state effect.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.EffectType.OnLeave">
            <summary>
            Specifies the MouseLeave event-state effect.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbStyles">
            <summary>
            Provides options for choosing the thumb's style within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbStyles.Inset">
            <summary>
            Adjusts the thumb's position to appear within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbStyles.Proportional">
            <summary>
            Adjusts the thumb's position to appear in the same size as the ScrollBar.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Direction">
            <summary>
            Provides a list of the thumb's directional movements within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Direction.Top">
            <summary>
            Returns if the thumb is moving towards the top of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Direction.Bottom">
            <summary>
            Returns if the thumb is moving towards the bottom of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Direction.InCursor">
            <summary>
            Returns if the thumb is has reached the cursor's current position.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarVisualStyles">
            <summary>
            Provides visual style options for customizing the 
            look and feel of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarVisualStyles.ScrollBar">
            <summary>
            Switches the ScrollBar to its default style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarVisualStyles.Slider">
            <summary>
            Switches the ScrollBar to visually mimic a slider.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DrawModes">
            <summary>
            Provides rendering options used whenever elements
            are being drawn within a control's surface.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DrawModes.Fill">
            <summary>
            Draws an element filling its entire
            surface with its primary color.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DrawModes.Outline">
            <summary>
            Draws an element in outline form, 
            leaving its inner surface either 
            color-filled or transparent.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.SliderThumbStyles">
            <summary>
            Provides styling options for the slider's thumb.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.SliderThumbStyles.Thin">
            <summary>
            Renders a thin or stick-like thumb.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.SliderThumbStyles.Circular">
            <summary>
            Renders a circular thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DirectionalScroll">
            <summary>
            Gets or sets the directional movement of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.OnDisable">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BindingContainer">
            <summary>
            Gets or sets the container-control attached with the ScrollBar.
            The container control needs to be a <see cref="T:System.Windows.Forms.ScrollableControl"/> 
            or a <see cref="T:System.Windows.Forms.DataGridView"/> for it to be attached.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Value">
            <summary>
            Gets or sets the thumb's value or position in the ScrollBar.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the value set is outside appropriate range, that is, between the Minimum and Maximum set values.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Maximum">
            <summary>
            Gets or sets the ScrollBar's minimum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Minimum property value is greater than the Maximum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Minimum">
            <summary>
            Gets or sets the ScrollBar's maximum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Maximum property value is greater than the Minimum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.SmallChange">
            <summary>
            Gets or sets the amount by which the thumb's value changes when the user presses an arrow key.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.LargeChange">
            <summary>
             Gets or sets the amount by which the thumb's value changes when the user clicks in the scroll bar or presses the PageUp or PageDown keys..
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BorderRadius">
            <summary>
            [Experimental] Gets or sets the border-radius of the ScrollBar and the thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BorderThickness">
            <summary>
            Gets or sets the border-thickness of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbStyle">
            <summary>
             Gets or sets the thumb's style in relation to the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbLength">
            <summary>
            Gets or sets the length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbMargin">
            <summary>
            Gets or sets the distance between the thumb and the ScrollBar's edges.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.MinimumThumbLength">
            <summary>
            Gets or sets the minimum length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DurationBeforeShrink">
            <summary>
            Gets or sets the duration the ScrollBar will wait before it shrinks back when focus is lost.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ShrinkSizeLimit">
            <summary>
            Gets or sets the shrink-size limit of the ScrollBar when focus is lost.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AllowShrinkingOnFocusLost">
            <summary>
            Gets or sets a value indicating whether the ScrollBar will automatically shrink when focus is lost.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AllowCursorChanges">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow changes to the cursor during the thumb's movement.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AllowScrollOptionsMenu">
            <summary>
            Gets or sets a value indicating whether the ScrollBar will allow displaying of the scroll options menu on right-clicking it.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AllowScrollKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow detection of the standard scroll navigation keys 
             which include the Up/Down arrow keys and the Page-up/Page-down keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AllowScrollingAnimations">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow animations whenever the thumb is moved.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AllowHomeEndKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow detection of the Home/End special navigation keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AllowIncrementalClickMoves">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow incremental 
             thumb movements whenever the scrolling region is clicked at any one point.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AllowMouseDownEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow mouse-down effects when active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AllowMouseHoverEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will allow mouse-hover effects when active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollOptionsMenuVisible">
            <summary>
            Gets a value indicating whether the ScrollBar's options menu is currently visible.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbSize">
            <summary>
            Gets or sets the default thumb size.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Orientation">
            <summary>
            Gets the orientation of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarRectangle">
            <summary>
            Gets the ScrollBar's enclosing rectangle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.CreateParams">
            <summary>
            Overrides the CreateParams method to stop flickering issues 
            by setting the "WS_EX_COMPOSITED" (0x02000000) style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.VisualStyle">
            <summary>
            Gets or sets a preset visual style to be applied in the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.SliderThumbStyle">
            <summary>
            Gets or sets a style for the slider's thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbBorderThickness">
            <summary>
            Gets or sets the thumb's border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbFillColor">
            <summary>
            Gets or sets the thumb's inner fill color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ThumbDrawMode">
            <summary>
            Gets or sets the thumb's default draw-mode.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ValueChanged">
            <summary>
            Occurs whenever the Value property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Scroll">
            <summary>
            Occurs whenever the Scroll event has been raised.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.MouseCaptureChanged">
            <summary>
            Occurs after the mouse capture is changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ValueChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ValueChangedEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ValueChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ValueChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.MouseCaptureChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.MouseCaptureChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.MouseCaptureChangedEventArgs.#ctor(System.Int32,KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Direction)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.MouseCaptureChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.MouseCaptureChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.MouseCaptureChangedEventArgs.ThumbDirection">
            <summary>
            Gets the thumb's directional movement.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Scroll"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="!:VScrollbar.ScrollChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Allows for the processing of the assigned movement keys to the ScrollBar when active.
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Refresh">
            <summary>
            Redraws the control's surface.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BindTo(System.Windows.Forms.Control)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/> 
            to attach to.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BindTo(System.Windows.Forms.ScrollableControl)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/>.
            </summary>
            <param name="scrollableControl">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> to attach to.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BindTo(System.Windows.Forms.DataGridView,System.Boolean)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="dataGridView">
            The <see cref="T:System.Windows.Forms.DataGridView"/> to attach to.
            </param>
            <param name="allowSelection">
            Allow cell-selections when scrolling?
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DrawScrollBar">
            <summary>
            Draws the ScrollBar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DrawThumb(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's thumb.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="thumbPen">The pen used to draw the thumb.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the thumb.</param>
            <param name="height">The thumb's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DrawTopArrow(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws the ScrollBar's top arrow.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="arrowPen">The pen used to draw the arrow.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the arrow.</param>
            <param name="height">The arrow's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ArrowType,KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ArrowStyle,System.Drawing.Color)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name="g">The Graphics object.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="type">The type of arrow to be drawn.</param>
            <param name="style">The style of arrow to be rendered.</param>
            <param name="arrowColor">The arrow color to apply.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DrawArrow(System.Drawing.Graphics@,System.Drawing.Pen,KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ArrowType,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name = "graphics" > The Graphics canvas.</param>
            <param name = "arrowPen" > The pen used to draw the graphics surface.</param>
            <param name = "type" > The type of arrow to be drawn - either top or bottom.</param>
            <param name = "controlRectangle" > The rectangle surface on which to draw the graphics.</param>
            <param name = "thickness" > The thickness of the arrow.</param>
            <param name = "width" > The arrow's width.</param>
            <param name = "height" > The arrow's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DrawRoundedRectangle(System.Drawing.RectangleF,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws a rectangle in the indicated Rectangle rounding the indicated corners.
            </summary>
            <param name="rect"></param>
            <param name="xradius"></param>
            <param name="yradius"></param>
            <param name="round_ul"></param>
            <param name="round_ur"></param>
            <param name="round_lr"></param>
            <param name="round_ll"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DrawLayout(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Creates the control's container layout.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="Bounds">The canvas rectangle-bounds.</param>
            <param name="radius">The canvas corner-radius.</param>
            <param name="pen">The pen used to draw objects inside the canvas.</param>
            <param name="backColor">The layout's background color.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.HandleMouseCapture(System.Boolean)">
            <summary>
            Handles mouse-capture events in the ScrollBar.
            </summary>
            <param name="isInTimerMode">Prevents attaching multiple events when moving the thumb through the Timer when set to "true".</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BindToContainerControl">
            <summary>
            Automatically binds the attached container-control
            or DataGridView at runtime.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.IsControlScrollBindable(System.Windows.Forms.Control)">
            <summary>
            Determines if a certain control can 
            be bound-up with Tailwind Scrollbars.
            </summary>
            <param name="control">The control to determine.</param>
            <returns>True if scroll-bindable, or False if not scroll-bindable.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.DebugString(System.String)">
            <summary>
            Allows you to view the value of a parameter or object value from the parent form's "Html" caption.
            </summary>
            <param name="value">The value (in <see cref="T:System.String"/> format) to be printed.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BeginThumbMovement(System.Int32)">
            <summary>
            Begins moving the thumb using the Timer from the "MouseDown" event.
            </summary>
            <param name="movementIntervals">The timer intervals to skip before the thumb moves again.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.EndThumbMovement">
            <summary>
            Resets the duration set and then ends the thumb's movement in the 
            Timer from the "MouseUp" event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AutoGrowScrollBar">
            <summary>
            Adjusts the ScrollBar's size when inactive. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AutoShrinkScrollBar">
            <summary>
            Adjusts the ScrollBar's size when active. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Shrink(System.Object)">
            <summary>
            [Asynchronous] Called by the method <see cref="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.AutoShrinkScrollBar"/> to shrink the ScrollBar.
            </summary>
            <param name="stateInfo">May be used to represent the state of the ScrollBar.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.MoveThumb(System.Int32,System.Boolean)">
            <summary>
            Moves the thumb to a specified position.
            </summary>
            <param name="to">The new thumb's position.</param>
            <param name="allowTransition">Enable/disable the thumb's transition.
            Disabling the animation is important when handling on-demand thumb-change scenarios.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.MoveValue(System.Int32)">
            <summary>
            Moves any value to a newly specified position.
            </summary>
            <param name="to">The new value.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.PerformMouseEffect(KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.EffectType)">
            <summary>
            Performs a directed mouse effect to the control.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.SetThumbLength">
            <summary>
            Sets the appropriate length of the thumb.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.SetScrollBounds">
            <summary>
            Applies the standard scroll values responsible for setting the bounds of the ScrollBar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.IsPointInRect(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Determines whether rectangle contains given point.
            </summary>
            <param name="pt">The point to test.</param>
            <param name="rect">The base rectangle.</param>
            <returns>
            	<c>true</c> if rectangle contains given point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.IsMouseInThumb(System.Boolean)">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <param name="applyUniqueCheck">Applies a unique check whereby anywhere within the thumb's region is used instead of the thumb's rectangle region.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.IsMouseInScrollBar">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ConvertRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts the ScrollBar's size dimensions to the user-specified range dimensions.
            </summary>
            <param name="originalStart">The original starting point.</param>
            <param name="originalEnd">The original ending point.</param>
            <param name="newStart">The new starting point in the user-specified range.</param>
            <param name="newEnd">The new ending point in the user-specified range.</param>
            <param name="value">The value to be set within the range.</param>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BunifuVScrollBarActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BunifuVScrollBarActionList"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.BunifuVScrollBarActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarState">
            <summary>
            An abstract class used to define various states within Tailwind ScrollBars.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarState.#ctor(System.String)">
            <summary>
            Creates a new Tailwind ScrollBar state.
            </summary>
            <param name="name">Provide a name for the state. This can be used to track the state once initialized.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarState.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarState.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarState.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarState.ScrollBarBorderColor"/>, <see cref="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarState.ScrollBarColor"/>, 
            <see cref="P:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.ScrollBarState.ThumbColor"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSliders.VScrollbar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended">
            <summary>
            Provides button-like capabilities and image manipulation features when working with images.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.FlipOrientation">
            <summary>
            Provides flip-orientation options for images.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.FlipOrientation.Normal">
            <summary>
            Flip image to normal view.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.FlipOrientation.Horizontal">
            <summary>
            Flip image horizontally.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.FlipOrientation.Vertical">
            <summary>
            Flip image vertically.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageStates">
            <summary>
            Provides the various supported image-states
            generated from the applied Image.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageStates.Normal">
            <summary>
            Returns the normal image.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageStates.TotallyFaded">
            <summary>
            Returns a totally blurred image.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageStates.MediallyFaded">
            <summary>
            Returns a medially blurred image.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageStates.PartiallyFaded">
            <summary>
            Returns a partially blurred image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageMargin">
            <summary>
            Gets or sets the distance between the container and the underlying image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Zoom">
            <summary>
            Gets or sets the distance between the container and the underlying image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Rotation">
            <summary>
            Gets or sets the angle of rotation for the image.
            Please provide a value between 0 and 360.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ZoomSpeed">
            <summary>
            Gets or sets the time in milliseconds the zooming animation takes when active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Flip">
            <summary>
            Flips the image to any given orientation.
            Supports both Vertical and Horizontal orientation-flipping options.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Image">
            <summary>
            Gets or sets the image displayed in the image button.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageActive">
            <summary>
            (This property has been deprecated as of version 1.6.0.0. Please use the property 'ActiveImage' instead.)
            Gets or sets the image to be applied whenever the image button is active or hovered onto.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ActiveImage">
            <summary>
            Gets or sets the image to be applied whenever the image button is active or hovered onto.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageSize">
            <summary>
            Gets or sets the default image size.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageZoomSize">
            <summary>
            Gets or sets the maximum size of the image when hovered onto or active.
            This defaults to the standard set size of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ToolTipText">
            <summary>
            Allows you to easily get or set some ToolTip information to 
            be displayed to the user on mouse-hovering over the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ShowCursorChanges">
            <summary>
             Gets or sets a value indicating whether the control 
             will show cursor changes during mouse-hover events.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ShowActiveImage">
            <summary>
            Sets a value indicating whether the 'ActiveImage' 
            will be applied on mouse-hover.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.AllowZooming">
            <summary>
            Gets or sets a value indicating whether zooming is enabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.AllowAnimations">
            <summary>
            Gets or sets a value indicating whether animations are enabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.FadeWhenInactive">
            <summary>
            Automatically fades the image when inactive.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.IsZoomedIn">
            <summary>
            Gets a value indicating whether the image button is currently zoomed-in.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ShowSizeMarkers">
            <summary>
             Gets or sets a value indicating whether the size markers 
             displayed at the control's top-area will be visible during design-time.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ShowImageBorders">
            <summary>
             Gets or sets a value indicating whether borders will 
             be viewed for the image applied during design-time.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.CreateParams">
            <summary>
            Overrides the CreateParams method to stop flickering issues 
            by setting the "WS_EX_COMPOSITED" (0x02000000) style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageLocation">
            <summary>
            Gets or sets the path or URL for the image to display in the Image Button.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.WaitOnLoad">
            <summary>
            Gets or sets a value indicating whether an image is loaded synchronously.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.InitialImage">
            <summary>
            Gets or sets the image displayed in the Image
            Button when the main image is loading.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ErrorImage">
            <summary>
            Gets or sets the image displayed in the Image
            Button when an error occurs during the image-loading
            process or if the image load is canceled.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Calculate">
            <summary>
            Calculates the correct image-size as per the applied state.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Render(KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ImageStates)">
            <summary>
            Renders the required image as per the applied state.
            </summary>
            <param name="state">The image-state-type to be used.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Render(System.Int32)">
            <summary>
            Renders the required image as per the applied state.
            </summary>
            <param name="state">The image-state to be used.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ZoomIn">
            <summary>
            Zooms in the image to the preset size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.ZoomOut">
            <summary>
            Zooms out the image to its default size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Rotate(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Rotates the image to a set angle of rotation.
            </summary>
            <param name="allowAnimation">
            Allow animation the rotation event? If yes, the rotation will be animated from one angle to another.
            </param>
            <param name="angle">
            The angle of rotation to apply. Please provide a value between 0 and 360.
            </param>
            <param name="animationSpeed">
            The rotating animation speed in milliseconds to apply. Default speed is 500(ms).
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Load(System.String)">
            <summary>
            Sets the ImageLocation to the specified URL and displays the image indicated.
            </summary>
            <param name="url">The path for the image to display in the Image Button.</param>
            Exceptions:
            <exception cref="T:System.InvalidOperationException">Thrown if url is null or an empty string.</exception>
            <exception cref="T:System.Net.WebException">Thrown if url refers to an image on the Web that cannot be accessed.</exception>
            <exception cref="T:System.ArgumentException">Thrown if url refers to a file that is not an image.</exception>
            <exception cref="!:IO.FileNotFoundException">Thrown if url refers to a file that does not exist.</exception>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Load">
            <summary>
            Displays the image specified by the ImageLocation property of the Image Button.
            </summary>
            Exceptions:
            <exception cref="T:System.InvalidOperationException">Thrown if ImageLocation is null or an empty string.</exception>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.LoadAsync">
            <summary>
            Loads the image asynchronously.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.LoadAsync(System.String)">
            <summary>
            Loads the image at the specified location, asynchronously.
            </summary>
            <param name="url">The path for the image to display in the Image Button.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.CancelAsync">
            <summary>
            Cancels an asynchronous image load.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.BunifuImageButtonExtended.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions">
            <summary>
            Image-rendering extensions class for Tailwind Image Button.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.FlipOrientation">
            <summary>
            Provides flip-orientation options for image containers.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.FlipOrientation.Normal">
            <summary>
            Flip image to normal setting.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.FlipOrientation.Horizontal">
            <summary>
            Flip image horizontally.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.FlipOrientation.Vertical">
            <summary>
            Flip image vertically.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.Rotate(System.Drawing.Graphics,System.Double,System.Int32,System.Int32)">
            <summary>
            Rotates an image container to a specified angle or degree.
            </summary>
            <param name="graphics">The graphics object to be used.</param>
            <param name="rotation">The angle of rotation.</param>
            <param name="width">The final width of the image.</param>
            <param name="height">The final height of the image.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.Flip(System.Drawing.Graphics,KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.FlipOrientation,System.Int32,System.Int32)">
            <summary>
            Flips an image container to a specified position.
            </summary>
            <param name="graphics">The graphics object to be used.</param>
            <param name="flip">The flip orientation.</param>
            <param name="width">The final width of the image.</param>
            <param name="height">The final height of the image.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.Flip(System.Drawing.Image,KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.FlipOrientation)">
            <summary>
            Flips an image container to a specified position.
            </summary>
            <param name="graphics">The graphics object to be used.</param>
            <param name="flip">The flip orientation.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.ToRotateFlip(KimTools.WinForms.KtToastHelpers.KtSnackbar.ImageExtensions.FlipOrientation)">
            <summary>
            Flips an image container to a specified position without an angle of rotation.
            </summary>
            <param name="flip">The flip orientation.</param>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton">
            <summary>
            Provides a highly customizable button with improved 
            styling options and additional feature improvements.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.#ctor">
            <summary>
            Creates a new <see cref="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton"/> control.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderStyles">
            <summary>
            Provides various styles for customizing the border.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderStyles.Solid">
            <summary>
            Defaults to a solid border style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderStyles.Dash">
            <summary>
            Defaults to a dash border style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderStyles.Dot">
            <summary>
            Defaults to a dotted border style.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ButtonStates">
            <summary>
            Defines various states in a Button's activity cycle.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ButtonStates.Idle">
            <summary>
            Denotes the Button's idle state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ButtonStates.Hover">
            <summary>
            Denotes the Button's mouse-hover state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ButtonStates.Pressed">
            <summary>
            Denotes the Button's mouse-press or click state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ButtonStates.Disabled">
            <summary>
            Denotes the Button's disabled state.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.state">
            <summary>
            [Internal] Defines various states in a control's activity cycle.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.state.idle">
            <summary>
            There is no activity.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.state.hover">
            <summary>
            The control is in mouse-hover state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.state.pressed">
            <summary>
            The control is in mouse-click or press state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.state.disabled">
            <summary>
            The control is disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.AllowToggling">
            <summary>
            Gets or sets a value indicating whether 
            the button will be automatically toggled 
            to receive or release focus when clicked.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.AutoGenerateColors">
            <summary>
            When set to true, the button's <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IdleFillColor"/> 
            and <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IdleBorderColor"/> will be used to generate 
            colors for the various states supported.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.AutoSize">
            <summary>
            Specifies whether the Button will automatically 
            size it's with to fit its contents. Use <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.TextMarginLeft"/> 
            property to set the <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.Text"/> padding (edges' distance).
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IndicateFocus">
            <summary>
            Gets or sets a value indicating whether the 
            Button will provide a visual cue when focused.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.AnimationSpeed">
            <summary>
            Gets or sets the Button's animation speed (in milliseconds) 
            when moving from one state to another.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IconPadding">
            <summary>
            Gets or sets the Button's padding for
            both the left and the right icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IconMarginLeft">
            <summary>
            Gets or sets the Button's left icon margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.TextMarginLeft">
            <summary>
            Gets or sets the Button's left text margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IdleBorderRadius">
            <summary>
            Gets or sets the Button's border radius when idle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IdleBorderThickness">
            <summary>
            Gets or sets the button's border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ColorContrastOnHover">
            <summary>
            Sets how dark or light the button's color will 
            be whenever a mouse-hover event has occurred.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ColorContrastOnClick">
            <summary>
            Sets how dark or light the button's color will 
            be whenever a mouse-click event has occurred.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IconRightCursor">
            <summary>
            Gets or sets the Button's right icon cursor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IconLeftCursor">
            <summary>
            Gets or sets the Button's left icon cursor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IdleIconLeftImage">
            <summary>
            Gets or sets the Button's left icon when idle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IdleIconRightImage">
            <summary>
            Gets or sets the Button's right icon when idle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.Font">
            <summary>
            Gets or sets the Button's default font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.DisabledBorderColor">
            <summary>
            Gets or sets the Button's border color when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.DisabledFillColor">
            <summary>
            Gets or sets the Button's background color when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.DisabledForecolor">
            <summary>
            Gets or sets the Button's foreground color when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IdleBorderColor">
            <summary>
            Gets or sets the Button's border color when idle/inactive.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IdleFillColor">
            <summary>
            Gets or sets the Button's background/fill color when idle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ForeColor">
            <summary>
            Gets or sets the Button's foreground color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.OnIdleState">
            <summary>
            Gets or sets the Button's idle state design.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.onHoverState">
            <summary>
            Gets or sets the Button's hover state design.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.OnPressedState">
            <summary>
            Gets or sets the Button's pressed state design.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderStyle">
            <summary>
            Gets or sets the Button's border style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.FocusState">
            <summary>
            Gets or sets the state to use when the Button 
            contains focus while the cursor is away.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.DialogResult">
            <summary>
            Gets or sets the <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.DialogResult"/> returned by the Button.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.CustomizableEdges">
            <summary>
            Gets or sets the list of border edges that will 
            be customized whenever the border radius is applied.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.LeftIcon">
            <summary>
            Gets the left icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.RightIcon">
            <summary>
            Gets the right icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.UseDefaultRadiusAndThickness">
            <summary>
            Gets or sets a value indicating whether other states will automatically 
            use the idle state's border-radius and border-thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IsDefault">
            <summary>
            Gets or sets a value indicating whether the 
            Tailwind button control is the default button.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.Toggled">
            <summary>
            Gets a value indicating whether  
            the button has been clicked.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.OnDisabledState">
            <summary>
            Gets or sets the Button's disabled state design.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ButtonText">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ButtonTextMarginLeft">
            <summary>
            Gets or sets the Button's left text margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.PreferredHeight">
            <summary>
            Gets the preferred Button's height.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BackColor">
            <summary>
            Gets or sets the Button's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BackColor1">
            <summary>
            [Internal] Gets or sets the initial Button's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BackgroundImage">
            <summary>
            Gets or sets the Button's background image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.TextAlign">
            <summary>
            Gets or sets the Button's text alignment.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties">
            <summary>
            Provides options for use when creating a 
            list of properties for use when defining a  
            control's various activity states.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties.BorderRadius">
            <summary>
            Gets or sets the control's border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties.BorderThickness">
            <summary>
            Gets or sets the control's border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties.ForeColor">
            <summary>
            Gets or sets the control's foreground color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties.FillColor">
            <summary>
            Gets or sets the control's background/fill color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties.BorderColor">
            <summary>
            Gets or sets the control's border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties.IconRightImage">
            <summary>
            Gets or sets the control's right icon-image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties.IconLeftImage">
            <summary>
            Gets or sets the control's left icon-image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties.BorderStyle">
            <summary>
            Gets or sets the control's border style.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties.ToString">
            <summary>
            Returns a string containing the object's 
            properties and their values.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderEdges">
            <summary>
            Includes the list of available border edges or dimensions 
            that can be customized or excluded when styling controls.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderEdges.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderEdges"/> class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderEdges.TopLeft">
            <summary>
             Gets or sets a value indicating whether 
             the top-left edge will be included.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderEdges.TopRight">
            <summary>
             Gets or sets a value indicating whether 
             the top-right edge will be included.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderEdges.BottomLeft">
            <summary>
             Gets or sets a value indicating whether 
             the bottom-left edge will be included.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderEdges.BottomRight">
            <summary>
             Gets or sets a value indicating whether 
             the bottom-right edge will be included.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BorderEdges.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the 
            list of properties and their applied values.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.CreateParams">
            <summary>
            Gets the list of created control parameters.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.GetCurrentState">
            <summary>
            Gets the Button's current activity state.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.Refresh">
            <summary>
            Redraws the control's layout.
            </summary>
            <param name="useTimer">Loop redraws using a timer?</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ApplyState(KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties)">
            <summary>
            Sets a specified state to the button.
            </summary>
            <param name="state">
            The state to apply.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.PerformClick">
            <summary>
            Generates a 'Click' event for the button.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.Reset">
            <summary>
            Resets the control's temporary values to their defaults.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.Reset(KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.StateProperties)">
            <summary>
            Resets the button's current visual state to another state.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.ResetColors">
            <summary>
            Resets the control's temporary color values to their defaults.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.NotifyDefault(System.Boolean)">
            <summary>
            Notifies the Button whether it is the default button 
            so that it can adjust its appearance accordingly.
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.GenerateColors(System.Boolean)">
            <summary>
            Generates colors for the the various states supported using 
            the button's <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IdleFillColor"/> and 
            <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IdleBorderColor"/> properties.
            </summary>
            <param name="invalidate">Redraw the control's surface?</param>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IconLeftClick">
            <summary>
            Occurs when the Button's left icon is clicked.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.IconRightClick">
            <summary>
            Occurs when the Button's right icon is clicked.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BunifuButtonActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BunifuButtonActionList"/> class.
            </summary>
            <seealso cref="T:Microsoft.DotNet.DesignTools.Designers.Actions.DesignerActionList" />
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.BunifuButtonActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtToastActionButton.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.Indicator.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Indicator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Indicator.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock">
            <summary>
            Provides enhanced and customizable form-docking capabilities to borderless Windows Forms.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.#ctor">
            <summary>
            Creates a new Tailwind Form Dock component.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.BunifuWindowStates">
            <summary>
            Provides a general list of window-states available
            for use in borderless Forms displayed on-screen.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/>
            enumeration but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.BunifuWindowStates.Normal">
            <summary>
            A normal window.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.BunifuWindowStates.Maximized">
            <summary>
            A maximized window.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.BunifuWindowStates.Minimized">
            <summary>
            A minimized window.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormWindowStates">
            <summary>
            Provides a general list of window-states available
            for use in borderless Forms displayed on-screen.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/>
            enumeration but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormWindowStates.Normal">
            <summary>
            A normal window.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormWindowStates.Maximized">
            <summary>
            A maximized window.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormWindowStates.Minimized">
            <summary>
            A minimized window.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockIndicators">
            <summary>
            Provides a list of available docking indicators 
            visible when dragging forms on-screen.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockIndicators.None">
            <summary>
            No indicator is shown.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockIndicators.Left">
            <summary>
            The left dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockIndicators.Right">
            <summary>
            The right dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockIndicators.TopLeft">
            <summary>
            The top-left dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockIndicators.TopRight">
            <summary>
            The top-right dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockIndicators.FullScreen">
            <summary>
            The full-screen dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockIndicators.BottomLeft">
            <summary>
            The bottom-left dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockIndicators.BottomRight">
            <summary>
            The bottom-right dock indicator.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockPositions">
            <summary>
            Provides a list of supported form-docking positions.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockPositions.None">
            <summary>
            No dock position applied.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockPositions.Left">
            <summary>
            The left dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockPositions.Right">
            <summary>
            The right dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockPositions.TopLeft">
            <summary>
            Tge top-left dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockPositions.TopRight">
            <summary>
            The top-right dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockPositions.FullScreen">
            <summary>
            The full-screen dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockPositions.BottomLeft">
            <summary>
            The bottom-left dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockPositions.BottomRight">
            <summary>
            The bottom-right dock position.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.AllowHidingBottomRegion">
            <summary>
            When set to true, a white region that is drawn
            at the bottom of the parent form will be hidden; 
            however, when set to false, this region will be 
            exposed at runtime.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.BorderOptions">
            <summary>
            Gets or sets Form border options that can be 
            used to add and style borders on the parent form.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockingOptions">
            <summary>
            Gets or sets the docking options to be used in the parent form.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.TitleBarOptions">
            <summary>
            Gets or sets the list of options for selecting and managing 
            any control that is set as the parent form's Title Bar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.AllowDockingKeys">
            <summary>
            Gets or sets a value indicating whether the parent form will allow 
            the standard Windows docking keys to be supported at runtime.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.AllowFormDragging">
            <summary>
            Gets or sets a value indicating whether the parent form will be draggable.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.AllowFormDropShadow">
            <summary>
            Gets or sets a value indicating whether the parent form will have a drop-shadow along its borders..
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.AllowFormResizing">
            <summary>
            Gets or sets a value indicating whether the parent form will be resizable when borderless.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.AllowOpacityChangesWhileDragging">
            <summary>
            Gets or sets a value indicating whether the parent form's opacity or transparency 
            will be changed whenever it's being dragged on screen.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.ShowCursorChanges">
            <summary>
            Gets or sets a value indicating whether cursor-changes 
            will be provided when about to dock the parent form.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.ShowDockingIndicators">
            <summary>
            Gets or sets a value indicating whether the docking indicators 
            will be previewed before the parent form is docked.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockingIndicatorsColor">
            <summary>
            Gets or sets the color of the docking indicators.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockingIndicatorsOpacity">
            <summary>
            Gets or sets the opacity or transparency of the docking indicators.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormDraggingOpacity">
            <summary>
            Gets or sets the opacity or transparency of the parent form when dragging.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.WindowState">
            <summary>
            Gets or sets the window-state for the form.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/> enumeration
            but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.BunifuWindowState">
            <summary>
            Gets or sets the window-state for the form.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/> enumeration
            but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.ContainerControl">
            <summary>
            Gets or sets the container control within the parent form.
            In most cases, this refers and results to the parent form.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.ParentForm">
            <summary>
            Gets or sets the container control as the parent form.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.Site">
            <summary>
            Overrides the ISite functionality, getting the main or parent
            container control in the Form. This is overriden to get the
            component's host or parent form.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.AddBottomSeparator(System.Drawing.Color,System.Int32,System.Boolean)">
            <summary>
            Adds a bottom Line Separator to the attached Parent Form.
            </summary>
            <param name="color">Sets the background color of the Separator.</param>
            <param name="height">Sets the height of the Separator.</param>
            <param name="dockSeparator">
            Allow docking the Separator to the bottom area? (Disabled by default)
            If allowed, the Separator will be docked to the bottom-most area
            of the Parent Form; else, it will be anchored to the bottom-most area.
            Both options however perform the same way at runtime.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.SubscribeControlToDragEvents(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Subscribes any control specified to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="control">
            The control to be subscribed to the drag events.
            </param>
            <param name="isPartOfTitleBar">
            If the control is a part of the Title Bar section, set this parameter 
            to true in order for the control to be subscribed to the 
            <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.SubscribeControlsToDragEvents(System.Windows.Forms.Control[],System.Boolean)">
            <summary>
            Subscribes an array of controls specified to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="controls">
            An array of controls to be subscribed to the drag events.
            </param>
            <param name="arePartOfTitleBar">
            If the controls are part of the Title Bar section, set this parameter 
            to true in order for the controls to be subscribed to the 
            <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.UnsubscribeControlToDragEvents(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Unsubscribes any control attached to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="control">
            The control previously attached to the drag events.
            </param>
            <param name="wasPartOfTitleBar">
            If the control was a part of the Title Bar section, set this parameter 
            to true in order for the control to be unsubscribed to the 
            <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.UnsubscribeControlsToDragEvents(System.Windows.Forms.Control[],System.Boolean)">
            <summary>
            Unsubscribes an array of controls attached to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="controls">
            An array of controls previously attached to the drag events.
            </param>
            <param name="werePartOfTitleBar">
            If the controls were part of the Title Bar section, set this parameter 
            to true in order for the controls to be unsubscribed to the 
            <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.ParentFormIsNormal">
            <summary>
            Checks if the parent form is in the normal state.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockedLeft">
            <summary>
            Checks if the parent form is docked to the left.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockedTopLeft">
            <summary>
            Checks if the parent form is docked to the top-left.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockedBottomLeft">
            <summary>
            Checks if the parent form is docked to the bottom-left.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockedRight">
            <summary>
            Checks if the parent form is docked to the right.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockedTopRight">
            <summary>
            Checks if the parent form is docked to the ltop-right.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockedBottomRight">
            <summary>
            Checks if the parent form is docked to the bottom-right.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.ExpandWindow">
            <summary>
            Expands the parent form to fit the current screen dimensions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockLeft">
            <summary>
            Docks the parent form to the left area of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockTopLeft">
            <summary>
            Docks the parent form to the top-left corner of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockBottomLeft">
            <summary>
            Docks the parent form to the bottom-left corner of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockRight">
            <summary>
            Docks the parent form to the right area of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockTopRight">
            <summary>
            Docks the parent form to the top-right corner of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockBottomRight">
            <summary>
            Docks the parent form to the bottom-right corner of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.IndicateFullScreenDocking">
            <summary>
            Indicates that the parent form is about to be docked to full-screen mode.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.IndicateLeftDocking">
            <summary>
            Indicates that the parent form is about to be docked to the left screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.IndicateTopLeftDocking">
            <summary>
            Indicates that the parent form is about to be docked to the top-left screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.IndicateBottomLeftDocking">
            <summary>
            Indicates that the parent form is about to be docked to the bottom-left screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.IndicateRightDocking">
            <summary>
            Indicates that the parent form is about to be docked to the right screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.IndicateTopRightDocking">
            <summary>
            Indicates that the parent form is about to be docked to the top-right screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.IndicateBottomRightDocking">
            <summary>
            Indicates that the parent form is about to be docked to the bottom-right screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.IndicateNormalPositioning">
            <summary>
            Indicates that the parent form is about to be reverted to
            its normal or original dimensions as per its size and location.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.HideDockingIndicators">
            <summary>
            Hides any visual cues that may have been displayed when
            docking the parent form.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.ShowDockingAreaIndicators">
            <summary>
            Displays any visual cues based on the area the parent form
            is about to be docked to.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.AddFormBorders(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds borders to the parent form.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.MaskBottomMargin">
            <summary>
            Masks the bottom margin added to the
            Parent Form when a drop-shadow is provided.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.CreateBitmap(System.Drawing.Color,System.Drawing.Size)">
            <summary>
            Creates a colored Bitmap Image.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/> to be applied.</param>
            <param name="size">The <see cref="T:System.Drawing.Size"/> of the Bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.ProvideFirstTimeOptionsGuide">
            <summary>
            This method takes the user through a quick set of first-time options
            available to use in order to guide them on the component's usage.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.OnLoad(System.Object,System.EventArgs)">
            <summary>
            Raises the parent form's "OnLoad" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the parent form's "OnLoad" event. </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.OnResizeEnd(System.Object,System.EventArgs)">
            <summary>
            Raises the parent form's "OnResizeEnd" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the parent form's "OnResizeEnd" event. </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the component's "KeyDown" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "KeyDown" event. </param>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormDragging">
            <summary>
            Occurs whenever the parent form is being dragged.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockChanged">
            <summary>
            Occurs whenever the <see cref="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockingOptions"/> property has been changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormDraggingEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormDragging"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormDraggingEventArgs.#ctor(System.Drawing.Point,KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockIndicators)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormDragging"/> event.
            </summary>
            <param name="cursorPosition">The position of the cursor on the screen.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormDraggingEventArgs.CursorPosition">
            <summary>
            Gets the current position of the cursor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.FormDraggingEventArgs.ShownIndicator">
            <summary>
            Gets the indicator that is currently being shown
            as the parent form is being dragged.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockChangedEventArgs.#ctor(KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockPositions)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockChanged"/> event.
            </summary>
            <param name="dockPosition">The currently docked position of the parent form.</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.DockChangedEventArgs.DockPosition">
            <summary>
            Gets the docked position the parent form is on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the component's "MouseUp" event. 
            Use this to attach any control's "MouseUp" event to this "OnMouseUp" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseUp" event. </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the component's "MouseMove" event.
            Use this to attach any control's "MouseMove" event to this "OnMouseMove" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseMove" event. </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the component's "MouseDown" event.
            Use this to attach any control's "MouseDown" event to this "OnMouseDown" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseDown" event. </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.OnDoubleClickTitleBar(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the attached Title Bar's "MouseDoubleClick" event.
            </summary>
            Use this to attach any control's "MouseDoubleClick" event to this "MouseDoubleClick" event.
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseDoubleClick" event. </param>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.BunifuComponentActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.BunifuComponentActionList"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.BunifuComponentActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.KtFormDock.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.WindowHandler">
            <summary>
            Attaches, accesses and extends any Windows Form specified outside its own class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.WindowHandler.#ctor(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            Creates a window handle to any specified Windows Form.
            </summary>
            <param name="parent">The parent form to handle.</param>
            <param name="allowResizing">Allow the parent form to resize?</param>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.WindowHandler.BunifuFormDock">
            <summary>
            Gets or sets the Tailwind Form Dock instance to be accessed and used.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions">
            <summary>
            Provides a list of supported docking options in Windows Forms.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions.#ctor">
            <summary>
            Creates a new Docking Options class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions.DockAll">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to all supported screen areas.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions.DockLeft">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the left screen area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions.DockRight">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the right screen area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions.DockFullScreen">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to fill the screen's dimensions.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions.DockTopLeft">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the top-left screen area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions.DockTopRight">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the top-right screen area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions.DockBottomLeft">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the bottom-left screen area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions.DockBottomRight">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the bottom-right screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.DockOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of docking options 
            provided and their applied statuses separated by semi-colons.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions">
            <summary>
            Provides a list of options for selecting and managing any 
            control that is to be used as the parent form's Title Bar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.#ctor">
            <summary>
            Creates a new Title Bar Options class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.BunifuFormDock">
            <summary>
            Gets or sets the Tailwind Form Dock instance to be accessed and used.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.TitleBarControl">
            <summary>
             Gets or sets the control to be used as the parent form's Title Bar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.DoubleClickToExpandWindow">
            <summary>
             Gets or sets a value indicating whether the Title Bar control 
             will expand the parent form once a user double-clicks on it.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.UseBackColorOnDockingIndicators">
            <summary>
             Gets or sets a value indicating whether the docking indicators
             will inherit the Title Bar's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.AllowFormDragging">
            <summary>
             Gets or sets a value indicating whether the Title Bar control 
             will be allowed to drag the parent form at runtime.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.TitleBarOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of Title Bar options 
            provided and their applied property values separated by semi-colons.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.FormBorderOptions">
            <summary>
            Provides a list of options for customizing
            a borderless Form's border regions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.FormBorderOptions.#ctor">
            <summary>
            Creates a new Form Border Options class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.FormBorderOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of Form Border Options 
            provided and their applied property values separated by semi-colons.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.FormBorderOptions.BorderRegion">
            <summary>
            Provides a list of options for customizing
            a borderless Form's single border region.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.FormBorderOptions.BorderRegion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of Form Border Options 
            provided and their applied property values separated by semi-colons.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Shadower">
            <summary>
            This class is primarily used to apply
            a neat and decent drop-shadow effect
            to any Windows Form using the method
            <see cref="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Shadower.ApplyShadows(System.Windows.Forms.Form)"/>.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Win32API.Win32">
            <summary>
            Summary description for Win32.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Extensions.ColorExtensions">
            <summary>
            Provides a collection of methods that extend the .NET Color class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtSnackbar.Views.SnackbarView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Views.SnackbarView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtSnackbar.Views.SnackbarView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.IManagedType">
            <summary>
            Interface for all types we can perform transitions on. 
            Each type (e.g. int, double, Color) that we can perform a transition on 
            needs to have its own class that implements this interface. These classes 
            tell the transition system how to act on objects of that type.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.IManagedType.getManagedType">
            <summary>
            Returns the Type that the instance is managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.IManagedType.copy(System.Object)">
            <summary>
            Returns a deep copy of the object passed in. (In particular this is 
            needed for types that are objects.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.IManagedType.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an object holding the value between the start and end corresponding
            to the percentage passed in. (Note: the percentage can be less than 0% or
            greater than 100%.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ITransitionType.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called by the Transition framework when its timer ticks to pass in the
            time (in ms) since the transition started. 
            
            You should return (in an out parameter) the percentage movement towards 
            the destination value for the time passed in. Note: this does not need to
            be a smooth transition from 0% to 100%. You can overshoot with values
            greater than 100% or undershoot if you need to (for example, to have some
            form of "elasticity").
            
            The percentage should be returned as (for example) 0.1 for 10%.
            
            You should return (in an out parameter) whether the transition has completed.
            (This may not be at the same time as the percentage has moved to 100%.)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Color">
            <summary>
            Class that manages transitions for Color properties. For these we
            need to transition the R, G, B and A sub-properties independently.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Color.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Color.copy(System.Object)">
            <summary>
            Returns a copy of the color object passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Color.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Creates an intermediate value for the colors depending on the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Double">
            <summary>
            Manages transitions for double properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Double.getManagedType">
            <summary>
             Returns the type managed by this class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Double.copy(System.Object)">
            <summary>
            Returns a copy of the double passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Double.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between start and end for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Float.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Float.copy(System.Object)">
            <summary>
            Returns a copy of the float passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Float.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the interpolated value for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Int">
            <summary>
            Manages transitions for int properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Int.getManagedType">
            <summary>
            Returns the type we are managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Int.copy(System.Object)">
            <summary>
            Returns a copy of the int passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_Int.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns the value between the start and end for the percentage passed in.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_String">
            <summary>
            Manages transitions for strings. This doesn't make as much sense as transitions
            on other types, but I like the way it looks!
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_String.getManagedType">
            <summary>
            Returns the type we're managing.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_String.copy(System.Object)">
            <summary>
            Returns a copy of the string passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ManagedType_String.getIntermediateValue(System.Object,System.Object,System.Double)">
            <summary>
            Returns an "interpolated" string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition">
            <summary>
            Lets you perform animated transitions of properties on arbitrary objects. These 
            will often be transitions of UI properties, for example an animated fade-in of 
            a UI object, or an animated move of a UI object from one position to another.
            
            Each transition can simulataneously change multiple properties, including properties
            across multiple objects.
            
            Example transition
            ------------------
            a.      Transition t = new Transition(new TransitionMethod_Linear(500));
            b.      t.add(form1, "Width", 500);
            c.      t.add(form1, "BackColor", Color.Red);
            d.      t.run();
              
            Line a:         Creates a new transition. You specify the transition method.
                            
            Lines b. and c: Set the destination values of the properties you are animating.
            
            Line d:         Starts the transition.
            
            Transition methods
            ------------------
            TransitionMethod objects specify how the transition is made. Examples include
            linear transition, ease-in-ease-out and so on. Different transition methods may
            need different parameters.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.#cctor">
            <summary>
            You should register all managed-types here.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.Args">
            <summary>
            Args passed with the TransitionCompletedEvent.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.TransitionCompletedEvent">
            <summary>
            Event raised when the transition hass completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.run(System.Object,System.String,System.Object,KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ITransitionType)">
            <summary>
            Creates and immediately runs a transition on the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.run(System.Object,System.String,System.Object,System.Object,KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ITransitionType)">
            <summary>
            Sets the property passed in to the initial value passed in, then creates and 
            immediately runs a transition on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.runChain(KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition[])">
            <summary>
            Creates a TransitionChain and runs it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.#ctor(KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.ITransitionType)">
            <summary>
            Constructor. You pass in the object that holds the properties 
            that you are performing transitions on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.add(System.Object,System.String,System.Object)">
            <summary>
            Adds a property that should be animated as part of this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.run">
            <summary>
            Starts the transition.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.TransitionedProperties">
            <summary>
            Property that returns a list of information about each property managed
            by this transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.removeProperty(KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.TransitionedPropertyInfo)">
            <summary>
            We remove the property with the info passed in from the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.onTimer">
            <summary>
            Called when the transition timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.setProperty(System.Object,KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.PropertyUpdateArgs)">
            <summary>
            Sets a property on the object passed in to the value passed in. This method
            invokes itself on the GUI thread if the property is being invoked on a GUI 
            object.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.isDisposed(System.Object)">
            <summary>
            Returns true if the object passed in is a Control and is disposed
            or in the process of disposing. (If this is the case, we don't want
            to make any changes to its properties.)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.registerType(KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.IManagedType)">
            <summary>
            Registers a transition-type. We hold them in a map.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionChain.runNextTransition">
            <summary>
            Runs the next transition in the list.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionChain.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.Args)">
            <summary>
            Called when the transition we have just run has completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionElement.#ctor(System.Double,System.Double,KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.InterpolationMethod)">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionElement.EndTime">
            <summary>
            The percentage of elapsed time, expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionElement.EndValue">
            <summary>
            The value of the animated properties at the EndTime. This is the percentage 
            movement of the properties between their start and end values. This should
            be expressed as (for example) 75 for 75%.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionElement.InterpolationMethod">
            <summary>
            The interpolation method to use when moving between the previous value
            and the current one.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionManager">
            <summary>
            This class is responsible for running transitions. It holds the timer that
            triggers transaction animation. 
            </summary><remarks>
            This class is a singleton.
            
            We manage the transaction timer here so that we can have a single timer
            across all transactions. If each transaction has its own timer, this creates
            one thread for each transaction, and this can lead to too many threads in
            an application.
            
            This class essentially just manages the timer for the transitions. It calls 
            back into the running transitions, which do the actual work of the transition.
            
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionManager.getInstance">
            <summary>
            Singleton's getInstance method.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionManager.register(KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition)">
            <summary>
            You register a transition with the manager here. This will start to run
            the transition as the manager's timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition)">
            <summary>
            Checks if any existing transitions are acting on the same properties as the
            transition passed in. If so, we remove the duplicated properties from the 
            older transitions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionManager.removeDuplicates(KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition,KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition)">
            <summary>
            Finds any properties in the old-transition that are also in the new one,
            and removes them from the old one.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionManager.#ctor">
            <summary>
            Private constructor (for singleton).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionManager.onTimerElapsed(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            Called when the timer ticks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionManager.onTransitionCompleted(System.Object,KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Transition.Args)">
            <summary>
            Called when a transition has completed. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Acceleration">
            <summary>
            Manages transitions under constant acceleration from a standing start.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Acceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Acceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 0, and the acceleration to get to 1.0
            at t=1.0 is 2, so the formula just becomes:
              s = t^2
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Bounce">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is accelerated to the destination and then decelerated back
            as if being dropped with gravity and bouncing back against gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Bounce.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_CriticalDamping">
            <summary>
            This transition animates with an exponential decay. This has a damping effect
            similar to the motion of a needle on an electomagnetically controlled dial.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_CriticalDamping.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_CriticalDamping.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Deceleration">
            <summary>
            Manages a transition starting from a high speed and decelerating to zero by
            the end of the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Deceleration.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Deceleration.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            The initial velocity is 2, and the acceleration to get to 1.0
            at t=1.0 is -2, so the formula becomes:
              s = t(2-t)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_EaseInEaseOut">
            <summary>
            Manages an ease-in-ease-out transition. This accelerates during the first 
            half of the transition, and then decelerates during the second half.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_EaseInEaseOut.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time that the transition 
            will take (in milliseconds).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_EaseInEaseOut.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Works out the percentage completed given the time passed in.
            This uses the formula:
              s = ut + 1/2at^2
            We accelerate as at the rate needed (a=4) to get to 0.5 at t=0.5, and
            then decelerate at the same rate to end up at 1.0 at t=1.0.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Flash">
            <summary>
            This transition type 'flashes' the properties a specified number of times, ending
            up by reverting them to their initial values. You specify the number of bounces and
            the length of each bounce. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Flash.#ctor(System.Int32,System.Int32)">
            <summary>
            You specify the number of bounces and the time taken for each bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Linear">
            <summary>
            This class manages a linear transition. The percentage complete for the transition
            increases linearly with time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Linear.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the time (in milliseconds) that the
            transition will take.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_Linear.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            We return the percentage completed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_ThrowAndCatch">
            <summary>
            This transition bounces the property to a destination value and back to the
            original value. It is decelerated to the destination and then acclerated back
            as if being thrown against gravity and then descending back with gravity.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_ThrowAndCatch.#ctor(System.Int32)">
            <summary>
            Constructor. You pass in the total time taken for the bounce.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_UserDefined">
            <summary>
            This class allows you to create user-defined transition types. You specify these
            as a list of TransitionElements. Each of these defines: 
            End time , End value, Interpolation method
            
            For example, say you want to make a bouncing effect with a decay:
            
            EndTime%    EndValue%   Interpolation
            --------    ---------   -------------
            50          100         Acceleration 
            75          50          Deceleration
            85          100         Acceleration
            91          75          Deceleration
            95          100         Acceleration
            98          90          Deceleration
            100         100         Acceleration
            
            The time values are expressed as a percentage of the overall transition time. This 
            means that you can create a user-defined transition-type and then use it for transitions
            of different lengths.
            
            The values are percentages of the values between the start and end values of the properties
            being animated in the transitions. 0% is the start value and 100% is the end value.
            
            The interpolation is one of the values from the InterpolationMethod enum.
            
            So the example above accelerates to the destination (as if under gravity) by
            t=50%, then bounces back up to half the initial height by t=75%, slowing down 
            (as if against gravity) before falling down again and bouncing to decreasing 
            heights each time.
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_UserDefined.#ctor">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_UserDefined.#ctor(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionElement},System.Int32)">
            <summary>
            Constructor. You pass in the list of TransitionElements and the total time
            (in milliseconds) for the transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_UserDefined.setup(System.Collections.Generic.IList{KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionElement},System.Int32)">
            <summary>
            Sets up the transitions. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_UserDefined.onTimer(System.Int32,System.Double@,System.Boolean@)">
            <summary>
            Called to find the value for the movement of properties for the time passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.TransitionType_UserDefined.getElementInfo(System.Double,System.Double@,System.Double@,System.Double@,System.Double@,KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.InterpolationMethod@)">
            <summary>
            Returns the element info for the time-fraction passed in. 
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Utility">
            <summary>
            A class holding static utility functions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Utility.getValue(System.Object,System.String)">
            <summary>
            Returns the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Utility.setValue(System.Object,System.String,System.Object)">
            <summary>
            Sets the value of the property passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Utility.interpolate(System.Double,System.Double,System.Double)">
            <summary>
            Returns a value between d1 and d2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Utility.interpolate(System.Int32,System.Int32,System.Double)">
            <summary>
            Returns a value betweeen i1 and i2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Utility.interpolate(System.Single,System.Single,System.Double)">
            <summary>
            Returns a value betweeen f1 and f2 for the percentage passed in.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Utility.convertLinearToEaseInEaseOut(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under an ease-in-ease-out transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Utility.convertLinearToAcceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant acceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Utility.convertLinearToDeceleration(System.Double)">
            <summary>
            Converts a fraction representing linear time to a fraction representing
            the distance traveled under a constant deceleration transition.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Transitions.Utility.raiseEvent``1(System.EventHandler{``0},System.Object,``0)">
            <summary>
            Fires the event passed in in a thread-safe way. 
            </summary><remarks>
            This method loops through the targets of the event and invokes each in turn. If the
            target supports ISychronizeInvoke (such as forms or controls) and is set to run 
            on a different thread, then we call BeginInvoke to marshal the event to the target
            thread. If the target does not support this interface (such as most non-form classes)
            or we are on the same thread as the target, then the event is fired on the same
            thread as this is called from.
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended">
            <summary>
            Provides button-like capabilities and image manipulation features when working with images.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.FlipOrientation">
            <summary>
            Provides flip-orientation options for images.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.FlipOrientation.Normal">
            <summary>
            Flip image to normal view.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.FlipOrientation.Horizontal">
            <summary>
            Flip image horizontally.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.FlipOrientation.Vertical">
            <summary>
            Flip image vertically.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageStates">
            <summary>
            Provides the various supported image-states
            generated from the applied Image.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageStates.Normal">
            <summary>
            Returns the normal image.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageStates.TotallyFaded">
            <summary>
            Returns a totally blurred image.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageStates.MediallyFaded">
            <summary>
            Returns a medially blurred image.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageStates.PartiallyFaded">
            <summary>
            Returns a partially blurred image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageMargin">
            <summary>
            Gets or sets the distance between the container and the underlying image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Zoom">
            <summary>
            Gets or sets the distance between the container and the underlying image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Rotation">
            <summary>
            Gets or sets the angle of rotation for the image.
            Please provide a value between 0 and 360.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ZoomSpeed">
            <summary>
            Gets or sets the time in milliseconds the zooming animation takes when active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Flip">
            <summary>
            Flips the image to any given orientation.
            Supports both Vertical and Horizontal orientation-flipping options.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Image">
            <summary>
            Gets or sets the image displayed in the image button.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageActive">
            <summary>
            (This property has been deprecated as of version 1.6.0.0. Please use the property 'ActiveImage' instead.)
            Gets or sets the image to be applied whenever the image button is active or hovered onto.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ActiveImage">
            <summary>
            Gets or sets the image to be applied whenever the image button is active or hovered onto.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageSize">
            <summary>
            Gets or sets the default image size.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageZoomSize">
            <summary>
            Gets or sets the maximum size of the image when hovered onto or active.
            This defaults to the standard set size of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ToolTipText">
            <summary>
            Allows you to easily get or set some ToolTip information to 
            be displayed to the user on mouse-hovering over the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ShowCursorChanges">
            <summary>
             Gets or sets a value indicating whether the control 
             will show cursor changes during mouse-hover events.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ShowActiveImage">
            <summary>
            Sets a value indicating whether the 'ActiveImage' 
            will be applied on mouse-hover.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.AllowZooming">
            <summary>
            Gets or sets a value indicating whether zooming is enabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.AllowAnimations">
            <summary>
            Gets or sets a value indicating whether animations are enabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.FadeWhenInactive">
            <summary>
            Automatically fades the image when inactive.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.IsZoomedIn">
            <summary>
            Gets a value indicating whether the image button is currently zoomed-in.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ShowSizeMarkers">
            <summary>
             Gets or sets a value indicating whether the size markers 
             displayed at the control's top-area will be visible during design-time.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ShowImageBorders">
            <summary>
             Gets or sets a value indicating whether borders will 
             be viewed for the image applied during design-time.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.CreateParams">
            <summary>
            Overrides the CreateParams method to stop flickering issues 
            by setting the "WS_EX_COMPOSITED" (0x02000000) style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageLocation">
            <summary>
            Gets or sets the path or URL for the image to display in the Image Button.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.WaitOnLoad">
            <summary>
            Gets or sets a value indicating whether an image is loaded synchronously.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.InitialImage">
            <summary>
            Gets or sets the image displayed in the Image
            Button when the main image is loading.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ErrorImage">
            <summary>
            Gets or sets the image displayed in the Image
            Button when an error occurs during the image-loading
            process or if the image load is canceled.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Calculate">
            <summary>
            Calculates the correct image-size as per the applied state.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Render(KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ImageStates)">
            <summary>
            Renders the required image as per the applied state.
            </summary>
            <param name="state">The image-state-type to be used.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Render(System.Int32)">
            <summary>
            Renders the required image as per the applied state.
            </summary>
            <param name="state">The image-state to be used.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ZoomIn">
            <summary>
            Zooms in the image to the preset size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.ZoomOut">
            <summary>
            Zooms out the image to its default size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Rotate(System.Int32,System.Boolean,System.Int32)">
            <summary>
            Rotates the image to a set angle of rotation.
            </summary>
            <param name="allowAnimation">
            Allow animation the rotation event? If yes, the rotation will be animated from one angle to another.
            </param>
            <param name="angle">
            The angle of rotation to apply. Please provide a value between 0 and 360.
            </param>
            <param name="animationSpeed">
            The rotating animation speed in milliseconds to apply. Default speed is 500(ms).
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Load(System.String)">
            <summary>
            Sets the ImageLocation to the specified URL and displays the image indicated.
            </summary>
            <param name="url">The path for the image to display in the Image Button.</param>
            Exceptions:
            <exception cref="T:System.InvalidOperationException">Thrown if url is null or an empty string.</exception>
            <exception cref="T:System.Net.WebException">Thrown if url refers to an image on the Web that cannot be accessed.</exception>
            <exception cref="T:System.ArgumentException">Thrown if url refers to a file that is not an image.</exception>
            <exception cref="!:IO.FileNotFoundException">Thrown if url refers to a file that does not exist.</exception>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Load">
            <summary>
            Displays the image specified by the ImageLocation property of the Image Button.
            </summary>
            Exceptions:
            <exception cref="T:System.InvalidOperationException">Thrown if ImageLocation is null or an empty string.</exception>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.LoadAsync">
            <summary>
            Loads the image asynchronously.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.LoadAsync(System.String)">
            <summary>
            Loads the image at the specified location, asynchronously.
            </summary>
            <param name="url">The path for the image to display in the Image Button.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.CancelAsync">
            <summary>
            Cancels an asynchronous image load.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtImageButtonExtended.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions">
            <summary>
            Image-rendering extensions class for Tailwind Image Button.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.FlipOrientation">
            <summary>
            Provides flip-orientation options for image containers.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.FlipOrientation.Normal">
            <summary>
            Flip image to normal setting.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.FlipOrientation.Horizontal">
            <summary>
            Flip image horizontally.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.FlipOrientation.Vertical">
            <summary>
            Flip image vertically.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.Rotate(System.Drawing.Graphics,System.Double,System.Int32,System.Int32)">
            <summary>
            Rotates an image container to a specified angle or degree.
            </summary>
            <param name="graphics">The graphics object to be used.</param>
            <param name="rotation">The angle of rotation.</param>
            <param name="width">The final width of the image.</param>
            <param name="height">The final height of the image.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.Flip(System.Drawing.Graphics,KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.FlipOrientation,System.Int32,System.Int32)">
            <summary>
            Flips an image container to a specified position.
            </summary>
            <param name="graphics">The graphics object to be used.</param>
            <param name="flip">The flip orientation.</param>
            <param name="width">The final width of the image.</param>
            <param name="height">The final height of the image.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.Flip(System.Drawing.Image,KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.FlipOrientation)">
            <summary>
            Flips an image container to a specified position.
            </summary>
            <param name="graphics">The graphics object to be used.</param>
            <param name="flip">The flip orientation.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.ToRotateFlip(KimTools.WinForms.KtToastHelpers.KtToolTip.ImageExtensions.FlipOrientation)">
            <summary>
            Flips an image container to a specified position without an angle of rotation.
            </summary>
            <param name="flip">The flip orientation.</param>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel">
            <summary>
            Provides rich HTML text-rendering capabilities with native CSS 2.0 styling enhancements and inline style-tags.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.#ctor">
            <summary>
            Creates a new Tailwind Label.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextAlignments">
            <summary>
            Tailwind Label Html Alignments options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextAlignments.Left">
            <summary>
            Positions the text to the Left of the container.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextAlignments.Right">
            <summary>
            Positions the text to the Right of the container.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextAlignments.Center">
            <summary>
            Positions the text to the Center of the container.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextFormattingOptions">
            <summary>
            Provides a list of text-formatting options
            for Tailwind Labels.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextFormattingOptions.Default">
            <summary>
            Retains the default text format.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextFormattingOptions.UpperCase">
            <summary>
            Converts the text to upper-case.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextFormattingOptions.LowerCase">
            <summary>
            Converts the text to lower-case.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextFormattingOptions.TitleCase">
            <summary>
            Converts the text to title-case.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextFormattingOptions.SentenceCase">
            <summary>
            Converts the text to sentence-case.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AllowParentOverrides">
            <summary>
            Gets or sets a value indicating whether the label will inherit 
            its parent font and fore color properties.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.Text">
            <summary>
            Gets or sets the label text.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.BackColor">
            <summary>
            Gets or sets the background color of the label.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextRenderingHint">
            <summary>
            The text rendering hint to be used for rendering text.
            </summary>
            <value>The text rendering hint.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.ForeColor">
            <summary>
            Gets or sets the foreground color of the label.
            </summary>
            <value>The color of the label.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.RightToLeft">
            <summary>
            Gets or sets a value indicating whether control's elements are aligned to support
            locales using right-to-left fonts. You can also use the following inline CSS style: 
            style="text-align: right; direction: Rtl;"
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextAlignment">
            <summary>
            Determines the position of the text within the label.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextFormat">
            <summary>
            Provides a number of text-formatting options.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.TextAlign">
            <summary>
            Determines the position of the text within the label.
            (This property is no longer supported. Please use 'TextAlignment' instead.)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.Cursor">
            <summary>
            Gets or sets the cursor that is displayed when the mouse pointer is over the control.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.EllipsisFormat">
            <summary>
            Gets or sets the ellipsis format to be applied whenever the range of text exceeds the control's width.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AutoEllipsis">
            <summary>
            Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge (default position)
            of the <see cref="!:KimToolsLabel"/> control, denoting that the label's text extends beyond the length of the label.
            This is only possible if the properties <see cref="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AutoSize"/> and <see cref="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AutoSizeHeightOnly"/>
            are set to <see cref="!:false"/>.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.UseGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.<br />
            </summary>
            <value><c>true</c> If [use GDI text rendering]; otherwise, <c>false</c>.</value>
            <remarks><para>
            GDI+ text rendering is less smooth than GDI text rendering bnut it natively supports alpha chanel
            thus allows creating transparent images.
            </para>
            <para>
            While using GDI+ text rendering, you can control the text rendering using <see cref="P:System.Drawing.Graphics.TextRenderingHint" />, note that
            using <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit" /> doesn't work well with transparent background.
            </para></remarks>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.ConvertNewlinesToBreakTags">
            <summary>
            Gets or sets a value indicating whether to allow conversion of newline characters to HTML break tags.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.UseSystemCursors">
            <summary>
            If to use cursors defined by the operating system or .NET cursors
            </summary>
            <value><c>true</c> if [use system cursors]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.UseWaitCursor">
            <summary>
            Gets or sets a value indicating whether to use the wait cursor for the current
            control and all child controls.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default - false).
            </summary>
            <value><c>true</c> if [avoid geometry antialias]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br />
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
            <value><c>true</c> if this instance is selection enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default - true)
            </summary>
            <value><c>true</c> if this instance is context menu enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AutoSizeHeightOnly">
            <summary>
            Automatically sets the height of the label by content height (width is not effected).
            </summary>
            <value><c>true</c> if [automatic size height only]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AutoSize">
            <summary>
            Automatically sets the size of the label by content size
            </summary>
            <value><c>true</c> if [automatic size]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the control can accept data that the user drags onto it.
            Returns [true] if drag-and-drop operations are allowed in the control; otherwise, [false]. The default is [false].
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.BaseStylesheet">
            <summary>
            Set base stylesheet to be used by html rendered in the panel.
            </summary>
            <value>The base stylesheet.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.MaximumSize">
            <summary>
            Gets or sets the max size the control get be set by <see cref="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AutoSize" /> or <see cref="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AutoSizeHeightOnly" />.
            </summary>
            <value>The maximum size.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.MinimumSize">
            <summary>
            Gets or sets the min size the control get be set by <see cref="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AutoSize" /> or <see cref="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.AutoSizeHeightOnly" />.
            </summary>
            <value>The minimum size.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.CursorType">
            <summary>
            [Variant] Gets or sets the cursor that is displayed when the mouse pointer is over the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
            <value>The selected text.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
            <value>The selected HTML.</value>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.CreateParams">
            <summary>
            Override to support border for the control.
            </summary>
            <value>The create parameters.</value>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.GetHtml">
            <summary>
            Get html from the current DOM tree with inline style.
            </summary>
            <returns>generated html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br />
            Element if found by id (id attribute on the html element).<br />
            Note: to get the screen rectangle you need to adjust by the hosting control.<br />
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.InDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode as per the LicenseManager module.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.ToSentenceCase(System.String)">
            <summary>
            Converts a string to sentence-case format.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.Render(System.Boolean)">
            <summary>
            Renders the text content in HTML format.
            </summary>
            <param name="rightToLeft">
            Render in RightToLeft (RTL) format?
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Override the proc processing method to set OS specific hand cursor.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.Dispose(System.Boolean)">
            <summary>
            Release the html container resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.EllipsisFormatChanged">
            <summary>
              Raised when the EllipsisFormat property value changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.BorderStyleChanged">
            <summary>
              Raised when the BorderStyle property value changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.BorderStyleChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnLoadComplete(System.EventArgs)">
            <summary>
            Propagate the LoadComplete event from root container.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnLinkClicked(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs)">
            <summary>
            Propagate the LinkClicked event from root container.
            </summary>
            <param name="e">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnRenderError(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs)">
            <summary>
            Propagate the Render Error event from root container.
            </summary>
            <param name="e">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnImageLoad(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs)">
            <summary>
            Propagate the image load event from root container.
            </summary>
            <param name="e">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnRefresh(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs)">
            <summary>
            Handle html renderer invalidate and re-layout as requested.
            </summary>
            <param name="e">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnLoadComplete(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:LoadComplete" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnLinkClicked(System.Object,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs)">
            <summary>
            Handles the <see cref="E:LinkClicked" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnRenderError(System.Object,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs)">
            <summary>
            Handles the <see cref="E:RenderError" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnImageLoad(System.Object,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs)">
            <summary>
            Handles the <see cref="E:ImageLoad" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnRefresh(System.Object,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs)">
            <summary>
            Handles the <see cref="E:Refresh" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnParentForeColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged"/> 
            event when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property 
            value of the control's container changes.
            </summary>
            <param name="e">
            An <see cref="T:System.EventArgs"/> 
            that contains the event data.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnParentFontChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnParentFontChanged(System.EventArgs)"/> event 
            when the parent font changes.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnParentChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnParentChanged(System.EventArgs)"/> event 
            when the parent control changes.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnResize(System.EventArgs)">
            <summary>
            Perform text-rendering while control is being resized.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Perform the layout of the html in the control.
            </summary>
            <param name="levent">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Perform paint of the html in the control.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnMouseLeave(System.EventArgs)">
            <summary>
            Handle mouse leave to handle cursor change.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.KtTooltipLabel.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse double click to select word under the mouse.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis">
            <summary>
            Provides ellipsis-handling tasks and features for controls.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis.EllipsisChars">
            <summary>
            String used as a placeholder for trimmed text.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis.EllipsisFormat">
            <summary>
            Specifies ellipsis format and alignment.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis.EllipsisFormat.None">
            <summary>
            Html is not modified.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis.EllipsisFormat.End">
            <summary>
            Html is trimmed at the end of the string. An ellipsis (...) is drawn in place of remaining text.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis.EllipsisFormat.Start">
            <summary>
            Html is trimmed at the begining of the string. An ellipsis (...) is drawn in place of remaining text. 
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis.EllipsisFormat.Middle">
            <summary>
            Html is trimmed in the middle of the string. An ellipsis (...) is drawn in place of remaining text.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis.EllipsisFormat.Path">
            <summary>
            Preserve as much as possible of the drive and filename information. Must be combined with alignment information.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis.EllipsisFormat.Word">
            <summary>
            Html is trimmed at a word boundary. Must be combined with alignment information.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis.Compact(System.String,System.Windows.Forms.Control,KimTools.WinForms.KtToastHelpers.KtToolTip.Ellipsis.EllipsisFormat)">
            <summary>
            Truncates a text string to fit within a given control width by replacing trimmed text with ellipses. 
            </summary>
            <param name="text">The text or string to be trimmed.</param>
            <param name="control">
            The control whose Html property will be trimmed-down. 
            The Html must fit within control's width.
            The control's FontDefault is used to measure the Html string.
            </param>
            <param name="options">The format and alignment of the ellipsis.</param>
            <returns>This function returns the text trimmed to the specified control's width.</returns>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.Views.HTMLEditor.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Views.HTMLEditor.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Views.HTMLEditor.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtToastHelpers.KtToolTip.Views.ToolTipView.Closed">
            <summary>
            Occurs whenever the ToolTip is being closed.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToastHelpers.KtToolTip.Views.ToolTipView.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Views.ToolTipView.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToastHelpers.KtToolTip.Views.ToolTipView.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtCodeEditor.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtCodeEditor.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtCodeEditor.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.IconElement">
            <summary>
            Provides a visually customizable Icon widget.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.IconElement.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:KimTools.WinForms.IconElement"/>.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.IconElement.AutoSizeHeight">
            <summary>
            Gets or sets a value indicating whether the 
            icon's height will be auto-sizeable.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.IconElement.DefaultIcon">
            <summary>
            Gets or sets the default icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.IconElement.IconOptions">
            <summary>
            Gets or sets the icon's options.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.IconElement.Icon">
            <summary>
            Gets or sets the icon.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.IconElement.ColorizeBitmap(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Changes a bitmap's color to another color.
            </summary>
            <param name="bitmap">The bitmap image.</param>
            <param name="color">The bitmap's new color.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.IconElement.ColorizeImage(System.Drawing.Image,System.Drawing.Color)">
            <summary>
            Changes an image's color to another color.
            </summary>
            <param name="bitmap">The image.</param>
            <param name="color">The image's new color.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.IconElement.CursorFocused">
            <summary>
            Gets a value determining whether the mouse cursor 
            is within the control's rectangular bounds.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.IconElement.InDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.IconElement.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.IconElement.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.IconElement.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtWindowControlbox">
            <summary>
            Integrate your borderless Windows Forms with a customizable 
            Control Box that provides all the necessary window management features.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtWindowControlbox.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:KimTools.WinForms.KtWindowControlbox"/>.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions">
            <summary>
            Provides a list of options for customizing Control Box icons.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions.#ctor">
            <summary>
            Initializes a new instance of the 
            <see cref="T:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions"/> class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions.Enabled">
            <summary>
            Gets or sets a value indicating whether 
            the control's feature is enabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions.AllowMouseEffects">
            <summary>
            Gets or sets a value indicating whether 
            mouse effects are enabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions.DarkeningFactor">
            <summary>
            Gets or sets a percentage by which the 
            icon's background color will be darkened 
            to during a mouse click event.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions.IconColor">
            <summary>
            Gets or sets the icon color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions.BackColor">
            <summary>
            Gets or sets the icon's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions.HoverIconColor">
            <summary>
            Gets or sets the icon color on mouse hover.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions.HoverBackColor">
            <summary>
            Gets or sets the icon's background 
            color on mouse hover.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions.CustomIcon">
            <summary>
            Gets or sets a custom icon for the control box type.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtWindowControlbox.ControlBoxOptions.SecondaryIcon">
            <summary>
            Gets or sets a custom secondary icon for use in 
            applying a custom Restore window icon.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtWindowControlbox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtWindowControlbox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtWindowControlbox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtDate">
            <summary>
            AddBulk customizable Date pickers in your applications.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDate.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtDate" /> control.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtDate.Indicator">
            <summary>
            Provides various supported indicator locations points.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDate.Indicator.Left">
            <summary>
            Position to the left area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDate.Indicator.Right">
            <summary>
            Position to the right area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDate.Indicator.None">
            <summary>
            No position.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtDate.TextAlign">
            <summary>
            Provides various supported text alignment options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDate.TextAlign.Left">
            <summary>
            Left aligned.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDate.TextAlign.Right">
            <summary>
            Right aligned.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDate.TextAlign.Center">
            <summary>
            Center aligned.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtDate.BorderThickness">
            <summary>
            Provides various border thickness options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDate.BorderThickness.Thick">
            <summary>
            Thick border.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDate.BorderThickness.Thin">
            <summary>
            Thin border.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.Enabled">
            <summary>
            Gets or sets a value indicating whether the control is enabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.DisplayWeekNumbers">
            <summary>
            Gets or sets a value indicating whether the week numbers will be displayed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.FillDatePicker">
            <summary>
            Gets or sets a value indicating whether the date picker 
            will be filled using the <see cref="P:KimTools.WinForms.KtDate.Color"/> property.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.BorderRadius">
            <summary>
            Gets or sets the border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.Width">
            <summary>
            Gets or sets minimum width of the date picker.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.Height">
            <summary>
            Gets or sets minimum height of the date picker.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.LeftTextMargin">
            <summary>
            Gets or sets the left text margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.IconColor">
            <summary>
            Gets or sets the date picker icon color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.DisabledColor">
            <summary>
            Gets or sets the disabled background/border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.Color">
            <summary>
            Gets or sets the border/background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.BackColor">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.ForeColor">
            <summary>
            Gets or sets the foreground color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.Icon">
            <summary>
            Gets or sets the indicator icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.Font">
            <summary>
            Gets or sets the control font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.DateBorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.DateTextAlign">
            <summary>
            Gets or sets the date/time text alignment.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.IconLocation">
            <summary>
            Gets or sets the indicator location.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.RightToLeftLayout">
            <summary>
            Gets or sets whether the contents of the <see cref="T:System.Windows.Forms.DateTimePicker" /> 
            are laid out from right to left.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.ShowUpDown">
            <summary>
            Gets or sets a value indicating whether a spin button control 
            (also known as an up-down control) is used to adjust the date/time value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDate.DPHeight">
            <summary>
            Gets or sets the date picker height.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDate.ChangeColor(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Changes a bitmap's color.
            </summary>
            <param name="image">
            The bitmap image.
            </param>
            <param name="color">
            The new bitmap color.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtDate.BunifuControlActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDate.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDate.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtDate.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtDivider">
            <summary>
            AddBulk separator lines and dividers in your designs for organizing content.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDivider.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:KimTools.WinForms.KtDivider"/>.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtDivider.LineOrientation">
            <summary>
            Provides different line orientation options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.LineOrientation.Vertical">
            <summary>
            A vertical line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.LineOrientation.Horizontal">
            <summary>
            A horizontal line.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtDivider.LineStyles">
            <summary>
            Provides different line style options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.LineStyles.Solid">
            <summary>
            A solid line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.LineStyles.Dash">
            <summary>
            A dashed line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.LineStyles.Dot">
            <summary>
            A dotted line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.LineStyles.DashDot">
            <summary>
            A dashed and dotted recursive line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.LineStyles.DashDotDot">
            <summary>
            A dashed, dotted-dotted recursive line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.LineStyles.DoubleEdgeFaded">
            <summary>
            A stylish double edge faded line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.LineStyles.LeftEdgeFaded">
            <summary>
            A stylish left edge faded line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.LineStyles.RightEdgeFaded">
            <summary>
            A stylish right edge faded line.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtDivider.CapStyles">
            <summary>
            Provides different dash cap style options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.CapStyles.Flat">
            <summary>
            A flatcap.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.CapStyles.Round">
            <summary>
            A rounded cap.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.CapStyles.Triangle">
            <summary>
            A triangular cap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDivider.Orientation">
            <summary>
            Gets or sets the line's orientation.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDivider.LineStyle">
            <summary>
            Gets or sets the line's style format.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDivider.DashCap">
            <summary>
            Gets or sets the line's dash cap style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDivider.LineThickness">
            <summary>
            Gets or sets the line's thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtDivider.LineColor">
            <summary>
            Gets or sets the line's color.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDivider.Refresh">
            <summary>
            Forces the control to invalidate its client area and 
            immediately redraw itself and any child controls.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDivider.KtDividerControlDesignerActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDivider.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDivider.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtDivider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtFormTools">
            <summary>
            Provides enhanced and customizable form-docking capabilities to borderless Windows Forms.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.#ctor">
            <summary>
            Creates a new Tailwind Form Dock component.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtFormTools.BunifuWindowStates">
            <summary>
            Provides a general list of window-states available
            for use in borderless Forms displayed on-screen.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/>
            enumeration but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.BunifuWindowStates.Normal">
            <summary>
            A normal window.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.BunifuWindowStates.Maximized">
            <summary>
            A maximized window.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.BunifuWindowStates.Minimized">
            <summary>
            A minimized window.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtFormTools.FormWindowStates">
            <summary>
            Provides a general list of window-states available
            for use in borderless Forms displayed on-screen.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/>
            enumeration but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.FormWindowStates.Normal">
            <summary>
            A normal window.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.FormWindowStates.Maximized">
            <summary>
            A maximized window.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.FormWindowStates.Minimized">
            <summary>
            A minimized window.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtFormTools.DockIndicators">
            <summary>
            Provides a list of available docking indicators 
            visible when dragging forms on-screen.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockIndicators.None">
            <summary>
            No indicator is shown.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockIndicators.Left">
            <summary>
            The left dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockIndicators.Right">
            <summary>
            The right dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockIndicators.TopLeft">
            <summary>
            The top-left dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockIndicators.TopRight">
            <summary>
            The top-right dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockIndicators.FullScreen">
            <summary>
            The full-screen dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockIndicators.BottomLeft">
            <summary>
            The bottom-left dock indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockIndicators.BottomRight">
            <summary>
            The bottom-right dock indicator.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtFormTools.DockPositions">
            <summary>
            Provides a list of supported form-docking positions.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockPositions.None">
            <summary>
            No dock position applied.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockPositions.Left">
            <summary>
            The left dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockPositions.Right">
            <summary>
            The right dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockPositions.TopLeft">
            <summary>
            Tge top-left dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockPositions.TopRight">
            <summary>
            The top-right dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockPositions.FullScreen">
            <summary>
            The full-screen dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockPositions.BottomLeft">
            <summary>
            The bottom-left dock position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.DockPositions.BottomRight">
            <summary>
            The bottom-right dock position.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.AllowHidingBottomRegion">
            <summary>
            When set to true, a white region that is drawn
            at the bottom of the parent form will be hidden; 
            however, when set to false, this region will be 
            exposed at runtime.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.BorderOptions">
            <summary>
            Gets or sets Form border options that can be 
            used to add and style borders on the parent form.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.DockingOptions">
            <summary>
            Gets or sets the docking options to be used in the parent form.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.TitleBarOptions">
            <summary>
            Gets or sets the list of options for selecting and managing 
            any control that is set as the parent form's Title Bar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.AllowDockingKeys">
            <summary>
            Gets or sets a value indicating whether the parent form will allow 
            the standard Windows docking keys to be supported at runtime.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.AllowFormDragging">
            <summary>
            Gets or sets a value indicating whether the parent form will be draggable.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.AllowFormDropShadow">
            <summary>
            Gets or sets a value indicating whether the parent form will have a drop-shadow along its borders..
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.AllowFormResizing">
            <summary>
            Gets or sets a value indicating whether the parent form will be resizable when borderless.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.AllowOpacityChangesWhileDragging">
            <summary>
            Gets or sets a value indicating whether the parent form's opacity or transparency 
            will be changed whenever it's being dragged on screen.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.ShowCursorChanges">
            <summary>
            Gets or sets a value indicating whether cursor-changes 
            will be provided when about to dock the parent form.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.ShowDockingIndicators">
            <summary>
            Gets or sets a value indicating whether the docking indicators 
            will be previewed before the parent form is docked.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.DockingIndicatorsColor">
            <summary>
            Gets or sets the color of the docking indicators.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.DockingIndicatorsOpacity">
            <summary>
            Gets or sets the opacity or transparency of the docking indicators.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.FormDraggingOpacity">
            <summary>
            Gets or sets the opacity or transparency of the parent form when dragging.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.WindowState">
            <summary>
            Gets or sets the window-state for the form.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/> enumeration
            but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.BunifuWindowState">
            <summary>
            Gets or sets the window-state for the form.
            This mimics the standard <see cref="T:System.Windows.Forms.FormWindowState"/> enumeration
            but has been tailored for handling borderless forms.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.ContainerControl">
            <summary>
            Gets or sets the container control within the parent form.
            In most cases, this refers and results to the parent form.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.ParentForm">
            <summary>
            Gets or sets the container control as the parent form.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.Site">
            <summary>
            Overrides the ISite functionality, getting the main or parent
            container control in the Form. This is overriden to get the
            component's host or parent form.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.ApplyShadows">
            <summary>
            Applies a surrounding shadow to the target form.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.AddBottomSeparator(System.Drawing.Color,System.Int32,System.Boolean)">
            <summary>
            Adds a bottom Line Separator to the attached Parent Form.
            </summary>
            <param name="color">Sets the background color of the Separator.</param>
            <param name="height">Sets the height of the Separator.</param>
            <param name="dockSeparator">
            Allow docking the Separator to the bottom area? (Disabled by default)
            If allowed, the Separator will be docked to the bottom-most area
            of the Parent Form; else, it will be anchored to the bottom-most area.
            Both options however perform the same way at runtime.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.SubscribeControlToDragEvents(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Subscribes any control specified to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="control">
            The control to be subscribed to the drag events.
            </param>
            <param name="isPartOfTitleBar">
            If the control is a part of the Title Bar section, set this parameter 
            to true in order for the control to be subscribed to the 
            <see cref="P:KimTools.WinForms.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.SubscribeControlsToDragEvents(System.Windows.Forms.Control[],System.Boolean)">
            <summary>
            Subscribes an array of controls specified to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="controls">
            An array of controls to be subscribed to the drag events.
            </param>
            <param name="arePartOfTitleBar">
            If the controls are part of the Title Bar section, set this parameter 
            to true in order for the controls to be subscribed to the 
            <see cref="P:KimTools.WinForms.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.UnsubscribeControlToDragEvents(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Unsubscribes any control attached to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="control">
            The control previously attached to the drag events.
            </param>
            <param name="wasPartOfTitleBar">
            If the control was a part of the Title Bar section, set this parameter 
            to true in order for the control to be unsubscribed to the 
            <see cref="P:KimTools.WinForms.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.UnsubscribeControlsToDragEvents(System.Windows.Forms.Control[],System.Boolean)">
            <summary>
            Unsubscribes an array of controls attached to the drag  
            event operations performed on the parent form.
            </summary>
            <param name="controls">
            An array of controls previously attached to the drag events.
            </param>
            <param name="werePartOfTitleBar">
            If the controls were part of the Title Bar section, set this parameter 
            to true in order for the controls to be unsubscribed to the 
            <see cref="P:KimTools.WinForms.TitleBarOptions.DoubleClickToExpandWindow"/> setting.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.ParentFormIsNormal">
            <summary>
            Checks if the parent form is in the normal state.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockedLeft">
            <summary>
            Checks if the parent form is docked to the left.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockedTopLeft">
            <summary>
            Checks if the parent form is docked to the top-left.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockedBottomLeft">
            <summary>
            Checks if the parent form is docked to the bottom-left.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockedRight">
            <summary>
            Checks if the parent form is docked to the right.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockedTopRight">
            <summary>
            Checks if the parent form is docked to the ltop-right.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockedBottomRight">
            <summary>
            Checks if the parent form is docked to the bottom-right.
            </summary>
            <returns><see cref="!:true"/> or <see cref="!:false"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.ExpandWindow">
            <summary>
            Expands the parent form to fit the current screen dimensions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockLeft">
            <summary>
            Docks the parent form to the left area of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockTopLeft">
            <summary>
            Docks the parent form to the top-left corner of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockBottomLeft">
            <summary>
            Docks the parent form to the bottom-left corner of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockRight">
            <summary>
            Docks the parent form to the right area of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockTopRight">
            <summary>
            Docks the parent form to the top-right corner of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockBottomRight">
            <summary>
            Docks the parent form to the bottom-right corner of the screen.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.IndicateFullScreenDocking">
            <summary>
            Indicates that the parent form is about to be docked to full-screen mode.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.IndicateLeftDocking">
            <summary>
            Indicates that the parent form is about to be docked to the left screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.IndicateTopLeftDocking">
            <summary>
            Indicates that the parent form is about to be docked to the top-left screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.IndicateBottomLeftDocking">
            <summary>
            Indicates that the parent form is about to be docked to the bottom-left screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.IndicateRightDocking">
            <summary>
            Indicates that the parent form is about to be docked to the right screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.IndicateTopRightDocking">
            <summary>
            Indicates that the parent form is about to be docked to the top-right screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.IndicateBottomRightDocking">
            <summary>
            Indicates that the parent form is about to be docked to the bottom-right screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.IndicateNormalPositioning">
            <summary>
            Indicates that the parent form is about to be reverted to
            its normal or original dimensions as per its size and location.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.HideDockingIndicators">
            <summary>
            Hides any visual cues that may have been displayed when
            docking the parent form.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.ShowDockingAreaIndicators">
            <summary>
            Displays any visual cues based on the area the parent form
            is about to be docked to.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.AddFormBorders(System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Adds borders to the parent form.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.CreateBitmap(System.Drawing.Color,System.Drawing.Size)">
            <summary>
            Creates a colored Bitmap Image.
            </summary>
            <param name="color">The <see cref="T:System.Drawing.Color"/> to be applied.</param>
            <param name="size">The <see cref="T:System.Drawing.Size"/> of the Bitmap.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.ProvideFirstTimeOptionsGuide">
            <summary>
            This method takes the user through a quick set of first-time options
            available to use in order to guide them on the component's usage.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.OnLoad(System.Object,System.EventArgs)">
            <summary>
            Raises the parent form's "OnLoad" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the parent form's "OnLoad" event. </param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.OnResizeEnd(System.Object,System.EventArgs)">
            <summary>
            Raises the parent form's "OnResizeEnd" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the parent form's "OnResizeEnd" event. </param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.OnKeyDown(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the component's "KeyDown" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "KeyDown" event. </param>
        </member>
        <member name="E:KimTools.WinForms.KtFormTools.FormDragging">
            <summary>
            Occurs whenever the parent form is being dragged.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtFormTools.DockChanged">
            <summary>
            Occurs whenever the <see cref="P:KimTools.WinForms.KtFormTools.DockingOptions"/> property has been changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtFormTools.FormDraggingEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtFormTools.FormDragging"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.FormDraggingEventArgs.#ctor(System.Drawing.Point,KimTools.WinForms.KtFormTools.DockIndicators)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtFormTools.FormDragging"/> event.
            </summary>
            <param name="cursorPosition">The position of the cursor on the screen.</param>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.FormDraggingEventArgs.CursorPosition">
            <summary>
            Gets the current position of the cursor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.FormDraggingEventArgs.ShownIndicator">
            <summary>
            Gets the indicator that is currently being shown
            as the parent form is being dragged.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtFormTools.DockChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtFormTools.DockChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.DockChangedEventArgs.#ctor(KimTools.WinForms.KtFormTools.DockPositions)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtFormTools.DockChanged"/> event.
            </summary>
            <param name="dockPosition">The currently docked position of the parent form.</param>
        </member>
        <member name="P:KimTools.WinForms.KtFormTools.DockChangedEventArgs.DockPosition">
            <summary>
            Gets the docked position the parent form is on.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.OnMouseUp(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the component's "MouseUp" event. 
            Use this to attach any control's "MouseUp" event to this "OnMouseUp" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseUp" event. </param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.OnMouseMove(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the component's "MouseMove" event.
            Use this to attach any control's "MouseMove" event to this "OnMouseMove" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseMove" event. </param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the component's "MouseDown" event.
            Use this to attach any control's "MouseDown" event to this "OnMouseDown" event.
            </summary>
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseDown" event. </param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.OnDoubleClickTitleBar(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the attached Title Bar's "MouseDoubleClick" event.
            </summary>
            Use this to attach any control's "MouseDoubleClick" event to this "MouseDoubleClick" event.
            <param name="sender">The sender control.</param>
            <param name="e">Provides data for the control's "MouseDoubleClick" event. </param>
        </member>
        <member name="T:KimTools.WinForms.KtFormTools.BunifuComponentActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtFormTools.BunifuComponentActionList"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.BunifuComponentActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtFormTools.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtFormTools.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.DragControlsUIEditor">
            <summary>
            Provides a standard drag-controls-selection Dropdown UI Editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.WindowHandler">
            <summary>
            Attaches, accesses and extends any Windows Form specified outside its own class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.WindowHandler.#ctor(System.Windows.Forms.Form,System.Boolean)">
            <summary>
            Creates a window handle to any specified Windows Form.
            </summary>
            <param name="parent">The parent form to handle.</param>
            <param name="allowResizing">Allow the parent form to resize?</param>
        </member>
        <member name="P:KimTools.WinForms.WindowHandler.BunifuFormDock">
            <summary>
            Gets or sets the Tailwind Form Dock instance to be accessed and used.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.DockOptions">
            <summary>
            Provides a list of supported docking options in Windows Forms.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.DockOptions.#ctor">
            <summary>
            Creates a new Docking Options class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.DockOptions.DockAll">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to all supported screen areas.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.DockOptions.DockLeft">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the left screen area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.DockOptions.DockRight">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the right screen area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.DockOptions.DockFullScreen">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to fill the screen's dimensions.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.DockOptions.DockTopLeft">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the top-left screen area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.DockOptions.DockTopRight">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the top-right screen area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.DockOptions.DockBottomLeft">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the bottom-left screen area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.DockOptions.DockBottomRight">
            <summary>
             Gets or sets a value indicating whether the parent form can be docked to the bottom-right screen area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.DockOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of docking options 
            provided and their applied statuses separated by semi-colons.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.TitleBarOptions">
            <summary>
            Provides a list of options for selecting and managing any 
            control that is to be used as the parent form's Title Bar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.TitleBarOptions.#ctor">
            <summary>
            Creates a new Title Bar Options class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.TitleBarOptions.BunifuFormDock">
            <summary>
            Gets or sets the Tailwind Form Dock instance to be accessed and used.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.TitleBarOptions.TitleBarControl">
            <summary>
             Gets or sets the control to be used as the parent form's Title Bar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.TitleBarOptions.DoubleClickToExpandWindow">
            <summary>
             Gets or sets a value indicating whether the Title Bar control 
             will expand the parent form once a user double-clicks on it.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.TitleBarOptions.UseBackColorOnDockingIndicators">
            <summary>
             Gets or sets a value indicating whether the docking indicators
             will inherit the Title Bar's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.TitleBarOptions.AllowFormDragging">
            <summary>
             Gets or sets a value indicating whether the Title Bar control 
             will be allowed to drag the parent form at runtime.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.TitleBarOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of Title Bar options 
            provided and their applied property values separated by semi-colons.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.FormBorderOptions">
            <summary>
            Provides a list of options for customizing
            a borderless Form's border regions.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.FormBorderOptions.#ctor">
            <summary>
            Creates a new Form Border Options class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.FormBorderOptions.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of Form Border Options 
            provided and their applied property values separated by semi-colons.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.FormBorderOptions.BorderRegion">
            <summary>
            Provides a list of options for customizing
            a borderless Form's single border region.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.FormBorderOptions.BorderRegion.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the list of Form Border Options 
            provided and their applied property values separated by semi-colons.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.Indicator.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.Indicator.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.Indicator.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtProgressGauge">
            <summary>
            Provides a highly customizable, arc-based, range value display meter 
            for previewing value movements within definite ranges of motion.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressGauge.#ctor">
            <summary>
            Creates a new <see cref="T:KimTools.WinForms.KtProgressGauge"/> control.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtProgressGauge.CapStyles">
            <summary>
            Provides various cap styles used when 
            drawing the control's edges.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtProgressGauge.CapStyles.Round">
            <summary>
            Draws a flat cap.
            </summary>
            <summary>
            Draws a rounded cap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.ShowRangeLabels">
            <summary>
            Gets or sets a value indicating whether
            the gauge's range labels will be displayed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.ShowValueLabel">
            <summary>
            Gets or sets a value indicating whether
            the Gauge's value label will be displayed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.AutoGenerateProgressColorWhenLow">
            <summary>
            Gets or sets a lighter background color that will be 
            automatically generated for the progress background color 
            that is based on the set 'ProgressColorLow' color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.AutoGenerateProgressColorWhenHigh">
            <summary>
            Gets or sets a lighter background color that will be 
            automatically generated for the progress background color 
            that is based on the set 'ProgressColorHigh' color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.Value">
            <summary>
            Gets or sets the gauge's pointer value.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the value 
            set is outside expected range, that is, between the Minimum and Maximum set values.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.ValueByTransition">
            <summary>
            Gets or sets the gauge's pointer value using a smooth transition.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the value 
            set is outside expected range, that is, between the Minimum and Maximum set values.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.Minimum">
            <summary>
            Gets or sets the minimum range value.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when 
            the Maximum property value is greater than the Minimum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.Maximum">
            <summary>
            Gets or sets the maximum range value.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when 
            the Minimum property value is greater than the Maximum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.WarningMark">
            <summary>
            Gets or sets the point at which the gauge should
            mark as the beginning of high value ranges.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.LighteningFactor">
            <summary>
            Gets or sets a lightening value/factor that will
            be used to generate the progress background color
            when the value set is either high or low. (Default is 70)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.ProgressColorLow">
            <summary>
            Gets or sets the Gauge's progress color whenever 
            it is within the low or minimum value ranges.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.ProgressColorHigh">
            <summary>
            Gets or sets the gauge's progress color whenever 
            it is within the high or maximum value ranges as 
            specified by the property <see cref="P:KimTools.WinForms.KtProgressGauge.ProgressHighValueMark"/>.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.RangeLabelsColor">
            <summary>
            Gets or sets the gauge's range labels' color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.ValueLabelColor">
            <summary>
            Gets or sets the gauge's value label color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.ProgressBackColor">
            <summary>
            Gets or sets the gauge's progress bakcground color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.Prefix">
            <summary>
            Gets or sets the gauge's prefix text
            that precedes the gauge value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.Suffix">
            <summary>
            Gets or sets the Gauge's suffix text that 
            is displayed besides the gauge value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.Thickness">
            <summary>
            Gets or sets the gauge's progress thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.Font">
            <summary>
            Gets or sets the gauge's standard font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.ProgressCap">
            <summary>
            Gets or sets the rendering style 
            of the progress edges.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.RangeLabelsFont">
            <summary>
            Gets or sets the Gauge's range labels' font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.RangeEnd">
            <summary>
            Gets or sets the Gauge's end range value.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Minimum property value is greater than the Maximum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.RangeStart">
            <summary>
            Gets or sets the Gauge's start range value.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Maximum property value is greater than the Minimum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.ProgressHighValueMark">
            <summary>
            Gets or sets the point at which the Gauge should
            mark as the beginning of high value ranges.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.GaugeRectangle">
            <summary>
            Gets the Gauge's drawing rectangle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.BackgroundImage">
            <summary>
            Gets or sets the background image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtProgressGauge.ValueChanged">
            <summary>
            Occurs when the 'Value' property is changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtProgressGauge.ValueChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtProgressGauge.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressGauge.ValueChangedEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtProgressGauge.ValueChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtProgressGauge.ValueChangedEventArgs.Value">
            <summary>
            Gets the new <see cref="T:KimTools.WinForms.KtProgressGauge"/> value.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressGauge.TransitionValue(System.Int32,System.Int32)">
            <summary>
            Smoothly transitions the Gauge's value 
            from one point within range to another.
            </summary>
            <param name="value">The new value to transition to.</param>
            <param name="transitionSpeed">(Optional) The transition speed in milliseconds.</param>
        </member>
        <member name="M:KimTools.WinForms.KtProgressGauge.Render">
            <summary>
            Applies the control's default values.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressGauge.AlignLabels">
            <summary>
            Aligns the gauge's labels accordingly.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressGauge.ConvertToDegrees(System.Int32)">
            <summary>
            Converts an integer into degrees.
            </summary>
            <param name="value">The integer value.</param>
        </member>
        <member name="M:KimTools.WinForms.KtProgressGauge.ConvertRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts the ScrollBar's size dimensions to the user-specified range dimensions.
            </summary>
            <param name="originalStart">The original starting point.</param>
            <param name="originalEnd">The original ending point.</param>
            <param name="newStart">The new starting point in the user-specified range.</param>
            <param name="newEnd">The new ending point in the user-specified range.</param>
            <param name="value">The value to be set within the range.</param>
        </member>
        <member name="T:KimTools.WinForms.KtProgressGauge.BunifuRadialGaugeActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtProgressGauge.BunifuRadialGaugeActionList"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressGauge.BunifuRadialGaugeActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtProgressGauge.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressGauge.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtProgressGauge.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtGroupBox">
            <summary>
            Provides customizable group boxes for hosting and managing individual controls.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtGroupBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtGroupBox" /> control.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtGroupBox.#ctor(System.Int32,System.Single,System.Drawing.Color)">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtGroupBox" /> control.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtGroupBox.LineStyles">
            <summary>
            Provides different line style options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtGroupBox.LineStyles.Solid">
            <summary>
            A solid line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtGroupBox.LineStyles.Dash">
            <summary>
            A dashed line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtGroupBox.LineStyles.Dot">
            <summary>
            A dotted line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtGroupBox.LineStyles.DashDot">
            <summary>
            A dashed and dotted recursive line.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtGroupBox.LineStyles.DashDotDot">
            <summary>
            A dashed, dotted-dotted recursive line.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtGroupBox.BorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtGroupBox.BorderRadius">
            <summary>
            Gets or sets the border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtGroupBox.LabelIndent">
            <summary>
            Gets or sets the label indent size.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtGroupBox.Text">
            <summary>
            Gets or sets the label text.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtGroupBox.Font">
            <summary>
            Gets or sets the label font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtGroupBox.ForeColor">
            <summary>
            Gets or sets the label fore color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtGroupBox.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtGroupBox.LabelAlign">
            <summary>
            Gets or sets the label alignment.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtGroupBox.LineStyle">
            <summary>
            Gets or sets the group box line style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtGroupBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtGroupBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">
            true if managed resources should be disposed; otherwise, false.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtGroupBox.InitializeComponent">
            <summary>
            Required method for Designer support.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtGroupBox.BunifuControlDesignerActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtGroupBox.BunifuControlDesignerActionList"/> class.
            </summary>
            <seealso cref="T:Microsoft.DotNet.DesignTools.Designers.Actions.DesignerActionList" />
        </member>
        <member name="M:KimTools.WinForms.KtGroupBox.BunifuControlDesignerActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.GraphicsExtension">
            <summary>
            Provides graphics extension methods for drawing rectangles.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.GraphicsExtension.GenerateRoundedRectangle(System.Drawing.Graphics,System.Drawing.RectangleF,System.Single)">
            <summary>
            Generates a rounded rectangle.
            </summary>
            <param name="graphics">The graphics object to use for drawing.</param>
            <param name="rectangle">The client rectangle.</param>
            <param name="radius">The rectangle radius.</param>
        </member>
        <member name="M:KimTools.WinForms.GraphicsExtension.GenerateCapsule(System.Drawing.Graphics,System.Drawing.RectangleF)">
            <summary>
            Generates a rectangular graphics capsule.
            </summary>
            <param name="graphics">The graphics object to use for drawing.</param>
            <param name="baseRect">The base client rectangle.</param>
        </member>
        <member name="M:KimTools.WinForms.GraphicsExtension.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Draws a rounded rectangle specified by a pair of coordinates, a width, 
            a height and the radius for the arcs that make the rounded edges.
            </summary>
            <param name="brush">A <see cref="T:System.Drawing.Pen"/> that determines the color, width and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
            <param name="radius">The radius of the arc used for the rounded edges.</param>
        </member>
        <member name="M:KimTools.WinForms.GraphicsExtension.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Pen,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws a rounded rectangle specified by a pair of coordinates, a width, 
            a height and the radius for the arcs that make the rounded edges.
            </summary>
            <param name="brush">A <see cref="T:System.Drawing.Pen"/> that determines the color, width and style of the rectangle.</param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw.</param>
            <param name="width">Width of the rectangle to draw.</param>
            <param name="height">Height of the rectangle to draw.</param>
            <param name="radius">The radius of the arc used for the rounded edges.</param>
        </member>
        <member name="P:KimTools.WinForms.Icon.Image">
            <summary>
            Gets or sets the icon.
            </summary>
            <value>
            The icon.
            </value>
        </member>
        <member name="F:KimTools.WinForms.Icon.Content">
            <summary>
            The content
            </summary>
        </member>
        <member name="F:KimTools.WinForms.Icon.FullName">
            <summary>
            The full name
            </summary>
        </member>
        <member name="F:KimTools.WinForms.Icon.Name">
            <summary>
            The name
            </summary>
        </member>
        <member name="M:KimTools.WinForms.Icon.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.Icons.SearchIconDialog(System.String,System.Drawing.Color,System.Int32,System.Int32)">
            <summary>
            Searches the icon dialog.
            </summary>
            <param name="text">The text.</param>
            <param name="color">The color.</param>
            <param name="width">The width.</param>
            <param name="padding">The padding.</param>
            <returns></returns>
        </member>
        <member name="F:KimTools.WinForms.KtDesignerIconExportForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDesignerIconExportForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtDesignerIconExportForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDesignerIconPickerForm.ApplyTheme(KimTools.WinForms.KTheme)">
            <summary>
            Applies the theme.
            </summary>
            <param name="theme">The theme.</param>
        </member>
        <member name="F:KimTools.WinForms.KtDesignerIconPickerForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDesignerIconPickerForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtDesignerIconPickerForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtDesignerToolbarForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtDesignerToolbarForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtDesignerToolbarForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.BrushAdapter">
            <summary>
            Adapter for WinForms brushes objects for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.BrushAdapter._brush">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.BrushAdapter._dispose">
            <summary>
            If to dispose the brush when <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.BrushAdapter.Dispose"/> is called.<br/>
            Ignore dispose for cached brushes.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.BrushAdapter.#ctor(System.Drawing.Brush,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.BrushAdapter.Brush">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ContextMenuAdapter">
            <summary>
            Adapter for WinForms context menu for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ContextMenuAdapter._contextMenu">
            <summary>
            the underline win forms context menu
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ContextMenuAdapter.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ControlAdapter">
            <summary>
            Adapter for WinForms Control for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ControlAdapter._control">
            <summary>
            the underline win forms control.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ControlAdapter._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ControlAdapter.#ctor(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ControlAdapter.Control">
            <summary>
            Get the underline win forms control
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontAdapter">
            <summary>
            Adapter for WinForms FontDefault object for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontAdapter._font">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontAdapter._hFont">
            <summary>
            a handle to this FontDefault.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontAdapter._underlineOffset">
            <summary>
            the vertical offset of the font underline location from the top of the font.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontAdapter._height">
            <summary>
            Cached font height.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontAdapter._whitespaceWidth">
            <summary>
            Cached font whitespace width.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontAdapter.#ctor(System.Drawing.Font)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontAdapter.Font">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontAdapter.HFont">
            <summary>
            Get the handle to this FontDefault.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontAdapter.SetMetrics(System.Int32,System.Int32)">
            <summary>
            Set font metrics to be cached for the font for future use.
            </summary>
            <param name="height">the full height of the font</param>
            <param name="underlineOffset">the vertical offset of the font underline location from the top of the font.</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontFamilyAdapter">
            <summary>
            Adapter for WinForms FontDefault family object for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontFamilyAdapter._fontFamily">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontFamilyAdapter.#ctor(System.Drawing.FontFamily)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.FontFamilyAdapter.FontFamily">
            <summary>
            the underline win-forms font family.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter">
            <summary>
            Adapter for WinForms Graphics for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter._charFit">
            <summary>
            used for <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.MeasureString(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont,System.Double,System.Int32@,System.Double@)"/> calculation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter._charFitWidth">
            <summary>
            used for <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.MeasureString(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont,System.Double,System.Int32@,System.Double@)"/> calculation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter._characterRanges">
            <summary>
            Used for GDI+ measure string.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter._stringFormat">
            <summary>
            The string format to use for measuring strings for GDI+ text rendering
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter._stringFormat2">
            <summary>
            The string format to use for rendering strings for GDI+ text rendering
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter._g">
            <summary>
            The wrapped WinForms graphics object
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter._hdc">
            <summary>
            the initialized HDC used
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter._releaseGraphics">
            <summary>
            if to release the graphics object on dispose
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter._setRtl">
            <summary>
            If text alignment was set to RTL
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.#cctor">
            <summary>
            Init static resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.#ctor(System.Drawing.Graphics,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
            <param name="g">the win forms graphics object to use</param>
            <param name="useGdiPlusTextRendering">Use GDI+ text rendering to measure/draw text</param>
            <param name="releaseGraphics">optional: if to release the graphics object on dispose (default - false)</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.ReleaseHdc">
            <summary>
            Release current HDC to be able to use <see cref="T:System.Drawing.Graphics"/> methods.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.InitHdc">
            <summary>
            Init HDC for the current graphics object to be used to call GDI directly.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.SetFont(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont)">
            <summary>
            Set a resource (e.g. a font) for the specified device context.
            WARNING: Calling FontDefault.ToHfont() many times without releasing the font handle crashes the app.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.SetTextColor(System.Drawing.Color)">
            <summary>
            Set the text color of the device context.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.SetRtlAlignGdi(System.Boolean)">
            <summary>
            Change text align to Left-to-Right or Right-to-Left if required.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.DrawTransparentText(System.IntPtr,System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont,System.Drawing.Point,System.Drawing.Size,System.Drawing.Color)">
            <summary>
            Special draw logic to draw transparent text using GDI.<br/>
            1. Create in-memory DC<br/>
            2. Copy background to in-memory DC<br/>
            3. Draw the text to in-memory DC<br/>
            4. Copy the in-memory DC to the proper location with alpha blend<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsAdapter.SetRtlAlignGdiPlus(System.Boolean)">
            <summary>
            Change text align to Left-to-Right or Right-to-Left if required.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsPathAdapter">
            <summary>
            Adapter for WinForms graphics path object for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsPathAdapter._graphicsPath">
            <summary>
            The actual WinForms graphics path instance.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsPathAdapter._lastPoint">
            <summary>
            the last point added to the path to begin next segment from
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsPathAdapter.GraphicsPath">
            <summary>
            The actual WinForms graphics path instance.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.GraphicsPathAdapter.GetStartAngle(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphicsPath.Corner)">
            <summary>
            Get arc start angle for the given corner.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ImageAdapter">
            <summary>
            Adapter for WinForms Image object for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ImageAdapter._image">
            <summary>
            the underline win-forms image.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ImageAdapter.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.ImageAdapter.Image">
            <summary>
            the underline win-forms image.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.PenAdapter">
            <summary>
            Adapter for WinForms pens objects for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.PenAdapter._pen">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.PenAdapter.#ctor(System.Drawing.Pen)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.PenAdapter.Pen">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.WinFormsAdapter">
            <summary>
            Adapter for WinForms platforms.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.WinFormsAdapter._instance">
            <summary>
            Singleton instance of global adapter.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.WinFormsAdapter.#ctor">
            <summary>
            Init installed font families and set default font families mapping.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Adapters.WinFormsAdapter.Instance">
            <summary>
            Singleton instance of global adapter.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper">
            <summary>
            Helper to encode and set HTML fragment to clipboard.<br/>
            See http://theartofdev.wordpress.com/2012/11/11/setting-html-and-plain-text-formatting-to-clipboard/.<br/>
            <seealso cref="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)"/>.
            </summary>
            <remarks>
            The MIT License (MIT) Copyright (c) 2014 Arthur Teplitzki.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper.Header">
            <summary>
            The string contains index references to other spots in the string, so we need placeholders so we can compute the offsets. <br/>
            The <![CDATA[<<<<<<<]]>_ strings are just placeholders. We'll back-patch them actual values afterwards. <br/>
            The string layout (<![CDATA[<<<]]>) also ensures that it can't appear in the body of the html because the <![CDATA[<]]> <br/>
            character must be escaped. <br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper.StartFragment">
            <summary>
            html comment to point the beginning of html fragment
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper.EndFragment">
            <summary>
            html comment to point the end of html fragment
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper._byteCount">
            <summary>
            Used to calculate characters byte count in UTF-8
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)">
            <summary>
            Create <see cref="T:System.Windows.Forms.DataObject"/> with given html and plain-text ready to be used for clipboard or drag and drop.<br/>
            Handle missing <![CDATA[<html>]]> tags, specified start\end segments and Unicode characters.
            </summary>
            <remarks>
            <para>
            Windows Clipboard works with UTF-8 Unicode encoding while .NET strings use with UTF-16 so for clipboard to correctly
            decode Unicode string added to it from .NET we needs to be re-encoded it using UTF-8 encoding.
            </para>
            <para>
            Builds the CF_HTML header correctly for all possible HTMLs<br/>
            If given html contains start/end fragments then it will use them in the header:
            <code><![CDATA[<html><body><!--StartFragment-->hello <b>world</b><!--EndFragment--></body></html>]]></code>
            If given html contains html/body tags then it will inject start/end fragments to exclude html/body tags:
            <code><![CDATA[<html><body>hello <b>world</b></body></html>]]></code>
            If given html doesn't contain html/body tags then it will inject the tags and start/end fragments properly:
            <code><![CDATA[hello <b>world</b>]]></code>
            In all cases creating a proper CF_HTML header:<br/>
            <code>
            <![CDATA[
            Version:1.0
            StartHTML:000000177
            EndHTML:000000329
            StartFragment:000000277
            EndFragment:000000295
            StartSelection:000000277
            EndSelection:000000277
            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
            <html><body><!--StartFragment-->hello <b>world</b><!--EndFragment--></body></html>
            ]]>
            </code>
            See format specification here: http://msdn.microsoft.com/library/default.asp?url=/workshop/networking/clipboard/htmlclipboard.asp
            </para>
            </remarks>
            <param name="html">a html fragment</param>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper.CopyToClipboard(System.String,System.String)">
            <summary>
            Clears clipboard and sets the given HTML and plain text fragment to the clipboard, providing additional meta-information for HTML.<br/>
            See <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)"/> for HTML fragment details.<br/>
            </summary>
            <example>
            ClipboardHelper.CopyToClipboard("Hello <b>World</b>", "Hello World");
            </example>
            <param name="html">a html fragment</param>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper.CopyToClipboard(System.String)">
            <summary>
            Clears clipboard and sets the given plain text fragment to the clipboard.<br/>
            </summary>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper.GetHtmlDataString(System.String)">
            <summary>
            Generate HTML fragment data string with header that is required for the clipboard.
            </summary>
            <param name="html">the html to generate for</param>
            <returns>the resulted string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.ClipboardHelper.GetByteCount(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Calculates the number of bytes produced by encoding the string in the string builder in UTF-8 and not .NET default string encoding.
            </summary>
            <param name="sb">the string builder to count its string</param>
            <param name="start">optional: the start index to calculate from (default - start of string)</param>
            <param name="end">optional: the end index to calculate to (default - end of string)</param>
            <returns>the number of bytes required to encode the string in UTF-8</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils">
            <summary>
            Utilities for converting WinForms entities to HtmlRenderer core entities.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.Convert(System.Drawing.PointF)">
            <summary>
            Convert from WinForms point to core point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.Convert(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint[])">
            <summary>
            Convert from WinForms point to core point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.Convert(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Convert from core point to WinForms point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.ConvertRound(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Convert from core point to WinForms point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.Convert(System.Drawing.SizeF)">
            <summary>
            Convert from WinForms size to core size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.Convert(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
            Convert from core size to WinForms size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.ConvertRound(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
            Convert from core size to WinForms size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.Convert(System.Drawing.RectangleF)">
            <summary>
            Convert from WinForms rectangle to core rectangle.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.Convert(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Convert from core rectangle to WinForms rectangle.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.ConvertRound(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Convert from core rectangle to WinForms rectangle.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.Convert(System.Drawing.Color)">
            <summary>
            Convert from WinForms color to core color.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.Convert(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
            Convert from core color to WinForms color.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Utils.CreateGraphics(System.Windows.Forms.Control)">
            <summary>
            mono has issue throwing exception for no reason.
            </summary>
            <param name="control">the control to create graphics object from</param>
            <returns>new graphics object or null in mono if failed</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Win32Utils">
            <summary>
            Utility for Win32 API.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Win32Utils.BitBltCopy">
            <summary>
            Const for BitBlt copy raster-operation code.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Win32Utils.BitBltPaint">
            <summary>
            Const for BitBlt paint raster-operation code.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Win32Utils.CreateMemoryHdc(System.IntPtr,System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            Create a compatible memory HDC from the given HDC.<br/>
            The memory HDC can be rendered into without effecting the original HDC.<br/>
            The returned memory HDC and <paramref name="dib"/> must be released using <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Win32Utils.ReleaseMemoryHdc(System.IntPtr,System.IntPtr)"/>.
            </summary>
            <param name="hdc">the HDC to create memory HDC from</param>
            <param name="width">the width of the memory HDC to create</param>
            <param name="height">the height of the memory HDC to create</param>
            <param name="dib">returns used bitmap memory section that must be released when done with memory HDC</param>
            <returns>memory HDC</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Win32Utils.ReleaseMemoryHdc(System.IntPtr,System.IntPtr)">
            <summary>
            Release the given memory HDC and dib section created from <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Win32Utils.CreateMemoryHdc(System.IntPtr,System.Int32,System.Int32,System.IntPtr@)"/>.
            </summary>
            <param name="memoryHdc">Memory HDC to release</param>
            <param name="dib">bitmap section to release</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Win32Utils.GetWindowRect(System.IntPtr,System.Drawing.Rectangle@)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window. The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
            </summary>
            <remarks>
            In conformance with conventions for the RECT structure, the bottom-right coordinates of the returned rectangle are exclusive. In other words, 
            the pixel at (right, bottom) lies immediately outside the rectangle.
            </remarks>
            <param name="hWnd">A handle to the window.</param>
            <param name="lpRect">A pointer to a RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.Utilities.Win32Utils.GetWindowRectangle(System.IntPtr)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window. The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
            </summary>
            <remarks>
            In conformance with conventions for the RECT structure, the bottom-right coordinates of the returned rectangle are exclusive. In other words, 
            the pixel at (right, bottom) lies immediately outside the rectangle.
            </remarks>
            <param name="handle">A handle to the window.</param>
            <returns>RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer">
            <summary>
            Low level handling of Html Renderer logic, this class is used by <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.HtmlParser"/>, 
            <see cref="!:HtmlLabel"/>, <see cref="!:HtmlToolTip"/> and <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender"/>.<br/>
            </summary>
            <seealso cref="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.HtmlContainerInt"/>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer._htmlContainerInt">
            <summary>
            The internal core html container
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.Refresh">
            <summary>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.ScrollChange">
            <summary>
            Raised when Html Renderer request scroll to specific location.<br/>
            This can occur on document anchor click.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.StylesheetLoad">
            <summary>
            Raised when a stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or Uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.HtmlContainerInt">
            <summary>
            The internal core html container
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.UseGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.<br/>
            </summary>
            <remarks>
            <para>
            GDI+ text rendering is less smooth than GDI text rendering but it natively supports alpha channel
            thus allows creating transparent images.
            </para>
            <para>
            While using GDI+ text rendering you can control the text rendering using <see cref="P:System.Drawing.Graphics.TextRenderingHint"/>, note that
            using <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/> doesn't work well with transparent background.
            </para>
            </remarks>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.CssData">
            <summary>
            the parsed stylesheet data used for handling the html
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default - false).
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.AvoidAsyncImagesLoading">
            <summary>
            Gets or sets a value indicating if image asynchronous loading should be avoided (default - false).<br/>
            True - images are loaded synchronously during html parsing.<br/>
            False - images are loaded asynchronously to html parsing when downloaded from URL or loaded from disk.<br/>
            </summary>
            <remarks>
            Asynchronously image loading allows to unblock html rendering while image is downloaded or loaded from disk using IO 
            ports to achieve better performance.<br/>
            Asynchronously image loading should be avoided when the full html content must be available during render, like render to image.
            </remarks>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.AvoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            True - images are loaded as soon as the html is parsed.<br/>
            False - images that are not visible because of scroll location are not loaded until they are scrolled to.
            </summary>
            <remarks>
            Images late loading improve performance if the page contains image outside the visible scroll area, especially if there is large 
            amount of images, as all image loading is delayed (downloading and loading into memory).<br/>
            Late image loading may effect the layout and actual size as image without set size will not have actual size until they are loaded
            resulting in layout change during user scroll.<br/>
            Early image loading may also effect the layout if image without known size above the current scroll location are loaded as they
            will push the html elements down.
            </remarks>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default - true)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.ScrollOffset">
            <summary>
            The scroll offset of the html.<br/>
            This will adjust the rendered html by the given offset so the content will be "scrolled".<br/>
            </summary>
            <example>
            Element that is rendered at location (50,100) with offset of (0,200) will not be rendered as it
            will be at -100 therefore outside the client rectangle.
            </example>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.Location">
            <summary>
            The top-left most location of the rendered html.<br/>
            This will offset the top-left corner of the rendered html.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.MaxSize">
            <summary>
            The max width and height of the rendered html.<br/>
            The max width will effect the html layout wrapping lines, resize images and tables where possible.<br/>
            The max height does NOT effect layout, but will not render outside it (clip).<br/>
            <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.ActualSize"/> can be exceed the max size by layout restrictions (unwrappable line, set image size, etc.).<br/>
            Set zero for unlimited (width\height separately).<br/>
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.ActualSize">
            <summary>
            The actual size of the rendered html (after layout)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.SetHtml(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData)">
            <summary>
            Init with optional document and stylesheet.
            </summary>
            <param name="htmlSource">the html to init with, init empty if not given</param>
            <param name="baseCssData">optional: the stylesheet to init with, init default if not given</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.GetHtml(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle)">
            <summary>
            Get html from the current DOM tree with style if requested.
            </summary>
            <param name="styleGen">Optional: controls the way styles are generated when html is generated (default: <see cref="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle.Inline"/>)</param>
            <returns>generated html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.GetAttributeAt(System.Drawing.Point,System.String)">
            <summary>
            Get attribute value of element at the given x,y location by given key.<br/>
            If more than one element exist with the attribute at the location the inner most is returned.
            </summary>
            <param name="location">the location to find the attribute at</param>
            <param name="attribute">the attribute key to get value by</param>
            <returns>found attribute value or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.GetLinks">
            <summary>
            Get all the links in the HTML with the element rectangle and href data.
            </summary>
            <returns>collection of all the links in the HTML</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.GetLinkAt(System.Drawing.Point)">
            <summary>
            Get css link href at the given x,y location.
            </summary>
            <param name="location">the location to find the link at</param>
            <returns>css link href if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br/>
            Element if found by id (id attribute on the html element).<br/>
            Note: to get the screen rectangle you need to adjust by the hosting control.<br/>
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.PerformLayout(System.Drawing.Graphics)">
            <summary>
            Measures the bounds of box and children, recursively.
            </summary>
            <param name="g">Device context to draw</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.PerformPaint(System.Drawing.Graphics)">
            <summary>
            Render the html using the given device.
            </summary>
            <param name="g">the device to use to render</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.HandleMouseDown(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.HandleMouseUp(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.HandleMouseDoubleClick(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse double click to select word under the mouse.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="e">mouse event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.HandleMouseMove(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.HandleMouseLeave(System.Windows.Forms.Control)">
            <summary>
            Handle mouse leave to handle hover cursor.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.HandleKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle key down event for selection and copy.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the pressed key</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.CreateMouseEvent(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Create HtmlRenderer mouse event from win forms mouse event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer.CreateKeyEevent(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Create HtmlRenderer key event from win forms key event.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender">
            <summary>
            Standalone static class for simple and direct HTML rendering.<br/>
            For WinForms UI prefer using HTML controls: <see cref="!:HtmlPanel"/> or <see cref="!:HtmlLabel"/>.<br/>
            For low-level control and performance consider using <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer"/>.<br/>
            </summary>
            <remarks>
            <para>
            <b>GDI vs. GDI+ text rendering</b><br/>
            Windows supports two text rendering technologies: GDI and GDI+.<br/> 
            GDI is older, has better performance and looks better on standard monitors but doesn't support alpha channel for transparency.<br/> 
            GDI+ is newer, device independent so work better for printers but is slower and looks worse on monitors.<br/>
            HtmlRender supports both GDI and GDI+ text rendering to accommodate different needs, GDI+ text rendering methods have "GdiPlus" suffix
            in their name where GDI do not.<br/>
            </para>
            <para>
            <b>Rendering to image</b><br/>
            See https://htmlrenderer.codeplex.com/wikipage?title=Image%20generation <br/>
            Because of GDI text rendering issue with alpha channel clear type text rendering rendering to image requires special handling.<br/>
            <u>Solid color background -</u> generate an image where the background is filled with solid color and all the html is rendered on top
            of the background color, GDI text rendering will be used. (RenderToImage method where the first argument is html string)<br/>
            <u>Image background -</u> render html on top of existing image with whatever currently exist but it cannot have transparent pixels, 
            GDI text rendering will be used. (RenderToImage method where the first argument is Image object)<br/>
            <u>Transparent background -</u> render html to empty image using GDI+ text rendering, the generated image can be transparent.
            Html rendering can be controlled using <see cref="T:System.Drawing.Text.TextRenderingHint"/>, note that <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/>
            doesn't render well on transparent background. (RenderToImageGdiPlus method)<br/>
            </para>
            <para>
            <b>Overwrite stylesheet resolution</b><br/>
            Exposed by optional "stylesheetLoad" delegate argument.<br/>
            Invoked when a stylesheet is about to be loaded by file path or URL in 'link' element.<br/>
            Allows to overwrite the loaded stylesheet by providing the stylesheet data manually, or different source (file or URL) to load from.<br/>
            Example: The stylesheet 'href' can be non-valid URI string that is interpreted in the overwrite delegate by custom logic to pre-loaded stylesheet object<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <b>Overwrite image resolution</b><br/>
            Exposed by optional "imageLoad" delegate argument.<br/>
            Invoked when an image is about to be loaded by file path, URL or inline data in 'img' element or background-image CSS style.<br/>
            Allows to overwrite the loaded image by providing the image object manually, or different source (file or URL) to load from.<br/>
            Example: image 'src' can be non-valid string that is interpreted in the overwrite delegate by custom logic to resource image object<br/>
            Example: image 'src' in the html is relative - the overwrite intercepts the load and provide full source URL to load the image from<br/>
            Example: image download requires authentication - the overwrite intercepts the load, downloads the image to disk using custom code and provide 
            file path to load the image from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            Note: Cannot use asynchronous scheme overwrite scheme.<br/>
            </para>
            </remarks>
            <example>
            <para>
            <b>Simple rendering</b><br/>
            HtmlRender.Render(g, "<![CDATA[<div>Hello <b>World</b></div>]]>");<br/>
            HtmlRender.Render(g, "<![CDATA[<div>Hello <b>World</b></div>]]>", 10, 10, 500, CssData.Parse("body {font-size: 20px}")");<br/>
            </para>
            <para>
            <b>Image rendering</b><br/>
            HtmlRender.RenderToImage("<![CDATA[<div>Hello <b>World</b></div>]]>", new Size(600,400));<br/>
            HtmlRender.RenderToImage("<![CDATA[<div>Hello <b>World</b></div>]]>", 600);<br/>
            HtmlRender.RenderToImage(existingImage, "<![CDATA[<div>Hello <b>World</b></div>]]>");<br/>
            </para>
            </example>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.AddFontFamily(System.Drawing.FontFamily)">
            <summary>
            Adds a font family to be used in html rendering.<br/>
            The added font will be used by all rendering function including <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer"/> and all WinForms controls.
            </summary>
            <remarks>
            The given font family instance must be remain alive while the renderer is in use.<br/>
            If loaded to <see cref="T:System.Drawing.Text.PrivateFontCollection"/> then the collection must be alive.<br/>
            If loaded from file then the file must not be deleted.
            </remarks>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <remarks>
            This fonts mapping can be used as a fallback in case the requested font is not installed in the client system.
            </remarks>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.ParseStyleSheet(System.String,System.Boolean)">
            <summary>
            Parse the given stylesheet to <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData"/> object.<br/>
            If <paramref name="combineWithDefault"/> is true the parsed css blocks are added to the 
            default css data (as defined by W3), merged if class name already exists. If false only the data in the given stylesheet is returned.
            </summary>
            <seealso cref="!:http://www.w3.org/TR/CSS21/sample.html"/>
            <param name="stylesheet">the stylesheet source to parse</param>
            <param name="combineWithDefault">true - combine the parsed css data with default css data, false - return only the parsed css data</param>
            <returns>the parsed css data</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.Measure(System.Drawing.Graphics,System.String,System.Single,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given max width restriction.<br/>
            If no max width restriction is given the layout will use the maximum possible width required by the content,
            it can be the longest text line or full image width.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.MeasureGdiPlus(System.Drawing.Graphics,System.String,System.Single,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given max width restriction.<br/>
            If no max width restriction is given the layout will use the maximum possible width required by the content,
            it can be the longest text line or full image width.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.Render(System.Drawing.Graphics,System.String,System.Single,System.Single,System.Single,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max width restriction.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="left">optional: the left most location to start render the html at (default - 0)</param>
            <param name="top">optional: the top most location to start render the html at (default - 0)</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.Render(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderGdiPlus(System.Drawing.Graphics,System.String,System.Single,System.Single,System.Single,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="left">optional: the left most location to start render the html at (default - 0)</param>
            <param name="top">optional: the top most location to start render the html at (default - 0)</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderGdiPlus(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderToImage(System.Drawing.Image,System.String,System.Drawing.PointF,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML on top of the given image.<br/>
            <paramref name="image"/> will contain the rendered html in it on top of original content.<br/>
            <paramref name="image"/> must not contain transparent pixels as it will corrupt the rendered html text.<br/>
            The HTML will be layout by the given image size but may be clipped if cannot fit.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="image">the image to render the html on</param>
            <param name="html">HTML source to render</param>
            <param name="location">optional: the top-left most location to start render the html at (default - 0,0)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderToImage(System.Drawing.Image,System.String,System.Drawing.PointF,System.Drawing.SizeF,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML on top of the given image.<br/>
            <paramref name="image"/> will contain the rendered html in it on top of original content.<br/>
            <paramref name="image"/> must not contain transparent pixels as it will corrupt the rendered html text.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="image">the image to render the html on</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderToImage(System.String,System.Drawing.Size,System.Drawing.Color,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of the requested size.<br/>
            The HTML will be layout by the given size but will be clipped if cannot fit.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="size">The size of the image to render into, layout html by width and clipped by height</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderToImage(System.String,System.Int32,System.Int32,System.Drawing.Color,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by max width/height and HTML layout.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxHeight"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: the max width of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="maxHeight">optional: the max height of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderToImage(System.String,System.Drawing.Size,System.Drawing.Size,System.Drawing.Color,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by min/max width/height and HTML layout.<br/>
            If <paramref name="maxSize.Width.Width"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize.Height.Height"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            If <paramref name="minSize"/> (Width/Height) is above zero the rendered image will not be smaller than the given min size.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="minSize">optional: the min size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">optional: the max size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Drawing.Size,System.Drawing.Text.TextRenderingHint,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of the requested size.<br/>
            The HTML will be layout by the given size but will be clipped if cannot fit.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="size">The size of the image to render into, layout html by width and clipped by height</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Int32,System.Int32,System.Drawing.Text.TextRenderingHint,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by max width/height and HTML layout.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxHeight"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: the max width of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="maxHeight">optional: the max height of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Drawing.Size,System.Drawing.Size,System.Drawing.Text.TextRenderingHint,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by min/max width/height and HTML layout.<br/>
            If <paramref name="maxSize.Width.Width"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize.Height.Height"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            If <paramref name="minSize"/> (Width/Height) is above zero the rendered image will not be smaller than the given min size.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="minSize">optional: the min size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">optional: the max size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.Measure(System.Drawing.Graphics,System.String,System.Single,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.Boolean,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given width and height restrictions.<br/>
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.MeasureHtmlByRestrictions(KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlContainer,System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Measure the size of the html by performing layout under the given restrictions.
            </summary>
            <param name="htmlContainer">the html to calculate the layout for</param>
            <param name="minSize">the minimal size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">the maximum size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <returns>return: the size of the html to be rendered within the min/max limits</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderClip(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.Boolean,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Clip the graphics so the html will not be rendered outside the max height bound given.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.RenderHtml(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.Boolean,System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.WinForms.HtmlRender.CopyBufferToImage(System.IntPtr,System.Drawing.Image)">
            <summary>
            Copy all the bitmap bits from memory bitmap buffer to the given image.
            </summary>
            <param name="memoryHdc">the source memory bitmap buffer to copy from</param>
            <param name="image">the destination bitmap image to copy to</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor">
            <summary>
            Represents an ARGB (alpha, red, green, blue) color.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.Empty">
            <summary>
                Represents a color that is null.
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.Transparent">
            <summary>
            Gets a system-defined color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.Black">
            <summary>
                Gets a system-defined color that has an ARGB value of #FF000000.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.White">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFFFFFFF.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.WhiteSmoke">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFF5F5F5.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.LightGray">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFD3D3D3.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.R">
            <summary>
                Gets the red component value of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.G">
            <summary>
                Gets the green component value of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.B">
            <summary>
                Gets the blue component value of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.A">
            <summary>
                Gets the alpha component value of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.IsEmpty">
            <summary>
                Specifies whether this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure is uninitialized.
            </summary>
            <returns>
                This property returns true if this color is uninitialized; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.op_Equality(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
                Tests whether two specified <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structures are equivalent.
            </summary>
            <returns>
                true if the two <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structures are equal; otherwise, false.
            </returns>
            <param name="left">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> that is to the left of the equality operator.
            </param>
            <param name="right">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> that is to the right of the equality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.op_Inequality(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
                Tests whether two specified <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structures are different.
            </summary>
            <returns>
                true if the two <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structures are different; otherwise, false.
            </returns>
            <param name="left">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> that is to the left of the inequality operator.
            </param>
            <param name="right">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> that is to the right of the inequality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure from the four ARGB component (alpha, red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.
            </summary>
            <returns>
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> that this method creates.
            </returns>
            <param name="alpha">The alpha component. Valid values are 0 through 255. </param>
            <param name="red">The red component. Valid values are 0 through 255. </param>
            <param name="green">The green component. Valid values are 0 through 255. </param>
            <param name="blue">The blue component. Valid values are 0 through 255. </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="alpha" />, <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.
            </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.FromArgb(System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure from the specified 8-bit color values (red, green, and blue). The alpha value is implicitly 255 (fully opaque). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </summary>
            <returns>
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> that this method creates.
            </returns>
            <param name="red">
                The red component value for the new <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <param name="green">
                The green component value for the new <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <param name="blue">
                The blue component value for the new <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.
            </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.Equals(System.Object)">
            <summary>
                Tests whether the specified object is a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure and is equivalent to this
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" />
                structure.
            </summary>
            <returns>
                true if <paramref name="obj" /> is a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure equivalent to this
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" />
                structure; otherwise, false.
            </returns>
            <param name="obj">The object to test. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure.
            </summary>
            <returns>
                An integer value that specifies the hash code for this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor.ToString">
            <summary>
                Converts this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor" /> structure to a human-readable string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RDashStyle">
            <summary>
            Specifies the style of dashed lines drawn with a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RPen"/> object.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RFontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RKeyEvent">
            <summary>
            Even class for handling keyboard events in <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt"/>.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RKeyEvent._control">
            <summary>
            is control is pressed
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RKeyEvent._aKeyCode">
            <summary>
            is 'A' key is pressed
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RKeyEvent._cKeyCode">
            <summary>
            is 'C' key is pressed
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RKeyEvent.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RKeyEvent.Control">
            <summary>
            is control is pressed
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RKeyEvent.AKeyCode">
            <summary>
            is 'A' key is pressed
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RKeyEvent.CKeyCode">
            <summary>
            is 'C' key is pressed
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RMouseEvent">
            <summary>
            Even class for handling keyboard events in <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt"/>.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RMouseEvent._leftButton">
            <summary>
            Is the left mouse button participated in the event
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RMouseEvent.#ctor(System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RMouseEvent.LeftButton">
            <summary>
            Is the left mouse button participated in the event
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint">
            <summary>
                Represents an ordered pair of floating-point x- and y-coordinates that defines a point in a two-dimensional plane.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.Empty">
            <summary>
                Represents a new instance of the <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> class with member data left uninitialized.
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> class with the specified coordinates.
            </summary>
            <param name="x">The horizontal position of the point. </param>
            <param name="y">The vertical position of the point. </param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.IsEmpty">
            <summary>
                Gets a value indicating whether this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> is empty.
            </summary>
            <returns>
                true if both <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.Y" />
                are 0; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.X">
            <summary>
                Gets or sets the x-coordinate of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />.
            </summary>
            <returns>
                The x-coordinate of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.Y">
            <summary>
                Gets or sets the y-coordinate of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />.
            </summary>
            <returns>
                The y-coordinate of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.op_Addition(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Translates the <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> by the specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to add to the x- and y-coordinates of the
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />
                .
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.op_Subtraction(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Translates a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> by the negative of a specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to subtract from the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.op_Equality(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
                Compares two <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> structures. The result specifies whether the values of the
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.X" />
                and <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.Y" /> properties of the two
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />
                structures are equal.
            </summary>
            <returns>
                true if the <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.Y" />
                values of the left and right
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />
                structures are equal; otherwise, false.
            </returns>
            <param name="left">
                A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> to compare.
            </param>
            <param name="right">
                A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> to compare.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.op_Inequality(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
                Determines whether the coordinates of the specified points are not equal.
            </summary>
            <returns>
                true to indicate the <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.Y" />
                values of <paramref name="left" /> and
                <paramref
                    name="right" />
                are not equal; otherwise, false.
            </returns>
            <param name="left">
                A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> to compare.
            </param>
            <param name="right">
                A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> to compare.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.Add(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Translates a given <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> by a specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to add to the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.Subtract(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Translates a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> by the negative of a specified size.
            </summary>
            <returns>
                The translated <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to subtract from the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.Equals(System.Object)">
            <summary>
                Specifies whether this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> contains the same coordinates as the specified
                <see
                    cref="T:System.Object" />
                .
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> and has the same coordinates as this
                <see
                    cref="T:System.Drawing.Point" />
                .
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>
                An integer value that specifies a hash value for this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint.ToString">
            <summary>
                Converts this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> to a human readable string.
            </summary>
            <returns>
                A string that represents this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect">
            <summary>
            Stores a set of four floating-point numbers that represent the location and size of a rectangle. 
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Empty">
            <summary>
                Represents an instance of the <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> class with its members uninitialized.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> class with the specified location and size.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle. </param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle. </param>
            <param name="width">The width of the rectangle. </param>
            <param name="height">The height of the rectangle. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> class with the specified location and size.
            </summary>
            <param name="location">A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> that represents the upper-left corner of the rectangular region.</param>
            <param name="size">A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> that represents the width and height of the rectangular region.</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> that represents the upper-left corner of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.</returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Size">
            <summary>
            Gets or sets the size of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" />.
            </summary>
            <returns>A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> that represents the width and height of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.</returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.X">
            <summary>
                Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate of the upper-left corner of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Y">
            <summary>
                Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate of the upper-left corner of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Width">
            <summary>
                Gets or sets the width of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The width of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Height">
            <summary>
                Gets or sets the height of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The height of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Left">
            <summary>
                Gets the x-coordinate of the left edge of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate of the left edge of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Top">
            <summary>
                Gets the y-coordinate of the top edge of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate of the top edge of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Right">
            <summary>
                Gets the x-coordinate that is the sum of <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.X" /> and
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Width" />
                of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate that is the sum of <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.X" /> and
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Width" />
                of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Bottom">
            <summary>
                Gets the y-coordinate that is the sum of <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Y" /> and
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Height" />
                of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate that is the sum of <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Y" /> and
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Height" />
                of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.IsEmpty">
            <summary>
                Tests whether the <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Width" /> or
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Height" />
                property of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> has a value of zero.
            </summary>
            <returns>
                This property returns true if the <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Width" /> or
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Height" />
                property of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> has a value of zero; otherwise, false.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.op_Equality(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
                Tests whether two <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structures have equal location and size.
            </summary>
            <returns>
                This operator returns true if the two specified <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structures have equal
                <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.X" />, <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Y" />, <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Width" />, and <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Height" /> properties.
            </returns>
            <param name="left">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure that is to the left of the equality operator.
            </param>
            <param name="right">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure that is to the right of the equality operator.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.op_Inequality(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
                Tests whether two <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structures differ in location or size.
            </summary>
            <returns>
                This operator returns true if any of the <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.X" /> ,
                <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Y" />, <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Width" />, or <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Height" />
                properties of the two <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structures are unequal; otherwise false.
            </returns>
            <param name="left">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure that is to the left of the inequality operator.
            </param>
            <param name="right">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure that is to the right of the inequality operator.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.FromLTRB(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure with upper-left corner and lower-right corner at the specified locations.
            </summary>
            <returns>
                The new <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> that this method creates.
            </returns>
            <param name="left">The x-coordinate of the upper-left corner of the rectangular region. </param>
            <param name="top">The y-coordinate of the upper-left corner of the rectangular region. </param>
            <param name="right">The x-coordinate of the lower-right corner of the rectangular region. </param>
            <param name="bottom">The y-coordinate of the lower-right corner of the rectangular region. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Equals(System.Object)">
            <summary>
                Tests whether <paramref name="obj" /> is a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> with the same location and size of this
                <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" />.
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> and its X, Y, Width, and Height properties are equal to the corresponding properties of this
                <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" />; otherwise, false.
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Contains(System.Double,System.Double)">
            <summary>
                Determines if the specified point is contained within this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                This method returns true if the point defined by <paramref name="x" /> and <paramref name="y" /> is contained within this
                <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" />
                structure; otherwise false.
            </returns>
            <param name="x">The x-coordinate of the point to test. </param>
            <param name="y">The y-coordinate of the point to test. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Contains(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
                Determines if the specified point is contained within this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                This method returns true if the point represented by the <paramref name="pt" /> parameter is contained within this
                <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" />
                structure; otherwise false.
            </returns>
            <param name="pt">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> to test.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Contains(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
                Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this
                <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" />
                structure.
            </summary>
            <returns>
                This method returns true if the rectangular region represented by <paramref name="rect" /> is entirely contained within the rectangular region represented by this
                <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" />
                ; otherwise false.
            </returns>
            <param name="rect">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> to test.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Inflate(System.Double,System.Double)">
            <summary>
                Inflates this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure by the specified amount.
            </summary>
            <param name="x">
                The amount to inflate this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure horizontally.
            </param>
            <param name="y">
                The amount to inflate this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure vertically.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Inflate(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Inflates this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> by the specified amount.
            </summary>
            <param name="size">The amount to inflate this rectangle. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Inflate(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Double,System.Double)">
            <summary>
                Creates and returns an inflated copy of the specified <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure. The copy is inflated by the specified amount. The original rectangle remains unmodified.
            </summary>
            <returns>
                The inflated <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" />.
            </returns>
            <param name="rect">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> to be copied. This rectangle is not modified.
            </param>
            <param name="x">The amount to inflate the copy of the rectangle horizontally. </param>
            <param name="y">The amount to inflate the copy of the rectangle vertically. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Intersect(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
                Replaces this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure with the intersection of itself and the specified
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" />
                structure.
            </summary>
            <param name="rect">The rectangle to intersect. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Intersect(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
                Returns a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure that represents the intersection of two rectangles. If there is no intersection, and empty
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" />
                is returned.
            </summary>
            <returns>
                A third <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure the size of which represents the overlapped area of the two specified rectangles.
            </returns>
            <param name="a">A rectangle to intersect. </param>
            <param name="b">A rectangle to intersect. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.IntersectsWith(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
                Determines if this rectangle intersects with <paramref name="rect" />.
            </summary>
            <returns>
                This method returns true if there is any intersection.
            </returns>
            <param name="rect">The rectangle to test. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Union(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
                Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.
            </summary>
            <returns>
                A third <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure that contains both of the two rectangles that form the union.
            </returns>
            <param name="a">A rectangle to union. </param>
            <param name="b">A rectangle to union. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Offset(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
                Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="pos">The amount to offset the location. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Offset(System.Double,System.Double)">
            <summary>
                Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="x">The amount to offset the location horizontally. </param>
            <param name="y">The amount to offset the location vertically. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.GetHashCode">
            <summary>
                Gets the hash code for this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure. For information about the use of hash codes, see Object.GetHashCode.
            </summary>
            <returns>The hash code for this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.ToString">
            <summary>
            Converts the Location and Size of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> to a human-readable string.
            </summary>
            <returns>
            A string that contains the position, width, and height of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect" /> structure for example, "{X=20, Y=20, Width=100, Height=50}".
            </returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize">
            <summary>
            Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.Empty">
            <summary>
                Gets a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure that has a
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.Height" />
                and
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.Width" />
                value of 0.
            </summary>
            <returns>
                A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure that has a
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.Height" />
                and
                <see
                    cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.Width" />
                value of 0.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Initializes a new instance of the <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure from the specified existing
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" />
                structure.
            </summary>
            <param name="size">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure from which to create the new
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" />
                structure.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure from the specified <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> structure.
            </summary>
            <param name="pt">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> structure from which to initialize this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure from the specified dimensions.
            </summary>
            <param name="width">
                The width component of the new <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure.
            </param>
            <param name="height">
                The height component of the new <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure.
            </param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.IsEmpty">
            <summary>
                Gets a value that indicates whether this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure has zero width and height.
            </summary>
            <returns>
                This property returns true when this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure has both a width and height of zero; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.Width">
            <summary>
                Gets or sets the horizontal component of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                The horizontal component of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure, typically measured in pixels.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.Height">
            <summary>
                Gets or sets the vertical component of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                The vertical component of this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure, typically measured in pixels.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.op_Explicit(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)~KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint">
            <summary>
                Converts the specified <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure to a
                <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> structure to which this operator converts.</returns>
            <param name="size">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure to be converted
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.op_Addition(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Adds the width and height of one <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure to the width and height of another
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure that is the result of the addition operation.
            </returns>
            <param name="sz1">
                The first <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure to add.
            </param>
            <param name="sz2">
                The second <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure to add.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.op_Subtraction(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Subtracts the width and height of one <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure from the width and height of another
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> that is the result of the subtraction operation.
            </returns>
            <param name="sz1">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure on the left side of the subtraction operator.
            </param>
            <param name="sz2">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure on the right side of the subtraction operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.op_Equality(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Tests whether two <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structures are equal.
            </summary>
            <returns>
                This operator returns true if <paramref name="sz1" /> and <paramref name="sz2" /> have equal width and height; otherwise, false.
            </returns>
            <param name="sz1">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure on the left side of the equality operator.
            </param>
            <param name="sz2">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure on the right of the equality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.op_Inequality(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Tests whether two <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structures are different.
            </summary>
            <returns>
                This operator returns true if <paramref name="sz1" /> and <paramref name="sz2" /> differ either in width or height; false if
                <paramref
                    name="sz1" />
                and <paramref name="sz2" /> are equal.
            </returns>
            <param name="sz1">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure on the left of the inequality operator.
            </param>
            <param name="sz2">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure on the right of the inequality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.Add(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Adds the width and height of one <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure to the width and height of another
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure that is the result of the addition operation.
            </returns>
            <param name="sz1">
                The first <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure to add.
            </param>
            <param name="sz2">
                The second <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure to add.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.Subtract(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
                Subtracts the width and height of one <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure from the width and height of another
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure that is a result of the subtraction operation.
            </returns>
            <param name="sz1">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure on the left side of the subtraction operator.
            </param>
            <param name="sz2">
                The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure on the right side of the subtraction operator.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.Equals(System.Object)">
            <summary>
                Tests to see whether the specified object is a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure with the same dimensions as this
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> and has the same width and height as this
                <see
                    cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" />
                ; otherwise, false.
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                An integer value that specifies a hash value for this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.ToPointF">
            <summary>
                Converts a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure to a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>
                Returns a <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint" /> structure.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize.ToString">
            <summary>
                Creates a human-readable string that represents this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                A string that represents this <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
            <PermissionSet>
                <IPermission
                    class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                    version="1" Flags="UnmanagedCode" />
            </PermissionSet>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter">
            <summary>
            Platform adapter to bridge platform specific objects to HTML Renderer core library.<br/>
            Core uses abstract renderer objects (RAdapter/RControl/REtc...) to access platform specific functionality, the concrete platforms 
            implements those objects to provide concrete platform implementation. Those allowing the core library to be platform agnostic.
            <para>
            Platforms: WinForms, WPF, Metro, PDF renders, etc.<br/>
            Objects: UI elements(Controls), Graphics(Render context), Colors, Brushes, Pens, Fonts, Images, Clipboard, etc.<br/>
            </para>
            </summary>
            <remarks>
            It is best to have a singleton instance of this class for concrete implementation!<br/>
            This is because it holds caches of default CssData, Images, Fonts and Brushes.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter._brushesCache">
            <summary>
            cache of brush color to brush instance
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter._penCache">
            <summary>
            cache of pen color to pen instance
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter._fontsHandler">
            <summary>
            cache of all the font used not to create same font again and again
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter._defaultCssData">
            <summary>
            default CSS parsed data singleton
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter._loadImage">
            <summary>
            image used to draw loading image icon
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter._errorImage">
            <summary>
            image used to draw error image icon
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.DefaultCssData">
            <summary>
            Get the default CSS stylesheet data.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetColor(System.String)">
            <summary>
            Resolve color value from given color name.
            </summary>
            <param name="colorName">the color name</param>
            <returns>color value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetPen(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
            Get cached pen instance for the given color.
            </summary>
            <param name="color">the color to get pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetSolidBrush(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
            Get cached solid brush instance for the given color.
            </summary>
            <param name="color">the color to get brush for</param>
            <returns>brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetLinearGradientBrush(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.ConvertImage(System.Object)">
            <summary>
            Convert image object returned from <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs"/> to <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage"/>.
            </summary>
            <param name="image">the image returned from load event</param>
            <returns>converted image or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.ImageFromStream(System.IO.Stream)">
            <summary>
            Create an <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage"/> object from the given stream.
            </summary>
            <param name="memoryStream">the stream to create image from</param>
            <returns>new image instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.IsFontExists(System.String)">
            <summary>
            Check if the given font exists in the system by font family name.
            </summary>
            <param name="font">the font name to check</param>
            <returns>true - font exists by given family name, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.AddFontFamily(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFontFamily)">
            <summary>
            Adds a font family to be used.
            </summary>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetFont(System.String,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetLoadingImage">
            <summary>
            Get image to be used while HTML image is loading.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetLoadingFailedImage">
            <summary>
            Get image to be used if HTML image load failed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetClipboardDataObject(System.String,System.String)">
            <summary>
            Get data object for the given html and plain text data.<br />
            The data object can be used for clipboard or drag-drop operation.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
            <returns>drag-drop data object</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.SetToClipboard(System.String)">
            <summary>
            Set the given text to the clipboard<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="text">the text to set</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.SetToClipboard(System.String,System.String)">
            <summary>
            Set the given html and plain text data to clipboard.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.SetToClipboard(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage)">
            <summary>
            Set the given image to clipboard.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="image">the image object to set to clipboard</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetContextMenu">
            <summary>
            Create a context menu that can be used on the control<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <returns>new context menu</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.SaveToFile(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage,System.String,System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl)">
            <summary>
            Save the given image to file by showing save dialog to the client.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="image">the image to save</param>
            <param name="name">the name of the image for save dialog</param>
            <param name="extension">the extension of the image for save dialog</param>
            <param name="control">optional: the control to show the dialog on</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.CreateFont(System.String,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.CreateFont(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFontFamily,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family instance, size and style.<br/>
            Used to support custom fonts that require explicit font family instance to be created.
            </summary>
            <param name="family">the font family instance</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetColorInt(System.String)">
            <summary>
            Resolve color value from given color name.
            </summary>
            <param name="colorName">the color name</param>
            <returns>color value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.CreatePen(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
            Get cached pen instance for the given color.
            </summary>
            <param name="color">the color to get pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.CreateSolidBrush(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
            Get cached solid brush instance for the given color.
            </summary>
            <param name="color">the color to get brush for</param>
            <returns>brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.CreateLinearGradientBrush(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.ConvertImageInt(System.Object)">
            <summary>
            Convert image object returned from <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs"/> to <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage"/>.
            </summary>
            <param name="image">the image returned from load event</param>
            <returns>converted image or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.ImageFromStreamInt(System.IO.Stream)">
            <summary>
            Create an <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage"/> object from the given stream.
            </summary>
            <param name="memoryStream">the stream to create image from</param>
            <returns>new image instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.CreateFontInt(System.String,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.CreateFontInt(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFontFamily,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family instance, size and style.<br/>
            Used to support custom fonts that require explicit font family instance to be created.
            </summary>
            <param name="family">the font family instance</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.GetClipboardDataObjectInt(System.String,System.String)">
            <summary>
            Get data object for the given html and plain text data.<br />
            The data object can be used for clipboard or drag-drop operation.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
            <returns>drag-drop data object</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.SetToClipboardInt(System.String)">
            <summary>
            Set the given text to the clipboard
            </summary>
            <param name="text">the text to set</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.SetToClipboardInt(System.String,System.String)">
            <summary>
            Set the given html and plain text data to clipboard.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.SetToClipboardInt(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage)">
            <summary>
            Set the given image to clipboard.
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.CreateContextMenuInt">
            <summary>
            Create a context menu that can be used on the control
            </summary>
            <returns>new context menu</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter.SaveToFileInt(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage,System.String,System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl)">
            <summary>
            Save the given image to file by showing save dialog to the client.
            </summary>
            <param name="image">the image to save</param>
            <param name="name">the name of the image for save dialog</param>
            <param name="extension">the extension of the image for save dialog</param>
            <param name="control">optional: the control to show the dialog on</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RBrush">
            <summary>
            Adapter for platform specific brush objects - used to fill graphics (rectangles, polygons and paths).<br/>
            The brush can be solid color, gradient or image.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RContextMenu">
            <summary>
            Adapter for platform specific context menu - used to create and show context menu at specific location.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RContextMenu.ItemsCount">
            <summary>
            The total number of items in the context menu
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RContextMenu.AddDivider">
            <summary>
            AddBulk divider item to the context menu.<br />
            The divider is a non clickable place holder used to separate items.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RContextMenu.AddItem(System.String,System.Boolean,System.EventHandler)">
            <summary>
            AddBulk item to the context menu with the given text that will raise the given event when clicked.
            </summary><param name="text">the text to set on the new context menu item</param><param name="enabled">if to set the item as enabled or disabled</param><param name="onClick">the event to raise when the item is clicked</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RContextMenu.RemoveLastDivider">
            <summary>
            Remove the last item from the context menu iff it is a divider
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RContextMenu.Show(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Show the context menu in the given parent control at the given location.
            </summary><param name="parent">the parent control to show in</param><param name="location">the location to show at relative to the parent control</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl">
            <summary>
            Adapter for platform specific control object - used to handle updating the control that the html is rendered on.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl._adapter">
            <summary>
            The platform adapter.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter)">
            <summary>
            Init control with platform adapter.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.Adapter">
            <summary>
            The platform adapter.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.LeftMouseButton">
            <summary>
            Is the left mouse button is currently in pressed state
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.RightMouseButton">
            <summary>
            Is the right mouse button is currently in pressed state
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.MouseLocation">
            <summary>
            Get the current location of the mouse relative to the control
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.SetCursorDefault">
            <summary>
            Set the cursor over the control to default cursor
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.SetCursorHand">
            <summary>
            Set the cursor over the control to hand cursor
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.SetCursorIBeam">
            <summary>
            Set the cursor over the control to I beam cursor
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.DoDragDropCopy(System.Object)">
            <summary>
            Do drag-drop copy operation for the given data object.
            </summary>
            <param name="dragDropData">the drag-drop data object</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.MeasureString(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont,System.Double,System.Int32@,System.Double@)">
            <summary>
            Measure the width of string under max width restriction calculating the number of characters that can fit and the width those characters take.<br/>
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <param name="maxWidth">the max width to calculate fit characters</param>
            <param name="charFit">the number of characters that will fit under <see cref="!:maxWidth"/> restriction</param>
            <param name="charFitWidth">the width that only the characters that fit into max width take</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl.Invalidate">
            <summary>
            Invalidates the entire surface of the control and causes the control to be redrawn.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont">
            <summary>
            Adapter for platform specific font object - used to render text using specific font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont.Size">
            <summary>
            Gets the em-size of this FontDefault measured in the units specified by the Unit property.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont.Height">
            <summary>
            The line spacing, in pixels, of this font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont.UnderlineOffset">
            <summary>
            Get the vertical offset of the font underline location from the top of the font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont.LeftPadding">
            <summary>
            Get the left padding, in pixels, of the font.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFontFamily">
            <summary>
            Adapter for platform specific font family object - define the available font families to use.<br/>
            Required for custom fonts handling: fonts that are not installed on the system.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFontFamily.Name">
            <summary>
            Gets the name of this FontDefault Family.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics">
            <summary>
            Adapter for platform specific graphics rendering object - used to render graphics and text in platform specific context.<br/>
            The core HTML Renderer components use this class for rendering logic, extending this
            class in different platform: WinForms, WPF, Metro, PDF, etc.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics._adapter">
            <summary>
            the global adapter
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics._clipStack">
            <summary>
            The clipping bound stack as clips are pushed/poped to/from the graphics
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics._suspendedClips">
            <summary>
            The suspended clips
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.GetPen(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
            Get color pen.
            </summary>
            <param name="color">the color to get the pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.GetSolidBrush(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
            Get solid color brush.
            </summary>
            <param name="color">the color to get the brush for</param>
            <returns>solid color brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.GetLinearGradientBrush(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.GetClip">
            <summary>
            Gets a Rectangle structure that bounds the clipping region of this Graphics.
            </summary>
            <returns>A rectangle structure that represents a bounding rectangle for the clipping region of this Graphics.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.PopClip">
            <summary>
            Pop the latest clip push.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.PushClip(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Push the clipping region of this Graphics to interception of current clipping rectangle and the given rectangle.
            </summary>
            <param name="rect">Rectangle to clip to.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.PushClipExclude(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Push the clipping region of this Graphics to exclude the given rectangle from the current clipping rectangle.
            </summary>
            <param name="rect">Rectangle to exclude clipping in.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.SuspendClipping">
            <summary>
            Restore the clipping region to the initial clip.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.ResumeClipping">
            <summary>
            Resumes the suspended clips.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.SetAntiAliasSmoothingMode">
            <summary>
            Set the graphics smooth mode to use anti-alias.<br/>
            Use <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.ReturnPreviousSmoothingMode(System.Object)"/> to return back the mode used.
            </summary>
            <returns>the previous smooth mode before the change</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.ReturnPreviousSmoothingMode(System.Object)">
            <summary>
            Return to previous smooth mode before anti-alias was set as returned from <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.SetAntiAliasSmoothingMode"/>.
            </summary>
            <param name="prevMode">the previous mode to set</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.GetTextureBrush(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Get TextureBrush object that uses the specified image and bounding rectangle.
            </summary>
            <param name="image">The Image object with which this TextureBrush object fills interiors.</param>
            <param name="dstRect">A Rectangle structure that represents the bounding rectangle for this TextureBrush object.</param>
            <param name="translateTransformLocation">The dimension by which to translate the transformation</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.GetGraphicsPath">
            <summary>
            Get GraphicsPath object.
            </summary>
            <returns>graphics path instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.MeasureString(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont)">
            <summary>
            Measure the width and height of string <paramref name="str"/> when drawn on device context HDC
            using the given font <paramref name="font"/>.
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <returns>the size of the string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.MeasureString(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont,System.Double,System.Int32@,System.Double@)">
            <summary>
            Measure the width of string under max width restriction calculating the number of characters that can fit and the width those characters take.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <param name="maxWidth">the max width to calculate fit characters</param>
            <param name="charFit">the number of characters that will fit under <see cref="!:maxWidth"/> restriction</param>
            <param name="charFitWidth">the width that only the characters that fit into max width take</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.DrawString(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFont,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,System.Boolean)">
            <summary>
            Draw the given string using the given font and foreground color at given location.
            </summary>
            <param name="str">the string to draw</param>
            <param name="font">the font to use to draw the string</param>
            <param name="color">the text color to set</param>
            <param name="point">the location to start string draw (top-left)</param>
            <param name="size">used to know the size of the rendered text for transparent text support</param>
            <param name="rtl">is to render the string right-to-left (true - RTL, false - LTR)</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.DrawLine(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the line. </param>
            <param name="x1">The x-coordinate of the first point. </param>
            <param name="y1">The y-coordinate of the first point. </param>
            <param name="x2">The x-coordinate of the second point. </param>
            <param name="y2">The y-coordinate of the second point. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.DrawRectangle(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen that determines the color, width, and style of the rectangle. </param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw. </param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw. </param>
            <param name="width">The width of the rectangle to draw. </param>
            <param name="height">The height of the rectangle to draw. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.DrawRectangle(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RBrush,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill. </param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill. </param>
            <param name="width">Width of the rectangle to fill. </param>
            <param name="height">Height of the rectangle to fill. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.DrawImage(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Draws the specified portion of the specified <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage"/> at the specified location and with the specified size.
            </summary>
            <param name="image">Image to draw. </param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle. </param>
            <param name="srcRect">Rectangle structure that specifies the portion of the <paramref name="image"/> object to draw. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.DrawImage(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Draws the specified Image at the specified location and with the specified size.
            </summary>
            <param name="image">Image to draw. </param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.DrawPath(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RPen,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphicsPath)">
            <summary>
            Draws a GraphicsPath.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the path. </param>
            <param name="path">GraphicsPath to draw. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.DrawPath(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RBrush,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="path">GraphicsPath that represents the path to fill. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.DrawPolygon(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RBrush,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by Point structures.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="points">Array of Point structures that represent the vertices of the polygon to fill. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphicsPath">
            <summary>
            Adapter for platform specific graphics path object - used to render (draw/fill) path shape.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphicsPath.Start(System.Double,System.Double)">
            <summary>
            Start path at the given point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphicsPath.LineTo(System.Double,System.Double)">
            <summary>
            AddBulk stright line to the given point from te last point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphicsPath.ArcTo(System.Double,System.Double,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphicsPath.Corner)">
            <summary>
            AddBulk circular arc of the given size to the given point from the last point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphicsPath.Dispose">
            <summary>
            Release path resources.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphicsPath.Corner">
            <summary>
            The 4 corners that are handled in arc rendering.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage">
            <summary>
            Adapter for platform specific image object - used to render images.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage.Width">
            <summary>
            Get the width, in pixels, of the image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage.Height">
            <summary>
            Get the height, in pixels, of the image.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RPen">
            <summary>
            Adapter for platform specific pen objects - used to draw graphics (lines, rectangles and paths) 
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RPen.Width">
            <summary>
            Gets or sets the width of this Pen, in units of the Graphics object used for drawing.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RPen.DashStyle">
            <summary>
            Gets or sets the style used for dashed lines drawn with this Pen.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData">
            <summary>
            Holds parsed stylesheet css blocks arranged by media and classes.<br/>
            <seealso cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock"/>
            </summary>
            <remarks>
            To learn more about CSS blocks visit CSS spec: http://www.w3.org/TR/CSS21/syndata.html#block
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData._emptyArray">
            <summary>
            used to return empty array
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData._mediaBlocks">
            <summary>
            dictionary of media type to dictionary of css class name to the cssBlocks collection with all the data.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData.Parse(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter,System.String,System.Boolean)">
            <summary>
            Parse the given stylesheet to <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData"/> object.<br/>
            If <paramref name="combineWithDefault"/> is true the parsed css blocks are added to the 
            default css data (as defined by W3), merged if class name already exists. If false only the data in the given stylesheet is returned.
            </summary>
            <seealso cref="!:http://www.w3.org/TR/CSS21/sample.html"/>
            <param name="adapter">Platform adapter</param>
            <param name="stylesheet">the stylesheet source to parse</param>
            <param name="combineWithDefault">true - combine the parsed css data with default css data, false - return only the parsed css data</param>
            <returns>the parsed css data</returns>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData.MediaBlocks">
            <summary>
            dictionary of media type to dictionary of css class name to the cssBlocks collection with all the data
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData.ContainsCssBlock(System.String,System.String)">
            <summary>
            Check if there are css blocks for the given class selector.
            </summary>
            <param name="className">the class selector to check for css blocks by</param>
            <param name="media">optional: the css media type (default - all)</param>
            <returns>true - has css blocks for the class, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData.GetCssBlock(System.String,System.String)">
            <summary>
            Get collection of css blocks for the requested class selector.<br/>
            the <paramref name="className"/> can be: class name, html element name, html element and 
            class name (elm.class), hash tag with element id (#id).<br/>
            returned all the blocks that word on the requested class selector, it can contain simple
            selector or hierarchy selector.
            </summary>
            <param name="className">the class selector to get css blocks by</param>
            <param name="media">optional: the css media type (default - all)</param>
            <returns>collection of css blocks, empty collection if no blocks exists (never null)</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData.AddCssBlock(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock)">
            <summary>
            AddBulk the given css block to the css data, merging to existing block if required.
            </summary>
            <remarks>
            If there is no css blocks for the same class it will be added to data collection.<br/>
            If there is already css blocks for the same class it will check for each existing block
            if the hierarchical selectors match (or not exists). if do the two css blocks will be merged into
            one where the new block properties overwrite existing if needed. if the new block doesn't mach any
            existing it will be added either to the beginning of the list if it has no  hierarchical selectors or at the end.<br/>
            Css block without hierarchical selectors must be added to the beginning of the list so more specific block
            can overwrite it when the style is applied.
            </remarks>
            <param name="media">the media type to add the CSS to</param>
            <param name="cssBlock">the css block to add</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData.Combine(KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData)">
            <summary>
            Combine this CSS data blocks with <paramref name="other"/> CSS blocks for each media.<br/>
            Merge blocks if exists in both.
            </summary>
            <param name="other">the CSS data to combine with</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData.Clone">
            <summary>
            Create deep copy of the css data with cloned css blocks.
            </summary>
            <returns>cloned object</returns>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.CssDefaults.DefaultStyleSheet">
            <summary>
            CSS Specification's Default Style Sheet for HTML 4
            </summary>
            <remarks>
            http://www.w3.org/TR/CSS21/sample.html
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.Border">
            <summary>
            Border types
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox">
            <summary>
            Represents a CSS Box of text or replaced elements.
            </summary>
            <remarks>
            The Box can contains other boxes, that's the way that the CSS Tree
            is composed.
            
            To know more about boxes visit CSS spec:
            http://www.w3.org/TR/CSS21/box.html
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox._parentBox">
            <summary>
            the parent css box of this css box in the hierarchy
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox._htmlContainer">
            <summary>
            the root container for the hierarchy
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox._htmltag">
            <summary>
            the html tag that is associated with this css box, null if anonymous box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox._text">
            <summary>
            the inner text of the box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox._tableFixed">
            <summary>
            Do not use or alter this flag
            </summary>
            <remarks>
            Flag that indicates that CssTable algorithm already made fixes on it.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox._imageLoadHandler">
            <summary>
            handler for loading background image
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parentBox">optional: the parent of this css box in html</param>
            <param name="tag">optional: the html tag associated with this css box</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.HtmlContainer">
            <summary>
            Gets the HtmlContainer of the Box.
            WARNING: May be null.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.ParentBox">
            <summary>
            Gets or sets the parent box of this box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.Boxes">
            <summary>
            Gets the children boxes of this box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.IsBrElement">
            <summary>
            Is the box is of "br" element.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.IsInline">
            <summary>
            is the box "Display" is "Inline", is this is an inline box and not block.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.IsBlock">
            <summary>
            is the box "Display" is "Block", is this is an block box and not inline.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.IsClickable">
            <summary>
            Is the css box clickable (by default only "a" element is clickable)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.IsFixed">
            <summary>
            Gets a value indicating whether this instance or one of its parents has Position = fixed.
            </summary>
            <value>
              <c>true</c> if this instance is fixed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.HrefLink">
            <summary>
            Get the href link of the box (by default get "href" attribute)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.ContainingBlock">
            <summary>
            Gets the containing block-box of this box. (The nearest parent box with display=block)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.HtmlTag">
            <summary>
            Gets the HTMLTag that hosts this box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.IsImage">
            <summary>
            Gets if this box represents an image
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.IsSpaceOrEmpty">
            <summary>
            Tells if the box is empty or contains just blank spaces
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.Text">
            <summary>
            Gets or sets the inner text of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.LineBoxes">
            <summary>
            Gets the line-boxes of this box (if block box)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.ParentLineBoxes">
            <summary>
            Gets the linebox(es) that contains words of this box (if inline)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.Rectangles">
            <summary>
            Gets the rectangles where this box should be painted
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.Words">
            <summary>
            Gets the BoxWords of text in the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.FirstWord">
            <summary>
            Gets the first word of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.FirstHostingLineBox">
            <summary>
            Gets or sets the first linebox where content of this box appear
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.LastHostingLineBox">
            <summary>
            Gets or sets the last linebox where content of this box appear
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.CreateBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Create new css box for the given parent with the given html tag.<br/>
            </summary>
            <param name="tag">the html tag to define the box</param>
            <param name="parent">the box to add the new box to it as child</param>
            <returns>the new box</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.CreateBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Create new css box for the given parent with the given optional html tag and insert it either
            at the end or before the given optional box.<br/>
            If no html tag is given the box will be anonymous.<br/>
            If no before box is given the new box will be added at the end of parent boxes collection.<br/>
            If before box doesn't exists in parent box exception is thrown.<br/>
            </summary>
            <remarks>
            To learn more about anonymous inline boxes visit: http://www.w3.org/TR/CSS21/visuren.html#anonymous
            </remarks>
            <param name="parent">the box to add the new box to it as child</param>
            <param name="tag">optional: the html tag to define the box</param>
            <param name="before">optional: to insert as specific location in parent box</param>
            <returns>the new box</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.CreateBlock">
            <summary>
            Create new css block box.
            </summary>
            <returns>the new block box</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.CreateBlock(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Create new css block box for the given parent with the given optional html tag and insert it either
            at the end or before the given optional box.<br/>
            If no html tag is given the box will be anonymous.<br/>
            If no before box is given the new box will be added at the end of parent boxes collection.<br/>
            If before box doesn't exists in parent box exception is thrown.<br/>
            </summary>
            <remarks>
            To learn more about anonymous block boxes visit CSS spec:
            http://www.w3.org/TR/CSS21/visuren.html#anonymous-block-level
            </remarks>
            <param name="parent">the box to add the new block box to it as child</param>
            <param name="tag">optional: the html tag to define the box</param>
            <param name="before">optional: to insert as specific location in parent box</param>
            <returns>the new block box</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.PerformLayout(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.<br/>
            Performs layout of the DOM structure creating lines by set bounds restrictions.
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.Paint(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.SetBeforeBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Set this box in 
            </summary>
            <param name="before"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.SetAllBoxes(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Move all child boxes from <paramref name="fromBox"/> to this box.
            </summary>
            <param name="fromBox">the box to move all its child boxes from</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.ParseToWords">
            <summary>
            Splits the text into words and saves the result
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.PerformLayoutImp(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.<br/>
            Performs layout of the DOM structure creating lines by set bounds restrictions.<br/>
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.MeasureWordsSize(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Assigns words its width and height
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetParent">
            <summary>
            Get the parent of this css properties instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetIndexForList">
            <summary>
            Gets the index of the box to be used on a (ordered) list
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.CreateListItemBox(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Creates the <see cref="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox._listItemBox"/>
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.FirstWordOccourence(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox)">
            <summary>
            Searches for the first word occurrence inside the box, on the specified linebox
            </summary>
            <param name="b"></param>
            <param name="line"> </param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetAttribute(System.String)">
            <summary>
            Gets the specified Attribute, returns string.Empty if no attribute specified
            </summary>
            <param name="attribute">Attribute to retrieve</param>
            <returns>Attribute value or string.Empty if no attribute specified</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetAttribute(System.String,System.String)">
            <summary>
            Gets the value of the specified attribute of the source HTML tag.
            </summary>
            <param name="attribute">Attribute to retrieve</param>
            <param name="defaultValue">Value to return if attribute is not specified</param>
            <returns>Attribute value or defaultValue if no attribute specified</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetMinimumWidth">
            <summary>
            Gets the minimum width that the box can be.<br/>
            The box can be as thin as the longest word plus padding.<br/>
            The check is deep thru box tree.<br/>
            </summary>
            <returns>the min width of the box</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetMinimumWidth_LongestWord(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Double@,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect@)">
            <summary>
            Gets the longest word (in width) inside the box, deeply.
            </summary>
            <param name="box"></param>
            <param name="maxWidth"> </param>
            <param name="maxWidthWord"> </param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetWidthMarginDeep(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Get the total margin value (left and right) from the given box to the given end box.<br/>
            </summary>
            <param name="box">the box to start calculation from.</param>
            <returns>the total margin</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetMaximumBottom(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Double)">
            <summary>
            Gets the maximum bottom of the boxes inside the startBox
            </summary>
            <param name="startBox"></param>
            <param name="currentMaxBottom"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetMinMaxWidth(System.Double@,System.Double@)">
            <summary>
            Get the <paramref name="minWidth"/> and <paramref name="maxWidth"/> width of the box content.<br/>
            </summary>
            <param name="minWidth">The minimum width the content must be so it won't overflow (largest word + padding).</param>
            <param name="maxWidth">The total width the content can take without line wrapping (with padding).</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetMinMaxSumWords(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get the <paramref name="min"/> and <paramref name="maxSum"/> of the box words content and <paramref name="paddingSum"/>.<br/>
            </summary>
            <param name="box">the box to calculate for</param>
            <param name="min">the width that allows for each word to fit (width of the longest word)</param>
            <param name="maxSum">the max width a single line of words can take without wrapping</param>
            <param name="paddingSum">the total amount of padding the content has </param>
            <param name="marginSum"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.HasJustInlineSiblings">
            <summary>
            Gets if this box has only inline siblings (including itself)
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.InheritStyle(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Boolean)">
            <summary>
            Gets the rectangles where inline box will be drawn. See Remarks for more info.
            </summary>
            <returns>Rectangles where content should be placed</returns>
            <remarks>
            Inline boxes can be split across different LineBoxes, that's why this method
            Delivers a rectangle for each LineBox related to this box, if inline.
            </remarks>
            <summary>
            Inherits inheritable values from parent.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.MarginTopCollapse(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties)">
            <summary>
            Gets the result of collapsing the vertical margins of the two boxes
            </summary>
            <param name="prevSibling">the previous box under the same parent</param>
            <returns>Resulting top margin</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.CalculateActualRight">
            <summary>
            Calculate the actual right of the box by the actual right of the child boxes if this box actual right is not set.
            </summary>
            <returns>the calculated actual right value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.MarginBottomCollapse">
            <summary>
            Gets the result of collapsing the vertical margins of the two boxes
            </summary>
            <returns>Resulting bottom margin</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.OffsetTop(System.Double)">
            <summary>
            Deeply offsets the top of the box and its contents
            </summary>
            <param name="amount"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.PaintImp(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.PaintBackground(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Paints the background of the box
            </summary>
            <param name="g">the device to draw into</param>
            <param name="rect">the bounding rectangle to draw in</param>
            <param name="isFirst">is it the first rectangle of the element</param>
            <param name="isLast">is it the last rectangle of the element</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.PaintWords(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Paint all the words in the box.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="offset">the current scroll offset to offset the words</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.PaintDecoration(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Paints the text decoration (underline/strike-through/over-line)
            </summary>
            <param name="g">the device to draw into</param>
            <param name="rectangle"> </param>
            <param name="isFirst"> </param>
            <param name="isLast"> </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.OffsetRectangle(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox,System.Double)">
            <summary>
            Offsets the rectangle of the specified linebox by the specified gap,
            and goes deep for rectangles of children in that linebox.
            </summary>
            <param name="lineBox"></param>
            <param name="gap"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.RectanglesReset">
            <summary>
            Resets the <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.Rectangles"/> array
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.OnImageLoadComplete(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Boolean)">
            <summary>
            On image load process complete with image request refresh for it to be painted.
            </summary>
            <param name="image">the image loaded or null if failed</param>
            <param name="rectangle">the source rectangle to draw in the image (empty - draw everything)</param>
            <param name="async">is the callback was called async to load image call</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetSelectionForeBrush">
            <summary>
            Get brush for the text depending if there is selected text color set.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.GetSelectionBackBrush(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,System.Boolean)">
            <summary>
            Get brush for selection background depending if it has external and if alpha is required for images.
            </summary>
            <param name="g"></param>
            <param name="forceAlpha">used for images so they will have alpha effect</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox.ToString">
            <summary>
            ToString override.
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame">
            <summary>
            CSS box for iframe element.<br/>
            If the iframe is of embedded YouTube or Vimeo video it will show image with play.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame._imageWord">
            <summary>
            the image word of this image box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame._isVideo">
            <summary>
            is the iframe is of embeded video
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame._videoTitle">
            <summary>
            the title of the video
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame._videoImageUrl">
            <summary>
            the url of the video thumbnail image
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame._videoLinkUrl">
            <summary>
            link to the video on the site
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame._imageLoadHandler">
            <summary>
            handler used for image loading by source
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame._imageLoadingComplete">
            <summary>
            is image load is finished, used to know if no image is found
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parent">the parent box of this box</param>
            <param name="tag">the html tag data of this box</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.IsClickable">
            <summary>
            Is the css box clickable ("a" element is clickable)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.HrefLink">
            <summary>
            Get the href link of the box (by default get "href" attribute)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.IsVideo">
            <summary>
            is the iframe is of embeded video
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.LoadYoutubeDataAsync(System.Uri)">
            <summary>
            Load YouTube video data (title, image, link) by calling YouTube API.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.OnDownloadYoutubeApiCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            Parse YouTube API response to get video data (title, image, link).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.LoadVimeoDataAsync(System.Uri)">
            <summary>
            Load Vimeo video data (title, image, link) by calling Vimeo API.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.OnDownloadVimeoApiCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            Parse Vimeo API response to get video data (title, image, link).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.HandleDataLoadFailure(System.Exception,System.String)">
            <summary>
            Handle error occurred during video data load to handle if the video was not found.
            </summary>
            <param name="ex">the exception that occurred during data load web request</param>
            <param name="source">the name of the video source (YouTube/Vimeo/Etc.)</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.HandlePostApiCall(System.Object)">
            <summary>
            Create image handler for downloading video image if found and release the WebClient instance used for API call.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.PaintImp(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.DrawImage(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Draw video image over the iframe if found.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.DrawTitle(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Draw video title on top of the iframe if found.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.DrawPlay(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Draw play over the iframe if we found link url.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.MeasureWordsSize(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Assigns words its width and height
            </summary>
            <param name="g">the device to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.SetErrorBorder">
            <summary>
            Set error image border on the image box.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxFrame.OnLoadImageComplete(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Boolean)">
            <summary>
            On image load process is complete with image or without update the image box.
            </summary>
            <param name="image">the image loaded or null if failed</param>
            <param name="rectangle">the source rectangle to draw in the image (empty - draw everything)</param>
            <param name="async">is the callback was called async to load image call</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxHr">
            <summary>
            CSS box for hr element.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxHr.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parent">the parent box of this box</param>
            <param name="tag">the html tag data of this box</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxHr.PerformLayoutImp(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.<br/>
            Performs layout of the DOM structure creating lines by set bounds restrictions.
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxHr.PaintImp(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage">
            <summary>
            CSS box for image element.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage._imageWord">
            <summary>
            the image word of this image box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage._imageLoadHandler">
            <summary>
            handler used for image loading by source
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage._imageLoadingComplete">
            <summary>
            is image load is finished, used to know if no image is found
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parent">the parent box of this box</param>
            <param name="tag">the html tag data of this box</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage.Image">
            <summary>
            Get the image of this image box.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage.PaintImp(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage.MeasureWordsSize(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Assigns words its width and height
            </summary>
            <param name="g">the device to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage.SetErrorBorder">
            <summary>
            Set error image border on the image box.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxImage.OnLoadImageComplete(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Boolean)">
            <summary>
            On image load process is complete with image or without update the image box.
            </summary>
            <param name="image">the image loaded or null if failed</param>
            <param name="rectangle">the source rectangle to draw in the image (empty - draw everything)</param>
            <param name="async">is the callback was called async to load image call</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties">
            <summary>
            Base class for css box to handle the css properties.<br/>
            Has field and property for every css property that can be set, the properties add additional parsing like
            setting the correct border depending what border value was set (single, two , all four).<br/>
            Has additional fields to control the location and size of the box and 'actual' css values for some properties
            that require additional calculations and parsing.<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties._location">
            <summary>
            Gets or sets the location of the box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties._size">
            <summary>
            Gets or sets the size of the box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties._actualLineHeight">
            <summary>
            the width of whitespace between words
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.Location">
            <summary>
            Gets or sets the location of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.Size">
            <summary>
            Gets or sets the size of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.Bounds">
            <summary>
            Gets the bounds of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.AvailableWidth">
            <summary>
            Gets the width available on the box, counting padding and margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualRight">
            <summary>
            Gets the right of the box. When setting, it will affect only the width of the box.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBottom">
            <summary>
            Gets or sets the bottom of the box. 
            (When setting, alters only the Size.Height of the box)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ClientLeft">
            <summary>
            Gets the left of the client rectangle (Where content starts rendering)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ClientTop">
            <summary>
            Gets the top of the client rectangle (Where content starts rendering)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ClientRight">
            <summary>
            Gets the right of the client rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ClientBottom">
            <summary>
            Gets the bottom of the client rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ClientRectangle">
            <summary>
            Gets the client rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualHeight">
            <summary>
            Gets the actual height
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualWidth">
            <summary>
            Gets the actual height
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualPaddingTop">
            <summary>
            Gets the actual top's padding
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualPaddingLeft">
            <summary>
            Gets the actual padding on the left
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualPaddingBottom">
            <summary>
            Gets the actual Padding of the bottom
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualPaddingRight">
            <summary>
            Gets the actual padding on the right
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualMarginTop">
            <summary>
            Gets the actual top's Margin
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.CollapsedMarginTop">
            <summary>
            The margin top value if was effected by margin collapse.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualMarginLeft">
            <summary>
            Gets the actual Margin on the left
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualMarginBottom">
            <summary>
            Gets the actual Margin of the bottom
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualMarginRight">
            <summary>
            Gets the actual Margin on the right
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBorderTopWidth">
            <summary>
            Gets the actual top border width
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBorderLeftWidth">
            <summary>
            Gets the actual Left border width
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBorderBottomWidth">
            <summary>
            Gets the actual Bottom border width
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBorderRightWidth">
            <summary>
            Gets the actual Right border width
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBorderTopColor">
            <summary>
            Gets the actual top border Color
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBorderLeftColor">
            <summary>
            Gets the actual Left border Color
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBorderBottomColor">
            <summary>
            Gets the actual Bottom border Color
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBorderRightColor">
            <summary>
            Gets the actual Right border Color
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualCornerNw">
            <summary>
            Gets the actual length of the north west corner
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualCornerNe">
            <summary>
            Gets the actual length of the north east corner
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualCornerSe">
            <summary>
            Gets the actual length of the south east corner
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualCornerSw">
            <summary>
            Gets the actual length of the south west corner
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.IsRounded">
            <summary>
            Gets a value indicating if at least one of the corners of the box is rounded
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualWordSpacing">
            <summary>
            Gets the actual width of whitespace between words.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualColor">
            <summary>
            
            Gets the actual color for the text.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBackgroundColor">
            <summary>
            Gets the actual background color of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBackgroundGradient">
            <summary>
            Gets the second color that creates a gradient for the background
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBackgroundGradientAngle">
            <summary>
            Gets the actual angle specified for the background gradient
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualParentFont">
            <summary>
            Gets the actual font of the parent
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualFont">
            <summary>
            Gets the font that should be actually used to paint the text of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualLineHeight">
            <summary>
            Gets the line height
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualTextIndent">
            <summary>
            Gets the text indentation (on first line only)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBorderSpacingHorizontal">
            <summary>
            Gets the actual horizontal border spacing for tables
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualBorderSpacingVertical">
            <summary>
            Gets the actual vertical border spacing for tables
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.GetParent">
            <summary>
            Get the parent of this css properties instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.GetEmHeight">
            <summary>
            Gets the height of the font in the specified units
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.NoEms(System.String)">
            <summary>
            Ensures that the specified length is converted to pixels if necessary
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.SetAllBorders(System.String,System.String,System.String)">
            <summary>
            Set the style/width/color for all 4 borders on the box.<br/>
            if null is given for a value it will not be set.
            </summary>
            <param name="style">optional: the style to set</param>
            <param name="width">optional: the width to set</param>
            <param name="color">optional: the color to set</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.MeasureWordSpacing(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Measures the width of whitespace between words (set <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.ActualWordSpacing"/>).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties.InheritStyle(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Boolean)">
            <summary>
            Inherits inheritable values from specified box.
            </summary>
            <param name="everything">Set to true to inherit all CSS properties instead of only the ineritables</param>
            <param name="p">Box to inherit the properties</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine">
            <summary>
            Helps on CSS Layout.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.MeasureImageSize(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectImage)">
            <summary>
            Measure image box size by the width\height set on the box and the actual rendered image size.<br/>
            If no image exists for the box error icon will be set.
            </summary>
            <param name="imageWord">the image word to measure</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.CreateLineBoxes(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Creates line boxes for the specified blockbox
            </summary>
            <param name="g"></param>
            <param name="blockBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ApplyCellVerticalAlignment(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Applies special vertical alignment for table-cells
            </summary>
            <param name="g"></param>
            <param name="cell"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.FlowBox(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Double,System.Double,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Recursively flows the content of the box using the inline model
            </summary>
            <param name="g">Device Info</param>
            <param name="blockbox">Blockbox that contains the text flow</param>
            <param name="box">Current box to flow its content</param>
            <param name="limitRight">Maximum reached right</param>
            <param name="linespacing">Space to use between rows of text</param>
            <param name="startx">x starting coordinate for when breaking lines of text</param>
            <param name="line">Current linebox being used</param>
            <param name="curx">Current x coordinate that will be the left of the next word</param>
            <param name="cury">Current y coordinate that will be the top of the next word</param>
            <param name="maxRight">Maximum right reached so far</param>
            <param name="maxbottom">Maximum bottom reached so far</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.AdjustAbsolutePosition(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Double,System.Double)">
            <summary>
            Adjust the position of absolute elements by letf and top margins.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.BubbleRectangles(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox)">
            <summary>
            Recursively creates the rectangles of the blockBox, by bubbling from deep to outside of the boxes 
            in the rectangle structure
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ApplyHorizontalAlignment(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox)">
            <summary>
            Applies vertical and horizontal alignment to words in lineboxes
            </summary>
            <param name="g"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ApplyRightToLeft(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox)">
            <summary>
            Applies right to left direction to words
            </summary>
            <param name="blockBox"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ApplyRightToLeftOnLine(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox)">
            <summary>
            Applies RTL direction to all the words on the line.
            </summary>
            <param name="line">the line to apply RTL to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ApplyRightToLeftOnSingleBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Applies RTL direction to specific box words on the line.
            </summary>
            <param name="lineBox"></param>
            <param name="box"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ApplyVerticalAlignment(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox)">
            <summary>
            Applies vertical alignment to the linebox
            </summary>
            <param name="g"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ApplyJustifyAlignment(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox)">
            <summary>
            Applies centered alignment to the text on the linebox
            </summary>
            <param name="g"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ApplyCenterAlignment(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox)">
            <summary>
            Applies centered alignment to the text on the linebox
            </summary>
            <param name="g"></param>
            <param name="line"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ApplyRightAlignment(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox)">
            <summary>
            Applies right alignment to the text on the linebox
            </summary>
            <param name="g"></param>
            <param name="line"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ApplyLeftAlignment(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox)">
            <summary>
            Simplest alignment, just arrange words.
            </summary>
            <param name="g"></param>
            <param name="line"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngine.ToList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            todo: optimizate, not creating a list each time
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable">
            <summary>
            Layout engine for tables executing the complex layout of tables with rows/columns/headers/etc.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable._tableBox">
            <summary>
            the main box of the table
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable._caption">
            <summary>
            
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable._bodyrows">
            <summary>
            collection of all rows boxes
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable._columns">
            <summary>
            collection of all columns boxes
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable._allRows">
            <summary>
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Init.
            </summary>
            <param name="tableBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetTableSpacing(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Get the table cells spacing for all the cells in the table.<br/>
            Used to calculate the spacing the table has in addition to regular padding and borders.
            </summary>
            <param name="tableBox">the table box to calculate the spacing for</param>
            <returns>the calculated spacing</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.PerformLayout(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="tableBox"> </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.Layout(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Analyzes the Table and assigns values to this CssTable object.
            To be called from the constructor
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.AssignBoxKinds">
            <summary>
            Get the table boxes into the proper fields.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.InsertEmptyBoxes">
            <summary>
            Insert EmptyBoxes for vertical cell spanning.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.CalculateCountAndWidth">
            <summary>
            Determine Row and Column Count, and ColumnWidths
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.DetermineMissingColumnWidths(System.Double)">
            <summary>
            
            </summary>
            <param name="availCellSpace"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.EnforceMaximumSize">
            <summary>
            While table width is larger than it should, and width is reductable.<br/>
            If table max width is limited by we need to lower the columns width even if it will result in clipping<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.EnforceMinimumSize">
            <summary>
            Check for minimum sizes (increment widths if necessary)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.LayoutCells(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Layout the cells by the calculated table layout
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetSpannedMinWidth(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Int32,System.Int32)">
            <summary>
            Gets the spanned width of a cell (With of all columns it spans minus one).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetCellRealColumnIndex(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Gets the cell column index checking its position and other cells colspans
            </summary>
            <param name="row"></param>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetCellWidth(System.Int32,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Gets the cells width, taking colspan and being in the specified column
            </summary>
            <param name="column"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetColSpan(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Gets the colspan of the specified box
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetRowSpan(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Gets the rowspan of the specified box
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.MeasureWords(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Recursively measures words inside the box
            </summary>
            <param name="box">the box to measure</param>
            <param name="g">Device to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.CanReduceWidth">
            <summary>
            Tells if the columns widths can be reduced,
            by checking the minimum widths of all cells
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.CanReduceWidth(System.Int32)">
            <summary>
            Tells if the specified column can be reduced,
            by checking its minimum width
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetAvailableTableWidth">
            <summary>
            Gets the available width for the whole table.
            It also sets the value of WidthSpecified
            </summary>
            <returns></returns>
            <remarks>
            The table's width can be larger than the result of this method, because of the minimum 
            size that individual boxes.
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetMaxTableWidth">
            <summary>
            Gets the available width for the whole table.
            It also sets the value of WidthSpecified
            </summary>
            <returns></returns>
            <remarks>
            The table's width can be larger than the result of this method, because of the minimum 
            size that individual boxes.
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetColumnsMinMaxWidthByContent(System.Boolean,System.Double[]@,System.Double[]@)">
            <summary>
            Calculate the min and max width for each column of the table by the content in all rows.<br/>
            the min width possible without clipping content<br/>
            the max width the cell content can take without wrapping<br/>
            </summary>
            <param name="onlyNans">if to measure only columns that have no calculated width</param>
            <param name="minFullWidths">return the min width for each column - the min width possible without clipping content</param>
            <param name="maxFullWidths">return the max width for each column - the max width the cell content can take without wrapping</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetAvailableCellWidth">
            <summary>
            Gets the width available for cells
            </summary>
            <returns></returns>
            <remarks>
            It takes away the cell-spacing from <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetAvailableTableWidth"/>
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetWidthSum">
            <summary>
            Gets the current sum of column widths
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetSpan(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Gets the span attribute of the tag of the specified box
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetColumnMinWidths">
            <summary>
            Gets the minimum width of each column
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetHorizontalSpacing">
            <summary>
            Gets the actual horizontal spacing of the table
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetHorizontalSpacing(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Gets the actual horizontal spacing of the table
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLayoutEngineTable.GetVerticalSpacing">
            <summary>
            Gets the actual vertical spacing of the table
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength">
            <summary>
            Represents and gets info about a CSS Length
            </summary>
            <remarks>
            http://www.w3.org/TR/CSS21/syndata.html#length-units
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength.#ctor(System.String)">
            <summary>
            Creates a new CssLength from a length specified on a CSS style sheet or fragment
            </summary>
            <param name="length">Length as specified in the Style Sheet or style fragment</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength.Number">
            <summary>
            Gets the number in the length
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength.HasError">
            <summary>
            Gets if the length has some parsing error
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength.IsPercentage">
            <summary>
            Gets if the length represents a precentage (not actually a length)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength.IsRelative">
            <summary>
            Gets if the length is specified in relative units
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength.Unit">
            <summary>
            Gets the unit of the length
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength.Length">
            <summary>
            Gets the length as specified in the string
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength.ConvertEmToPoints(System.Double)">
            <summary>
            If length is in Ems, returns its value in points
            </summary>
            <param name="emSize">Em size factor to multiply</param>
            <returns>Points size of this em</returns>
            <exception cref="T:System.InvalidOperationException">If length has an error or isn't in ems</exception>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength.ConvertEmToPixels(System.Double)">
            <summary>
            If length is in Ems, returns its value in pixels
            </summary>
            <param name="pixelFactor">Pixel size factor to multiply</param>
            <returns>Pixels size of this em</returns>
            <exception cref="T:System.InvalidOperationException">If length has an error or isn't in ems</exception>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLength.ToString">
            <summary>
            Returns the length formatted ready for CSS interpreting.
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox">
            <summary>
            Represents a line of text.
            </summary>
            <remarks>
            To learn more about line-boxes see CSS spec:
            http://www.w3.org/TR/CSS21/visuren.html
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Creates a new LineBox
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.RelatedBoxes">
            <summary>
            Gets a list of boxes related with the linebox. 
            To know the words of the box inside this linebox, use the <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.WordsOf(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)"/> method.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.Words">
            <summary>
            Gets the words inside the linebox
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.OwnerBox">
            <summary>
            Gets the owner box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.Rectangles">
            <summary>
            Gets a List of rectangles that are to be painted on this linebox
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.LineHeight">
            <summary>
            Get the height of this box line (the max height of all the words)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.LineBottom">
            <summary>
            Get the bottom of this box line (the max bottom of all the words)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.ReportExistanceOf(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect)">
            <summary>
            Lets the linebox add the word an its box to their lists if necessary.
            </summary>
            <param name="word"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.WordsOf(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Return the words of the specified box that live in this linebox
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.UpdateRectangle(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Updates the specified rectangle of the specified box.
            </summary>
            <param name="box"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <param name="b"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.AssignRectanglesToBoxes">
            <summary>
            Copies the rectangles to their specified box
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.SetBaseLine(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Double)">
            <summary>
            Sets the baseline of the words of the specified box to certain height
            </summary>
            <param name="g">Device info</param>
            <param name="b">box to check words</param>
            <param name="baseline">baseline</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.IsLastSelectedWord(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect)">
            <summary>
            Check if the given word is the last selected word in the line.<br/>
            It can either be the last word in the line or the next word has no selection.
            </summary>
            <param name="word">the word to check</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox.ToString">
            <summary>
            Returns the words of the linebox
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect">
            <summary>
            Represents a word inside an inline box
            </summary>
            <remarks>
            Because of performance, words of text are the most atomic 
            element in the project. It should be characters, but come on,
            imagine the performance when drawing char by char on the device.<br/>
            It may change for future versions of the library.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect._ownerBox">
            <summary>
            the CSS box owner of the word
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect._rect">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect._selection">
            <summary>
            If the word is selected this points to the selection handler for more data
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Init.
            </summary>
            <param name="owner">the CSS box owner of the word</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.OwnerBox">
            <summary>
            Gets the Box where this word belongs.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Rectangle">
            <summary>
            Gets or sets the bounds of the rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Left">
            <summary>
            Left of the rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Top">
            <summary>
            Top of the rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Width">
            <summary>
            Width of the rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.FullWidth">
            <summary>
            Get the full width of the word including the spacing.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.ActualWordSpacing">
            <summary>
            Gets the actual width of whitespace between words.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Height">
            <summary>
            Height of the rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Right">
            <summary>
            Gets or sets the right of the rectangle. When setting, it only affects the Width of the rectangle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Bottom">
            <summary>
            Gets or sets the bottom of the rectangle. When setting, it only affects the Height of the rectangle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Selection">
            <summary>
            If the word is selected this points to the selection handler for more data
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.HasSpaceBefore">
            <summary>
            was there a whitespace before the word chars (before trim)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.HasSpaceAfter">
            <summary>
            was there a whitespace after the word chars (before trim)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Image">
            <summary>
            Gets the image this words represents (if one exists)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.IsImage">
            <summary>
            Gets if the word represents an image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.IsSpaces">
            <summary>
            Gets a bool indicating if this word is composed only by spaces.
            Spaces include tabs and line breaks
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.IsLineBreak">
            <summary>
            Gets if the word is composed by only a line break
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Text">
            <summary>
            Gets the text of the word
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.Selected">
            <summary>
            is the word is currently selected
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.SelectedStartIndex">
            <summary>
            the selection start index if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.SelectedEndIndexOffset">
            <summary>
            the selection end index if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.SelectedStartOffset">
            <summary>
            the selection start offset if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.SelectedEndOffset">
            <summary>
            the selection end offset if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.LeftGlyphPadding">
            <summary>
            Gets or sets an offset to be considered in measurements
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect.ToString">
            <summary>
            Represents this word for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectImage">
            <summary>
            Represents a word inside an inline box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectImage._image">
            <summary>
            the image object if it is image word (can be null if not loaded)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectImage._imageRectangle">
            <summary>
            the image rectangle restriction as returned from image load event
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectImage.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Creates a new BoxWord which represents an image
            </summary>
            <param name="owner">the CSS box owner of the word</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectImage.Image">
            <summary>
            Gets the image this words represents (if one exists)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectImage.IsImage">
            <summary>
            Gets if the word represents an image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectImage.ImageRectangle">
            <summary>
            the image rectange restriction as returned from image load event
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectImage.ToString">
            <summary>
            Represents this word for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord">
            <summary>
            Represents a word inside an inline box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord._text">
            <summary>
            The word text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord._hasSpaceBefore">
            <summary>
            was there a whitespace before the word chars (before trim)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord._hasSpaceAfter">
            <summary>
            was there a whitespace after the word chars (before trim)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.String,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
            <param name="owner">the CSS box owner of the word</param>
            <param name="text">the word chars </param>
            <param name="hasSpaceBefore">was there a whitespace before the word chars (before trim)</param>
            <param name="hasSpaceAfter">was there a whitespace after the word chars (before trim)</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord.HasSpaceBefore">
            <summary>
            was there a whitespace before the word chars (before trim)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord.HasSpaceAfter">
            <summary>
            was there a whitespace after the word chars (before trim)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord.IsSpaces">
            <summary>
            Gets a bool indicating if this word is composed only by spaces.
            Spaces include tabs and line breaks
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord.IsLineBreak">
            <summary>
            Gets if the word is composed by only a line break
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord.Text">
            <summary>
            Gets the text of the word
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRectWord.ToString">
            <summary>
            Represents this word for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssSpacingBox">
            <summary>
            Used to make space on vertical cell combination
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssSpacingBox._startRow">
            <summary>
            the index of the row where box starts
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssSpacingBox._endRow">
            <summary>
            the index of the row where box ends
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssSpacingBox.StartRow">
            <summary>
            Gets the index of the row where box starts
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssSpacingBox.EndRow">
            <summary>
            Gets the index of the row where box ends
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssUnit">
            <summary>
            Represents the possible units of the CSS lengths
            </summary>
            <remarks>
            http://www.w3.org/TR/CSS21/syndata.html#length-units
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HoverBoxBlock">
            <summary>
            CSS boxes that have ":hover" selector on them.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HoverBoxBlock._cssBox">
            <summary>
            the box that has :hover css on
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HoverBoxBlock._cssBlock">
            <summary>
            the :hover style block data
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HoverBoxBlock.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HoverBoxBlock.CssBox">
            <summary>
            the box that has :hover css on
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HoverBoxBlock.CssBlock">
            <summary>
            the :hover style block data
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag._name">
            <summary>
            the name of the html tag
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag._isSingle">
            <summary>
            if the tag is single placed; in other words it doesn't have a separate closing tag;
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag._attributes">
            <summary>
            collection of attributes and their value the html tag has
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag.#ctor(System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Init.
            </summary>
            <param name="name">the name of the html tag</param>
            <param name="isSingle">if the tag is single placed; in other words it doesn't have a separate closing tag;</param>
            <param name="attributes">collection of attributes and their value the html tag has</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag.Name">
            <summary>
            Gets the name of this tag
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag.Attributes">
            <summary>
            Gets collection of attributes and their value the html tag has
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag.IsSingle">
            <summary>
            Gets if the tag is single placed; in other words it doesn't have a separate closing tag; <br/>
            e.g. &lt;br&gt;
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag.HasAttributes">
            <summary>
            is the html tag has attributes.
            </summary>
            <returns>true - has attributes, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag.HasAttribute(System.String)">
            <summary>
            Gets a boolean indicating if the attribute list has the specified attribute
            </summary>
            <param name="attribute">attribute name to check if exists</param>
            <returns>true - attribute exists, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag.TryGetAttribute(System.String,System.String)">
            <summary>
            Get attribute value for given attribute name or null if not exists.
            </summary>
            <param name="attribute">attribute name to get by</param>
            <param name="defaultValue">optional: value to return if attribute is not specified</param>
            <returns>attribute value or null if not found</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock">
            <summary>
            Represents a block of CSS property values.<br/>
            Contains collection of key-value pairs that are CSS properties for specific css class.<br/>
            Css class can be either custom or html tag name.
            </summary>
            <remarks>
            To learn more about CSS blocks visit CSS spec: http://www.w3.org/TR/CSS21/syndata.html#block
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock._class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock._properties">
            <summary>
            the CSS block properties and values
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock._selectors">
            <summary>
            additional selectors to used in hierarchy (p className1 > className2)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock._hover">
            <summary>
            is the css block has :hover pseudo-class
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlockSelectorItem},System.Boolean)">
            <summary>
            Creates a new block from the block's source
            </summary>
            <param name="class">the name of the css class of the block</param>
            <param name="properties">the CSS block properties and values</param>
            <param name="selectors">optional: additional selectors to used in hierarchy</param>
            <param name="hover">optional: is the css block has :hover pseudo-class</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.Class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.Selectors">
            <summary>
            additional selectors to used in hierarchy (p className1 > className2)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.Properties">
            <summary>
            Gets the CSS block properties and its values
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.Hover">
            <summary>
            is the css block has :hover pseudo-class
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.Merge(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock)">
            <summary>
            Merge the other block properties into this css block.<br/>
            Other block properties can overwrite this block properties.
            </summary>
            <param name="other">the css block to merge with</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.Clone">
            <summary>
            Create deep copy of the CssBlock.
            </summary>
            <returns>new CssBlock with same data</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.Equals(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock)">
            <summary>
            Check if the two css blocks are the same (same class, selectors and properties).
            </summary>
            <param name="other">the other block to compare to</param>
            <returns>true - the two blocks are the same, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.EqualsSelector(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock)">
            <summary>
            Check if the selectors of the css blocks is the same.
            </summary>
            <param name="other">the other block to compare to</param>
            <returns>true - the selectors on blocks are the same, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.Equals(System.Object)">
            <summary>
            Check if the two css blocks are the same (same class, selectors and properties).
            </summary>
            <param name="obj">the other block to compare to</param>
            <returns>true - the two blocks are the same, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlockSelectorItem">
            <summary>
            Holds single class selector in css block hierarchical selection (p class1 > div.class2)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlockSelectorItem._class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlockSelectorItem._directParent">
            <summary>
            is the selector item has to be direct parent
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlockSelectorItem.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new block from the block's source
            </summary>
            <param name="class">the name of the css class of the block</param>
            <param name="directParent"> </param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlockSelectorItem.Class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlockSelectorItem.DirectParent">
            <summary>
            is the selector item has to be direct parent
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlockSelectorItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle">
            <summary>
            Controls the way styles are generated when html is generated.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle.None">
            <summary>
            styles are not generated at all
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle.Inline">
            <summary>
            style are inserted in style attribute for each html tag
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle.InHeader">
            <summary>
            style section is generated in the head of the html
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadCallback">
            <summary>
            Callback used in <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs"/> to allow setting image externally and async.<br/>
            The callback can provide path to image file path, URL or the actual image to use.<br/>
            If <paramref name="imageRectangle"/> is given (not <see cref="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Empty"/>) then only the specified rectangle will
            be used from the loaded image and not all of it, also the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="path">the path to the image to load (file path or URL)</param>
            <param name="image">the image to use</param>
            <param name="imageRectangle">optional: limit to specific rectangle in the loaded image</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs">
            <summary>
            Invoked when an image is about to be loaded by file path, URL or inline data in 'img' element or background-image CSS style.<br/>
            Allows to overwrite the loaded image by providing the image object manually, or different source (file or URL) to load from.<br/>
            Example: image 'src' can be non-valid string that is interpreted in the overwrite delegate by custom logic to resource image object<br/>
            Example: image 'src' in the html is relative - the overwrite intercepts the load and provide full source URL to load the image from<br/>
            Example: image download requires authentication - the overwrite intercepts the load, downloads the image to disk using custom code and 
            provide file path to load the image from. Can also use the asynchronous image overwrite not to block HTML rendering is applicable.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs._handled">
            <summary>
            use to cancel the image loading by html renderer, the provided image will be used.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs._src">
            <summary>
            the source of the image (file path or uri)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs._attributes">
            <summary>
            collection of all the attributes that are defined on the image element
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs._callback">
            <summary>
            Callback used to allow setting image externally and async.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String},KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadCallback)">
            <summary>
            Init.
            </summary>
            <param name="src">the source of the image (file path or Uri)</param>
            <param name="attributes">collection of all the attributes that are defined on the image element</param>
            <param name="callback">Callback used to allow setting image externally and async.</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Src">
            <summary>
            the source of the image (file path, URL or inline data)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Attributes">
            <summary>
            collection of all the attributes that are defined on the image element or CSS style
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Handled">
            <summary>
            Indicate the image load is handled asynchronously.
            Cancel this image loading and overwrite the image asynchronously using callback method.<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Callback">
            <summary>
            Callback to overwrite the loaded image with error image.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Callback(System.String)">
            <summary>
            Callback to overwrite the loaded image with image to load from given URI.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            </summary>
            <param name="path">the path to the image to load (file path or URL)</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Callback(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Callback to overwrite the loaded image with image to load from given URI.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            Only the specified rectangle (x,y,width,height) will be used from the loaded image and not all of it, also 
            the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="path">the path to the image to load (file path or URL)</param>
            <param name="imageRectangle">optional: limit to specific rectangle of the image and not all of it</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Callback(System.Object)">
            <summary>
            Callback to overwrite the loaded image with given image object.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            If <paramref name="imageRectangle"/> is given (not <see cref="F:KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect.Empty"/>) then only the specified rectangle will
            be used from the loaded image and not all of it, also the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="image">the image to load</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Callback(System.Object,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Callback to overwrite the loaded image with given image object.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            Only the specified rectangle (x,y,width,height) will be used from the loaded image and not all of it, also 
            the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="image">the image to load</param>
            <param name="imageRectangle">optional: limit to specific rectangle of the image and not all of it</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs">
            <summary>
            Raised when the user clicks on a link in the html.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs._link">
            <summary>
            the link href that was clicked
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs._attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs._handled">
            <summary>
            use to cancel the execution of the link
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Init.
            </summary>
            <param name="link">the link href that was clicked</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs.Link">
            <summary>
            the link href that was clicked
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs.Attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs.Handled">
            <summary>
            use to cancel the execution of the link
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedException">
            <summary>
            Exception thrown when client code subscribed to LinkClicked event thrown exception.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error. </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception. </param><param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRefreshEventArgs">
            <summary>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).<br/>
            It can happen if some async event has occurred that requires re-paint and re-layout of the html.<br/>
            Example: async download of image is complete.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRefreshEventArgs._layout">
            <summary>
            is re-layout is required for the refresh
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRefreshEventArgs.#ctor(System.Boolean)">
            <summary>
            Init.
            </summary>
            <param name="layout">is re-layout is required for the refresh</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRefreshEventArgs.Layout">
            <summary>
            is re-layout is required for the refresh
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs">
            <summary>
            Raised when an error occurred during html rendering.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs._type">
            <summary>
            error type that is reported
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs._message">
            <summary>
            the error message
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs._exception">
            <summary>
            the exception that occurred (can be null)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorType,System.String,System.Exception)">
            <summary>
            Init.
            </summary>
            <param name="type">the type of error to report</param>
            <param name="message">the error message</param>
            <param name="exception">optional: the exception that occurred</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs.Type">
            <summary>
            error type that is reported
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs.Message">
            <summary>
            the error message
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs.Exception">
            <summary>
            the exception that occurred (can be null)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorType">
            <summary>
            Enum of possible error types that can be reported.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlScrollEventArgs">
            <summary>
            Raised when Html Renderer request scroll to specific location.<br/>
            This can occur on document anchor click.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlScrollEventArgs._location">
            <summary>
            the location to scroll to
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlScrollEventArgs.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Init.
            </summary>
            <param name="location">the location to scroll to</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlScrollEventArgs.X">
            <summary>
            the x location to scroll to
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlScrollEventArgs.Y">
            <summary>
            the x location to scroll to
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs">
            <summary>
            Invoked when a stylesheet is about to be loaded by file path or URL in 'link' element.<br/>
            Allows to overwrite the loaded stylesheet by providing the stylesheet data manually, or different source (file or URL) to load from.<br/>
            Example: The stylesheet 'href' can be non-valid URI string that is interpreted in the overwrite delegate by custom logic to pre-loaded stylesheet object<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs._src">
            <summary>
            the source of the stylesheet as found in the HTML (file path or URL)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs._attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs._setSrc">
            <summary>
            provide the new source (file path or URL) to load stylesheet from
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs._setStyleSheet">
            <summary>
            provide the stylesheet to load
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs._setStyleSheetData">
            <summary>
            provide the stylesheet data to load
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Init.
            </summary>
            <param name="src">the source of the image (file path or URL)</param>
            <param name="attributes">collection of all the attributes that are defined on the image element</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs.Src">
            <summary>
            the source of the stylesheet as found in the HTML (file path or URL)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs.Attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs.SetSrc">
            <summary>
            provide the new source (file path or URL) to load stylesheet from
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs.SetStyleSheet">
            <summary>
            provide the stylesheet to load
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs.SetStyleSheetData">
            <summary>
            provide the stylesheet data to load
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.LinkElementData`1">
            <summary>
            Holds data on link element in HTML.<br/>
            Used to expose data outside of HTML Renderer internal structure.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.LinkElementData`1._id">
            <summary>
            the id of the link element if present
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.LinkElementData`1._href">
            <summary>
            the href data of the link
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.LinkElementData`1._rectangle">
            <summary>
            the rectangle of element as calculated by html layout
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.LinkElementData`1.#ctor(System.String,System.String,`0)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.LinkElementData`1.Id">
            <summary>
            the id of the link element if present
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.LinkElementData`1.Href">
            <summary>
            the href data of the link
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.LinkElementData`1.Rectangle">
            <summary>
            the rectangle of element as calculated by html layout
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.LinkElementData`1.IsAnchor">
            <summary>
            Is the link is directed to another element in the html
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.LinkElementData`1.AnchorId">
            <summary>
            Return the id of the element this anchor link is referencing.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BackgroundImageDrawHandler">
            <summary>
            Contains all the paint code to paint different background images.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BackgroundImageDrawHandler.DrawBackgroundImage(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Draw the background image of the given box in the given rectangle.<br/>
            Handle background-repeat and background-position values.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="box">the box to draw its background image</param>
            <param name="imageLoadHandler">the handler that loads image to draw</param>
            <param name="rectangle">the rectangle to draw image in</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BackgroundImageDrawHandler.GetLocation(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
            Get top-left location to start drawing the image at depending on background-position value.
            </summary>
            <param name="backgroundPosition">the background-position value</param>
            <param name="rectangle">the rectangle to position image in</param>
            <param name="imgSize">the size of the image</param>
            <returns>the top-left location</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BackgroundImageDrawHandler.DrawRepeatX(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
            Draw the background image at the required location repeating it over the X axis.<br/>
            Adjust location to left if starting location doesn't include all the range (adjusted to center or right).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BackgroundImageDrawHandler.DrawRepeatY(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
            Draw the background image at the required location repeating it over the Y axis.<br/>
            Adjust location to top if starting location doesn't include all the range (adjusted to center or bottom).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BackgroundImageDrawHandler.DrawRepeat(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
            Draw the background image at the required location repeating it over the X and Y axis.<br/>
            Adjust location to left-top if starting location doesn't include all the range (adjusted to center or bottom/right).
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler">
            <summary>
            Contains all the complex paint code to paint different style borders.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler._borderPts">
            <summary>
            used for all border paint to use the same points and not create new array each time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler.DrawBoxBorders(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Draws all the border of the box with respect to style, width, etc.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="box">the box to draw borders for</param>
            <param name="rect">the bounding rectangle to draw in</param>
            <param name="isFirst">is it the first rectangle of the element</param>
            <param name="isLast">is it the last rectangle of the element</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler.DrawBorder(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.Border,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RBrush,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Draw simple border.
            </summary>
            <param name="border">Desired border</param>
            <param name="g">the device to draw to</param>
            <param name="box">Box which the border corresponds</param>
            <param name="brush">the brush to use</param>
            <param name="rectangle">the bounding rectangle to draw in</param>
            <returns>Beveled border path, null if there is no rounded corners</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler.DrawBorder(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.Border,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Draw specific border (top/bottom/left/right) with the box data (style/width/rounded).<br/>
            </summary>
            <param name="border">desired border to draw</param>
            <param name="box">the box to draw its borders, contain the borders data</param>
            <param name="g">the device to draw into</param>
            <param name="rect">the rectangle the border is enclosing</param>
            <param name="isLineStart">Specifies if the border is for a starting line (no bevel on left)</param>
            <param name="isLineEnd">Specifies if the border is for an ending line (no bevel on right)</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler.SetInOutsetRectanglePoints(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.Border,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Set rectangle for inset/outset border as it need diagonal connection to other borders.
            </summary>
            <param name="border">Desired border</param>
            <param name="b">Box which the border corresponds</param>
            <param name="r">the rectangle the border is enclosing</param>
            <param name="isLineStart">Specifies if the border is for a starting line (no bevel on left)</param>
            <param name="isLineEnd">Specifies if the border is for an ending line (no bevel on right)</param>
            <returns>Beveled border path, null if there is no rounded corners</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler.GetRoundedBorderPath(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.Border,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Makes a border path for rounded borders.<br/>
            To support rounded dotted/dashed borders we need to use arc in the border path.<br/>
            Return null if the border is not rounded.<br/>
            </summary>
            <param name="g">the device to draw into</param>
            <param name="border">Desired border</param>
            <param name="b">Box which the border corresponds</param>
            <param name="r">the rectangle the border is enclosing</param>
            <returns>Beveled border path, null if there is no rounded corners</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler.GetPen(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,System.String,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get pen to be used for border draw respecting its style.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler.GetColor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.Border,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties,System.String)">
            <summary>
            Get the border color for the given box border.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler.GetWidth(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.Border,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties)">
            <summary>
            Get the border width for the given box border.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler.GetStyle(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.Border,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties)">
            <summary>
            Get the border style for the given box border.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.BordersDrawHandler.Darken(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
            Makes the specified color darker for inset/outset borders.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler">
            <summary>
            Handle context menu.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._selectAll">
            <summary>
            select all text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._copy">
            <summary>
            copy selected text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._copyLink">
            <summary>
            copy the link source
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._openLink">
            <summary>
            open link (as left mouse click)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._copyImageLink">
            <summary>
            copy the source of the image
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._copyImage">
            <summary>
            copy image to clipboard
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._saveImage">
            <summary>
            save image to disk
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._openVideo">
            <summary>
            open video in browser
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._copyVideoUrl">
            <summary>
            copy video url to browser
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._selectionHandler">
            <summary>
            the selection handler linked to the context menu handler
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._htmlContainer">
            <summary>
            the html container the handler is on
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._contextMenu">
            <summary>
            the last context menu shown
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._parentControl">
            <summary>
            the control that the context menu was shown on
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._currentRect">
            <summary>
            the css rectangle that context menu shown on
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler._currentLink">
            <summary>
            the css link box that context menu shown on
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.#cctor">
            <summary>
            Init context menu items strings.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler,KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt)">
            <summary>
            Init.
            </summary>
            <param name="selectionHandler">the selection handler linked to the context menu handler</param>
            <param name="htmlContainer">the html container the handler is on</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.ShowContextMenu(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Show context menu clicked on given rectangle.
            </summary>
            <param name="parent">the parent control to show the context menu on</param>
            <param name="rect">the rectangle that was clicked to show context menu</param>
            <param name="link">the link that was clicked to show context menu on</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.DisposeContextMenu">
            <summary>
            Dispose of the last used context menu.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.OnOpenLinkClick(System.Object,System.EventArgs)">
            <summary>
            Handle link click.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.OnCopyLinkClick(System.Object,System.EventArgs)">
            <summary>
            Copy the href of a link to clipboard.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.OnSaveImageClick(System.Object,System.EventArgs)">
            <summary>
            Open save as dialog to save the image
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.OnCopyImageLinkClick(System.Object,System.EventArgs)">
            <summary>
            Copy the image source to clipboard.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.OnCopyImageClick(System.Object,System.EventArgs)">
            <summary>
            Copy image object to clipboard.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.OnCopyClick(System.Object,System.EventArgs)">
            <summary>
            Copy selected text.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ContextMenuHandler.OnSelectAllClick(System.Object,System.EventArgs)">
            <summary>
            Select all text.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler">
            <summary>
            Utilities for fonts and fonts families handling.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler._adapter">
            <summary>
            
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler._fontsMapping">
            <summary>
            Allow to map not installed fonts to different
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler._existingFontFamilies">
            <summary>
            collection of all installed and added font families to check if font exists
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler._fontsCache">
            <summary>
            cache of all the font used not to create same font again and again
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler.IsFontExists(System.String)">
            <summary>
            Check if the given font family exists by name
            </summary>
            <param name="family">the font to check</param>
            <returns>true - font exists by given family name, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler.AddFontFamily(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RFontFamily)">
            <summary>
            Adds a font family to be used.
            </summary>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler.GetCachedFont(System.String,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RFontStyle)">
            <summary>
            Get cached font instance for the given font properties.<br/>
            Improve performance not to create same font multiple times.
            </summary>
            <returns>cached font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler.TryGetFont(System.String,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RFontStyle)">
            <summary>
            Get cached font if it exists in cache or null if it is not.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.FontsHandler.CreateFont(System.String,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RFontStyle)" -->
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.DownloadFileAsyncCallback">
            <summary>
            On download file async complete, success or fail.
            </summary>
            <param name="imageUri">The online image uri</param>
            <param name="filePath">the path to the downloaded file</param>
            <param name="error">the error if download failed</param>
            <param name="canceled">is the file download request was canceled</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader">
            <summary>
            Handler for downloading images from the web.<br/>
            Single instance of the handler used for all images downloaded in a single html, this way if the html contains more
            than one reference to the same image it will be downloaded only once.<br/>
            Also handles corrupt, partial and canceled downloads by first downloading to temp file and only if successful moving to cached 
            file location.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader._clients">
            <summary>
            the web client used to download image from URL (to cancel on dispose)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader._imageDownloadCallbacks">
            <summary>
            dictionary of image cache path to callbacks of download to handle multiple requests to download the same image 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader.DownloadImage(System.Uri,System.String,System.Boolean,KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.DownloadFileAsyncCallback)">
            <summary>
            Makes a request to download the image from the server and raises the <see cref="!:cachedFileCallback"/> when it's down.<br/>
            </summary>
            <param name="imageUri">The online image uri</param>
            <param name="filePath">the path on disk to download the file to</param>
            <param name="async">is to download the file sync or async (true-async)</param>
            <param name="cachedFileCallback">This callback will be called with local file path. If something went wrong in the download it will return null.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader.DownloadImageFromUrl(System.Uri,System.String,System.String)">
            <summary>
            Download the requested file in the URI to the given file path.<br/>
            Use async sockets API to download from web, <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader.OnDownloadImageAsyncCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)"/>.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader.DownloadImageFromUrlAsync(System.Object)">
            <summary>
            Download the requested file in the URI to the given file path.<br/>
            Use async sockets API to download from web, <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader.OnDownloadImageAsyncCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)"/>.
            </summary>
            <param name="data">key value pair of URL and file info to download the file to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader.OnDownloadImageAsyncCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            On download image complete to local file.<br/>
            If the download canceled do nothing, if failed report error.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader.OnDownloadImageCompleted(System.Net.WebClient,System.Uri,System.String,System.String,System.Exception,System.Boolean)">
            <summary>
            Checks if the file was downloaded and raises the cachedFileCallback from <see cref="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader._imageDownloadCallbacks"/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageDownloader.ReleaseObjects">
            <summary>
            Release the image and client objects.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler">
            <summary>
            Handler for all loading image logic.<br/>
            <p>
            Loading by <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs"/>.<br/>
            Loading by file path.<br/>
            Loading by URI.<br/>
            </p>
            </summary>
            <remarks>
            <para>
            Supports sync and async image loading.
            </para>
            <para>
            If the image object is created by the handler on calling dispose of the handler the image will be released, this
            makes release of unused images faster as they can be large.<br/>
            Disposing image load handler will also cancel download of image from the web.
            </para>
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler._htmlContainer">
            <summary>
            the container of the html to handle load image for
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler._loadCompleteCallback">
            <summary>
            callback raised when image load process is complete with image or without
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler._imageFileStream">
            <summary>
            Must be open as long as the image is in use
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler._image">
            <summary>
            the image instance of the loaded image
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler._imageRectangle">
            <summary>
            the image rectangle restriction as returned from image load event
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler._asyncCallback">
            <summary>
            to know if image load event callback was sync or async raised
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler._releaseImageObject">
            <summary>
            flag to indicate if to release the image object on box dispose (only if image was loaded by the box)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler._disposed">
            <summary>
            is the handler has been disposed
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.ActionInt{KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RImage,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Boolean})">
            <summary>
            Init.
            </summary>
            <param name="htmlContainer">the container of the html to handle load image for</param>
            <param name="loadCompleteCallback">callback raised when image load process is complete with image or without</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.Image">
            <summary>
            the image instance of the loaded image
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.Rectangle">
            <summary>
            the image rectangle restriction as returned from image load event
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.LoadImage(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Set image of this image box by analyzing the src attribute.<br/>
            Load the image from inline base64 encoded string.<br/>
            Or from calling property/method on the bridge object that returns image or URL to image.<br/>
            Or from file path<br/>
            Or from URI.
            </summary>
            <remarks>
            File path and URI image loading is executed async and after finishing calling <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/>
            on the main thread and not thread-pool.
            </remarks>
            <param name="src">the source of the image to load</param>
            <param name="attributes">the collection of attributes on the element to use in event</param>
            <returns>the image object (null if failed)</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.OnHtmlImageLoadEventCallback(System.String,System.Object,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Set the image using callback from load image event, use the given data.
            </summary>
            <param name="path">the path to the image to load (file path or uri)</param>
            <param name="image">the image to load</param>
            <param name="imageRectangle">optional: limit to specific rectangle of the image and not all of it</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.SetFromInlineData(System.String)">
            <summary>
            Load the image from inline base64 encoded string data.
            </summary>
            <param name="src">the source that has the base64 encoded image</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.GetImageFromData(System.String)">
            <summary>
            Extract image object from inline base64 encoded data in the src of the html img element.
            </summary>
            <param name="src">the source that has the base64 encoded image</param>
            <returns>image from base64 data string or null if failed</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.SetImageFromPath(System.String)">
            <summary>
            Load image from path of image file or URL.
            </summary>
            <param name="path">the file path or uri to load image from</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.SetImageFromFile(System.IO.FileInfo)">
            <summary>
            Load the image file on thread-pool thread and calling <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/> after.
            </summary>
            <param name="source">the file path to get the image from</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.LoadImageFromFile(System.String)">
            <summary>
            Load the image file on thread-pool thread and calling <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/> after.<br/>
            Calling <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/> on the main thread and not thread-pool.
            </summary>
            <param name="source">the file path to get the image from</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.SetImageFromUrl(System.Uri)">
            <summary>
            Load image from the given URI by downloading it.<br/>
            Create local file name in temp folder from the URI, if the file already exists use it as it has already been downloaded.
            If not download the file.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.OnDownloadImageCompleted(System.Uri,System.String,System.Exception,System.Boolean)">
            <summary>
            On download image complete to local file use <see cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.LoadImageFromFile(System.String)"/> to load the image file.<br/>
            If the download canceled do nothing, if failed report error.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)">
            <summary>
            Flag image load complete and request refresh for re-layout and invalidate.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.ImageLoadHandler.ReleaseObjects">
            <summary>
            Release the image and client objects.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler">
            <summary>
            Handler for text selection in the html.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._root">
            <summary>
            the root of the handled html tree
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._contextMenuHandler">
            <summary>
            handler for showing context menu on right click
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._selectionStartPoint">
            <summary>
            the mouse location when selection started used to ignore small selections
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._selectionStart">
            <summary>
            the starting word of html selection<br/>
            where the user started the selection, if the selection is backwards then it will be the last selected word.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._selectionEnd">
            <summary>
            the ending word of html selection<br/>
            where the user ended the selection, if the selection is backwards then it will be the first selected word.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._selectionStartIndex">
            <summary>
            the selection start index if the first selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._selectionEndIndex">
            <summary>
            the selection end index if the last selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._selectionStartOffset">
            <summary>
            the selection start offset if the first selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._selectionEndOffset">
            <summary>
            the selection end offset if the last selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._backwardSelection">
            <summary>
            is the selection goes backward in the html, the starting word comes after the ending word in DFS traversing.<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._inSelection">
            <summary>
            used to ignore mouse up after selection
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._isDoubleClickSelect">
            <summary>
            current selection process is after double click (full word selection)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._mouseDownInControl">
            <summary>
            used to know if selection is in the control or started outside so it needs to be ignored
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._mouseDownOnSelectedWord" -->
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._cursorChanged">
            <summary>
            is the cursor on the control has been changed by the selection handler
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._lastMouseDown">
            <summary>
            used to know if double click selection is requested
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler._dragDropData" -->
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Init.
            </summary>
            <param name="root">the root of the handled html tree</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.SelectAll(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl)">
            <summary>
            Select all the words in the html.
            </summary>
            <param name="control">the control hosting the html to invalidate</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.SelectWord(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Select the word at the given location if found.
            </summary>
            <param name="control">the control hosting the html to invalidate</param>
            <param name="loc">the location to select word at</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.HandleMouseDown(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="loc">the location of the mouse on the html</param>
            <param name="isMouseInContainer"> </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.HandleMouseUp(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,System.Boolean)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="leftMouseButton">is the left mouse button has been released</param>
            <returns>is the mouse up should be ignored</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.HandleMouseMove(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="loc">the location of the mouse on the html</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.HandleMouseLeave(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl)">
            <summary>
            On mouse leave change the cursor back to default.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.CopySelectedHtml">
            <summary>
            Copy the currently selected html segment to clipboard.<br/>
            Copy rich html text and plain text.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.GetSelectedText">
            <summary>
            Get the currently selected text segment in the html.<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.GetSelectedHtml">
            <summary>
            Copy the currently selected html segment with style.<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.GetSelectingStartIndex(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect)">
            <summary>
            The selection start index if the first selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection start index for</param>
            <returns>data value or -1 if not applicable</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.GetSelectedEndIndexOffset(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect)">
            <summary>
            The selection end index if the last selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection end index for</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.GetSelectedStartOffset(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect)">
            <summary>
            The selection start offset if the first selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection start offset for</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.GetSelectedEndOffset(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect)">
            <summary>
            The selection end offset if the last selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection end offset for</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.HandleSelection(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Handle html text selection by mouse move over the html with left mouse button pressed.<br/>
            Calculate the words in the selected range and set their selected property.
            </summary>
            <param name="control">the control hosting the html to invalidate</param>
            <param name="loc">the mouse location</param>
            <param name="allowPartialSelect">true - partial word selection allowed, false - only full words selection</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.ClearSelection(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Clear the selection from all the words in the css box recursively.
            </summary>
            <param name="box">the css box to selectionStart clear at</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.StartDragDrop(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl)" -->
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.SelectAllWords(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Select all the words that are under <paramref name="box"/> DOM hierarchy.<br/>
            </summary>
            <param name="box">the box to start select all at</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.CheckNonEmptySelection(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Check if the current selection is non empty, has some selection data.
            </summary>
            <param name="loc"></param>
            <param name="allowPartialSelect">true - partial word selection allowed, false - only full words selection</param>
            <returns>true - is non empty selection, false - empty selection</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.SelectWordsInRange(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect)">
            <summary>
            Select all the words that are between <paramref name="selectionStart"/> word and <paramref name="selectionEnd"/> word in the DOM hierarchy.<br/>
            </summary>
            <param name="root">the root of the DOM sub-tree the selection is in</param>
            <param name="selectionStart">selection start word limit</param>
            <param name="selectionEnd">selection end word limit</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.SelectWordsInRange(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect,System.Boolean@)">
            <summary>
            Select all the words that are between <paramref name="selectionStart"/> word and <paramref name="selectionEnd"/> word in the DOM hierarchy.
            </summary>
            <param name="box">the current traversal node</param>
            <param name="selectionStart">selection start word limit</param>
            <param name="selectionEnd">selection end word limit</param>
            <param name="inSelection">used to know the traversal is currently in selected range</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.CalculateWordCharIndexAndOffset(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Calculate the character index and offset by characters for the given word and given offset.<br/>
            <seealso cref="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.CalculateWordCharIndexAndOffset(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,System.Boolean)"/>.
            </summary>
            <param name="control">used to create graphics to measure string</param>
            <param name="word">the word to calculate its index and offset</param>
            <param name="loc">the location to calculate for</param>
            <param name="selectionStart">to set the starting or ending char and offset data</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.CalculateWordCharIndexAndOffset(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,System.Boolean,System.Int32@,System.Double@)">
            <summary>
            Calculate the character index and offset by characters for the given word and given offset.<br/>
            If the location is below the word line then set the selection to the end.<br/>
            If the location is to the right of the word then set the selection to the end.<br/>
            If the offset is to the left of the word set the selection to the beginning.<br/>
            Otherwise calculate the width of each substring to find the char the location is on.
            </summary>
            <param name="control">used to create graphics to measure string</param>
            <param name="word">the word to calculate its index and offset</param>
            <param name="loc">the location to calculate for</param>
            <param name="inclusive">is to include the first character in the calculation</param>
            <param name="selectionIndex">return the index of the char under the location</param>
            <param name="selectionOffset">return the offset of the char under the location</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.SelectionHandler.CheckSelectionDirection">
            <summary>
            Check if the selection direction is forward or backward.<br/>
            Is the selection start word is before the selection end word in DFS traversal.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.StylesheetLoadHandler">
            <summary>
            Handler for loading a stylesheet data.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.StylesheetLoadHandler.LoadStylesheet(KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String@,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData@)">
            <summary>
            Load stylesheet data from the given source.<br/>
            The source can be local file or web URI.<br/>
            First raise <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs"/> event to allow the client to overwrite the stylesheet loading.<br/>
            If the stylesheet is downloaded from URI we will try to correct local URIs to absolute.<br/>
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="src">the source of the element to load the stylesheet by</param>
            <param name="attributes">the attributes of the link element</param>
            <param name="stylesheet">return the stylesheet string that has been loaded (null if failed or <paramref name="stylesheetData"/> is given)</param>
            <param name="stylesheetData">return stylesheet data object that was provided by overwrite (null if failed or <paramref name="stylesheet"/> is given)</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.StylesheetLoadHandler.LoadStylesheet(KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,System.String)">
            <summary>
            Load stylesheet string from given source (file path or uri).
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="src">the file path or uri to load the stylesheet from</param>
            <returns>the stylesheet string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.StylesheetLoadHandler.LoadStylesheetFromFile(KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,System.String)">
            <summary>
            Load the stylesheet from local file by given path.
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="path">the stylesheet file to load</param>
            <returns>the loaded stylesheet string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.StylesheetLoadHandler.LoadStylesheetFromUri(KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,System.Uri)">
            <summary>
            Load the stylesheet from uri by downloading the string.
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="uri">the uri to download from</param>
            <returns>the loaded stylesheet string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Handlers.StylesheetLoadHandler.CorrectRelativeUrls(System.String,System.Uri)">
            <summary>
            Make relative URLs absolute in the stylesheet using the URI of the stylesheet.
            </summary>
            <param name="stylesheet">the stylesheet to correct</param>
            <param name="baseUri">the stylesheet uri to use to create absolute URLs</param>
            <returns>Corrected stylesheet</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt">
            <summary>
            Low level handling of Html Renderer logic.<br/>
            Allows html layout and rendering without association to actual control, those allowing to handle html rendering on any graphics object.<br/>
            Using this class will require the client to handle all propagation's of mouse/keyboard events, layout/paint calls, scrolling offset, 
            location/size/rectangle handling and UI refresh requests.<br/>
            </summary>
            <remarks>
            <para>
            <b>MaxSize and ActualSize:</b><br/>
            The max width and height of the rendered html.<br/>
            The max width will effect the html layout wrapping lines, resize images and tables where possible.<br/>
            The max height does NOT effect layout, but will not render outside it (clip).<br/>
            <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.ActualSize"/> can exceed the max size by layout restrictions (unwrap-able line, set image size, etc.).<br/>
            Set zero for unlimited (width/height separately).<br/>
            </para>
            <para>
            <b>ScrollOffset:</b><br/>
            This will adjust the rendered html by the given offset so the content will be "scrolled".<br/>
            Element that is rendered at location (50,100) with offset of (0,200) will not be rendered 
            at -100, therefore outside the client rectangle.
            </para>
            <para>
            <b>LinkClicked event</b><br/>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link to overwrite by custom logic.<br/>
            If error occurred in event handler it will propagate up the stack.
            </para>
            <para>
            <b>StylesheetLoad event:</b><br/>
            Raised when a stylesheet is about to be loaded by file path or URL in 'link' element.<br/>
            Allows to overwrite the loaded stylesheet by providing the stylesheet data manually, or different source (file or URL) to load from.<br/>
            Example: The stylesheet 'href' can be non-valid URI string that is interpreted in the overwrite delegate by custom logic to pre-loaded stylesheet object<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <b>ImageLoad event:</b><br/>
            Raised when an image is about to be loaded by file path, URL or inline data in 'img' element or background-image CSS style.<br/>
            Allows to overwrite the loaded image by providing the image object manually, or different source (file or URL) to load from.<br/>
            Example: image 'src' can be non-valid string that is interpreted in the overwrite delegate by custom logic to resource image object<br/>
            Example: image 'src' in the html is relative - the overwrite intercepts the load and provide full source URL to load the image from<br/>
            Example: image download requires authentication - the overwrite intercepts the load, downloads the image to disk using custom code and provide 
            file path to load the image from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <b>Refresh event:</b><br/>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).<br/>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </para>
            <para>
            <b>RenderError event:</b><br/>
            Raised when an error occurred during html rendering.<br/>
            </para>
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._adapter">
            <summary>
            Main adapter to framework specific logic.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._cssParser">
            <summary>
            parser for CSS data
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._root">
            <summary>
            the root css box of the parsed html
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._hoverBoxes">
            <summary>
            list of all css boxes that have ":hover" selector on them
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._selectionHandler">
            <summary>
            Handler for text selection in the html. 
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._imageDownloader">
            <summary>
            Handler for downloading of images in the html
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._selectionForeColor">
            <summary>
            the text fore color use for selected text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._selectionBackColor">
            <summary>
            the back-color to use for selected text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._cssData">
            <summary>
            the parsed stylesheet data used for handling the html
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._isSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._isContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled (default - true)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._avoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided 
            for geometry like backgrounds and borders
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._avoidAsyncImagesLoading">
            <summary>
            Gets or sets a value indicating if image asynchronous loading should be avoided (default - false).<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._avoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._loadComplete">
            <summary>
            is the load of the html document is complete
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._location">
            <summary>
            the top-left most location of the rendered html
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._maxSize">
            <summary>
            the max width and height of the rendered html, effects layout, actual size cannot exceed this values.<br/>
            Set zero for unlimited.<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._scrollOffset">
            <summary>
            Gets or sets the scroll offset of the document for scroll controls
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._actualSize">
            <summary>
            The actual size of the rendered html (after layout)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._marginTop">
            <summary>
            the top margin between the page start and the text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._marginBottom">
            <summary>
            the bottom margin between the page end and the text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._marginLeft">
            <summary>
            the left margin between the page start and the text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt._marginRight">
            <summary>
            the right margin between the page end and the text
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.Adapter">
            <summary>
            
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.CssParser">
            <summary>
            parser for CSS data
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.Refresh">
            <summary>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.ScrollChange">
            <summary>
            Raised when Html Renderer request scroll to specific location.<br/>
            This can occur on document anchor click.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.StylesheetLoad">
            <summary>
            Raised when a stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or Uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.CssData">
            <summary>
            the parsed stylesheet data used for handling the html
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default - false).
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.AvoidAsyncImagesLoading">
            <summary>
            Gets or sets a value indicating if image asynchronous loading should be avoided (default - false).<br/>
            True - images are loaded synchronously during html parsing.<br/>
            False - images are loaded asynchronously to html parsing when downloaded from URL or loaded from disk.<br/>
            </summary>
            <remarks>
            Asynchronously image loading allows to unblock html rendering while image is downloaded or loaded from disk using IO 
            ports to achieve better performance.<br/>
            Asynchronously image loading should be avoided when the full html content must be available during render, like render to image.
            </remarks>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.AvoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            True - images are loaded as soon as the html is parsed.<br/>
            False - images that are not visible because of scroll location are not loaded until they are scrolled to.
            </summary>
            <remarks>
            Images late loading improve performance if the page contains image outside the visible scroll area, especially if there is large 
            amount of images, as all image loading is delayed (downloading and loading into memory).<br/>
            Late image loading may effect the layout and actual size as image without set size will not have actual size until they are loaded
            resulting in layout change during user scroll.<br/>
            Early image loading may also effect the layout if image without known size above the current scroll location are loaded as they
            will push the html elements down.
            </remarks>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default - true)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.ScrollOffset">
            <summary>
            The scroll offset of the html.<br/>
            This will adjust the rendered html by the given offset so the content will be "scrolled".<br/>
            </summary>
            <example>
            Element that is rendered at location (50,100) with offset of (0,200) will not be rendered as it
            will be at -100 therefore outside the client rectangle.
            </example>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.Location">
            <summary>
            The top-left most location of the rendered html.<br/>
            This will offset the top-left corner of the rendered html.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.MaxSize">
            <summary>
            The max width and height of the rendered html.<br/>
            The max width will effect the html layout wrapping lines, resize images and tables where possible.<br/>
            The max height does NOT effect layout, but will not render outside it (clip).<br/>
            <see cref="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.ActualSize"/> can be exceed the max size by layout restrictions (unwrapable line, set image size, etc.).<br/>
            Set zero for unlimited (width\height separately).<br/>
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.ActualSize">
            <summary>
            The actual size of the rendered html (after layout)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.MarginTop">
            <summary>
            the top margin between the page start and the text
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.MarginBottom">
            <summary>
            the bottom margin between the page end and the text
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.MarginLeft">
            <summary>
            the left margin between the page start and the text
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.MarginRight">
            <summary>
            the right margin between the page end and the text
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.SetMargins(System.Int32)">
            <summary>
            Set all 4 margins to the given value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.Root">
            <summary>
            the root css box of the parsed html
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.SelectionForeColor">
            <summary>
            the text fore color use for selected text
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.SelectionBackColor">
            <summary>
            the back-color to use for selected text
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.SetHtml(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData)">
            <summary>
            Init with optional document and stylesheet.
            </summary>
            <param name="htmlSource">the html to init with, init empty if not given</param>
            <param name="baseCssData">optional: the stylesheet to init with, init default if not given</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.Clear">
            <summary>
            Clear the content of the HTML container releasing any resources used to render previously existing content.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.GetHtml(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle)">
            <summary>
            Get html from the current DOM tree with style if requested.
            </summary>
            <param name="styleGen">Optional: controls the way styles are generated when html is generated (default: <see cref="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle.Inline"/>)</param>
            <returns>generated html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.GetAttributeAt(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,System.String)">
            <summary>
            Get attribute value of element at the given x,y location by given key.<br/>
            If more than one element exist with the attribute at the location the inner most is returned.
            </summary>
            <param name="location">the location to find the attribute at</param>
            <param name="attribute">the attribute key to get value by</param>
            <returns>found attribute value or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.GetLinks">
            <summary>
            Get all the links in the HTML with the element rectangle and href data.
            </summary>
            <returns>collection of all the links in the HTML</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.GetLinkAt(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Get css link href at the given x,y location.
            </summary>
            <param name="location">the location to find the link at</param>
            <returns>css link href if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br/>
            Element if found by id (id attribute on the html element).<br/>
            Note: to get the screen rectangle you need to adjust by the hosting control.<br/>
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.PerformLayout(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.
            </summary>
            <param name="g">Device context to draw</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.PerformPaint(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics)">
            <summary>
            Render the html using the given device.
            </summary>
            <param name="g">the device to use to render</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.HandleMouseDown(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="location">the location of the mouse</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.HandleMouseUp(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RMouseEvent)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="location">the location of the mouse</param>
            <param name="e">the mouse event data</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.HandleMouseDoubleClick(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse double click to select word under the mouse.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="location">the location of the mouse</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.HandleMouseMove(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="location">the location of the mouse</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.HandleMouseLeave(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl)">
            <summary>
            Handle mouse leave to handle hover cursor.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.HandleKeyDown(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RKeyEvent)">
            <summary>
            Handle key down event for selection and copy.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the pressed key</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.RaiseHtmlStylesheetLoadEvent(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlStylesheetLoadEventArgs)">
            <summary>
            Raise the stylesheet load event with the given event args.
            </summary>
            <param name="args">the event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.RaiseHtmlImageLoadEvent(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs)">
            <summary>
            Raise the image load event with the given event args.
            </summary>
            <param name="args">the event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.RequestRefresh(System.Boolean)">
            <summary>
            Request invalidation and re-layout of the control hosting the renderer.
            </summary>
            <param name="layout">is re-layout is required for the refresh</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.ReportError(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorType,System.String,System.Exception)">
            <summary>
            Report error in html render process.
            </summary>
            <param name="type">the type of error to report</param>
            <param name="message">the error message</param>
            <param name="exception">optional: the exception that occured</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.HandleLinkClicked(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RControl,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Handle link clicked going over <see cref="E:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.LinkClicked"/> event and using <see cref="M:System.Diagnostics.Process.Start"/> if not canceled.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="location">the location of the mouse</param>
            <param name="link">the link that was clicked</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.AddHoverBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock)">
            <summary>
            AddBulk css box that has ":hover" selector to be handled on mouse hover.
            </summary>
            <param name="box">the box that has the hover selector</param>
            <param name="block">the css block with the css data with the selector</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.GetImageDownloader">
            <summary>
            Get image downloader to be used to download images for the current html rendering.<br/>
            Lazy create single downloader to be used for all images in the current html.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.OffsetByScroll(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Adjust the offset of the given location by the current scroll offset.
            </summary>
            <param name="location">the location to adjust</param>
            <returns>the adjusted location</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.IsMouseInContainer(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Check if the mouse is currently on the html container.<br/>
            Relevant if the html container is not filled in the hosted control (location is not zero and the size is not the full size of the control).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlRendererUtils">
            <summary>
            General utilities.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlRendererUtils.MeasureHtmlByRestrictions(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
            Measure the size of the html by performing layout under the given restrictions.
            </summary>
            <param name="g">the graphics to use</param>
            <param name="htmlContainer">the html to calculate the layout for</param>
            <param name="minSize">the minimal size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">the maximum size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <returns>return: the size of the html to be rendered within the min/max limits</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlRendererUtils.Layout(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,System.Boolean,System.Boolean)">
            <summary>
            Perform the layout of the html container by given size restrictions returning the final size.<br/>
            The layout can be effected by the HTML content in the <paramref name="htmlContainer"/> if <paramref name="autoSize"/> or
            <paramref name="autoSizeHeightOnly"/> is set to true.<br/>
            Handle minimum and maximum size restrictions.<br/>
            Handle auto size and auto size for height only. if <paramref name="autoSize"/> is true <paramref name="autoSizeHeightOnly"/>
            is ignored.<br/>
            </summary>
            <param name="g">the graphics used for layout</param>
            <param name="htmlContainer">the html container to layout</param>
            <param name="size">the current size</param>
            <param name="minSize">the min size restriction - can be empty for no restriction</param>
            <param name="maxSize">the max size restriction - can be empty for no restriction</param>
            <param name="autoSize">if to modify the size (width and height) by html content layout</param>
            <param name="autoSizeHeightOnly">if to modify the height by html content layout</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser">
            <summary>
            Parser to parse CSS stylesheet source string into CSS objects.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser._cssBlockSplitters">
            <summary>
            split CSS rule
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser._adapter">
            <summary>
            
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser._valueParser">
            <summary>
            Utility for value parsing.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser._cssClassTrimChars">
            <summary>
            The chars to trim the css class name by
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseStyleSheet(System.String,System.Boolean)">
            <summary>
            Parse the given stylesheet source to CSS blocks dictionary.<br/>
            The CSS blocks are organized into two level buckets of media type and class name.<br/>
            Root media type are found under 'all' bucket.<br/>
            If <paramref name="combineWithDefault"/> is true the parsed css blocks are added to the 
            default css data (as defined by W3), merged if class name already exists. If false only the data in the given stylesheet is returned.
            </summary>
            <seealso cref="!:http://www.w3.org/TR/CSS21/sample.html"/>
            <param name="stylesheet">raw css stylesheet to parse</param>
            <param name="combineWithDefault">true - combine the parsed css data with default css data, false - return only the parsed css data</param>
            <returns>the CSS data with parsed CSS objects (never null)</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseStyleSheet(KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.String)">
            <summary>
            Parse the given stylesheet source to CSS blocks dictionary.<br/>
            The CSS blocks are organized into two level buckets of media type and class name.<br/>
            Root media type are found under 'all' bucket.<br/>
            The parsed css blocks are added to the given css data, merged if class name already exists.
            </summary>
            <param name="cssData">the CSS data to fill with parsed CSS objects</param>
            <param name="stylesheet">raw css stylesheet to parse</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseCssBlock(System.String,System.String)">
            <summary>
            Parse single CSS block source into CSS block instance.
            </summary>
            <param name="className">the name of the css class of the block</param>
            <param name="blockSource">the CSS block to parse</param>
            <returns>the created CSS block instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseFontFamily(System.String)">
            <summary>
            Parse a complex font family css property to check if it contains multiple fonts and if the font exists.<br/>
            returns the font family name to use or 'inherit' if failed.
            </summary>
            <param name="value">the font-family value to parse</param>
            <returns>parsed font-family value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseColor(System.String)">
            <summary>
            Parses a color value in CSS style; e.g. #ff0000, red, rgb(255,0,0), rgb(100%, 0, 0) 
            </summary>
            <param name="colorStr">color string value to parse</param>
            <returns>color value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.RemoveStylesheetComments(System.String)">
            <summary>
            Remove comments from the given stylesheet.
            </summary>
            <param name="stylesheet">the stylesheet to remove comments from</param>
            <returns>stylesheet without comments</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseStyleBlocks(KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.String)">
            <summary>
            Parse given stylesheet for CSS blocks<br/>
            This blocks are added under the "all" keyword.
            </summary>
            <param name="cssData">the CSS data to fill with parsed CSS objects</param>
            <param name="stylesheet">the stylesheet to parse</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseMediaStyleBlocks(KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.String)">
            <summary>
            Parse given stylesheet for media CSS blocks<br/>
            This blocks are added under the specific media block they are found.
            </summary>
            <param name="cssData">the CSS data to fill with parsed CSS objects</param>
            <param name="stylesheet">the stylesheet to parse</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.FeedStyleBlock(KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.String,System.String)">
            <summary>
            Feeds the style with a block about the specific media.<br/>
            When no media is specified, "all" will be used.
            </summary>
            <param name="cssData"> </param>
            <param name="block">the CSS block to handle</param>
            <param name="media">optional: the media (default - all)</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseCssBlockImp(System.String,System.String)">
            <summary>
            Parse single CSS block source into CSS block instance.
            </summary>
            <param name="className">the name of the css class of the block</param>
            <param name="blockSource">the CSS block to parse</param>
            <returns>the created CSS block instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseCssBlockSelector(System.String,System.String@)">
            <summary>
            Parse css block selector to support hierarchical selector (p class1 > class2).
            </summary>
            <param name="className">the class selector to parse</param>
            <param name="firstClass">return the main class the css block is on</param>
            <returns>returns the hierarchy of classes or null if single class selector</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseCssBlockProperties(System.String)">
            <summary>
            Parse the properties of the given css block into a key-value dictionary.
            </summary>
            <param name="blockSource">the raw css block to parse</param>
            <returns>dictionary with parsed css block properties</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.AddProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            AddBulk the given property to the given properties collection, if the property is complex containing
            multiple css properties then parse them and add the inner properties.
            </summary>
            <param name="propName">the name of the css property to add</param>
            <param name="propValue">the value of the css property to add</param>
            <param name="properties">the properties collection to add to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseLengthProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse length property to add only valid lengths.
            </summary>
            <param name="propName">the name of the css property to add</param>
            <param name="propValue">the value of the css property to add</param>
            <param name="properties">the properties collection to add to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseColorProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse color property to add only valid color.
            </summary>
            <param name="propName">the name of the css property to add</param>
            <param name="propValue">the value of the css property to add</param>
            <param name="properties">the properties collection to add to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseFontProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex font property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseImageProperty(System.String)">
            <summary>
            
            </summary>
            <param name="propValue">the value of the property to parse</param>
            <returns>parsed value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseFontFamilyProperty(System.String)">
            <summary>
            Parse a complex font family css property to check if it contains multiple fonts and if the font exists.<br/>
            returns the font family name to use or 'inherit' if failed.
            </summary>
            <param name="propValue">the value of the property to parse</param>
            <returns>parsed font-family value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseBorderProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="direction">the left, top, right or bottom direction of the border to parse</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseMarginProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex margin property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseBorderStyleProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border style property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseBorderWidthProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border width property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseBorderColorProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border color property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParsePaddingProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex padding property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.SplitMultiDirectionValues(System.String,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Split multi direction value into the proper direction values (left, top, right, bottom).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.SplitValues(System.String,System.Char)">
            <summary>
            Split the value by the specified separator; e.g. Useful in values like 'padding:5 4 3 inherit'
            </summary>
            <param name="value">Value to be splitted</param>
            <param name="separator"> </param>
            <returns>Splitted and trimmed values</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseBorder(System.String,System.String@,System.String@,System.String@)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="width"> </param>
            <param name="style"></param>
            <param name="color"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseBorderWidth(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given substring to extract border width substring.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>found border width value or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseBorderStyle(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given substring to extract border style substring.<br/>
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>found border width value or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser.ParseBorderColor(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given substring to extract border style substring.<br/>
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>found border width value or null</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser">
            <summary>
            Parse CSS properties values like numbers, Urls, etc.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser._adapter">
            <summary>
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.IsFloat(System.String,System.Int32,System.Int32)">
            <summary>
            Check if the given substring is a valid double number.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>true - valid double number, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.IsInt(System.String,System.Int32,System.Int32)">
            <summary>
            Check if the given substring is a valid double number.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>true - valid int number, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.IsValidLength(System.String)">
            <summary>
            Check if the given string is a valid length value.
            </summary>
            <param name="value">the string value to check</param>
            <returns>true - valid, false - invalid</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.ParseNumber(System.String,System.Double)">
            <summary>
            Evals a number and returns it. If number is a percentage, it will be multiplied by <see cref="!:hundredPercent"/>
            </summary>
            <param name="number">Number to be parsed</param>
            <param name="hundredPercent">Number that represents the 100% if parsed number is a percentage</param>
            <returns>Parsed number. Zero if error while parsing.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.ParseLength(System.String,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties,System.Boolean)">
            <summary>
            Parses a length. Lengths are followed by an unit identifier (e.g. 10px, 3.1em)
            </summary>
            <param name="length">Specified length</param>
            <param name="hundredPercent">Equivalent to 100 percent when length is percentage</param>
            <param name="fontAdjust">if the length is in pixels and the length is font related it needs to use 72/96 factor</param>
            <param name="box"></param>
            <returns>the parsed length value with adjustments</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.ParseLength(System.String,System.Double,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties,System.String)">
            <summary>
            Parses a length. Lengths are followed by an unit identifier (e.g. 10px, 3.1em)
            </summary>
            <param name="length">Specified length</param>
            <param name="hundredPercent">Equivalent to 100 percent when length is percentage</param>
            <param name="box"></param>
            <param name="defaultUnit"></param>
            <returns>the parsed length value with adjustments</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.ParseLength(System.String,System.Double,System.Double,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parses a length. Lengths are followed by an unit identifier (e.g. 10px, 3.1em)
            </summary>
            <param name="length">Specified length</param>
            <param name="hundredPercent">Equivalent to 100 percent when length is percentage</param>
            <param name="emFactor"></param>
            <param name="defaultUnit"></param>
            <param name="fontAdjust">if the length is in pixels and the length is font related it needs to use 72/96 factor</param>
            <param name="returnPoints">Allows the return double to be in points. If false, result will be pixels</param>
            <returns>the parsed length value with adjustments</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.GetUnit(System.String,System.String,System.Boolean@)">
            <summary>
            Get the unit to use for the length, use default if no unit found in length string.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.IsColorValid(System.String)">
            <summary>
            Check if the given color string value is valid.
            </summary>
            <param name="colorValue">color string value to parse</param>
            <returns>true - valid, false - invalid</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.GetActualColor(System.String)">
            <summary>
            Parses a color value in CSS style; e.g. #ff0000, red, rgb(255,0,0), rgb(100%, 0, 0)
            </summary>
            <param name="colorValue">color string value to parse</param>
            <returns>Color value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.TryGetColor(System.String,System.Int32,System.Int32,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor@)">
            <summary>
            Parses a color value in CSS style; e.g. #ff0000, RED, RGB(255,0,0), RGB(100%, 0, 0)
            </summary>
            <param name="str">color substring value to parse</param>
            <param name="idx">substring start idx </param>
            <param name="length">substring length</param>
            <param name="color">return the parsed color</param>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.GetActualBorderWidth(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties)">
            <summary>
            Parses a border value in CSS style; e.g. 1px, 1, thin, thick, medium
            </summary>
            <param name="borderValue"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.GetColorByHex(System.String,System.Int32,System.Int32,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor@)">
            <summary>
            Get color by parsing given hex value color string (#A28B34).
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.GetColorByRgb(System.String,System.Int32,System.Int32,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor@)">
            <summary>
            Get color by parsing given RGB value color string (RGB(255,180,90))
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.GetColorByRgba(System.String,System.Int32,System.Int32,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor@)">
            <summary>
            Get color by parsing given RGBA value color string (RGBA(255,180,90,180))
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.GetColorByName(System.String,System.Int32,System.Int32,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor@)">
            <summary>
            Get color by given name, including .NET name.
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.ParseIntAtIndex(System.String,System.Int32@)">
            <summary>
            Parse the given decimal number string to positive int value.<br/>
            Start at given <paramref name="startIdx"/>, ignore whitespaces and take
            as many digits as possible to parse to int.
            </summary>
            <param name="str">the string to parse</param>
            <param name="startIdx">the index to start parsing at</param>
            <returns>parsed int or 0</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.ParseInt(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given decimal number string to positive int value.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>int value, -1 if not valid</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssValueParser.ParseHexInt(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given hex number string to positive int value.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>int value, -1 if not valid</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser">
            <summary>
            Handle css DOM tree generation from raw html and stylesheet.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser._cssParser">
            <summary>
            Parser for CSS
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.#ctor(KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.GenerateCssTree(System.String,KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData@)">
            <summary>
            Generate css tree by parsing the given html and applying the given css style data on it.
            </summary>
            <param name="html">the html to parse</param>
            <param name="htmlContainer">the html container to use for reference resolve</param>
            <param name="cssData">the css data to use</param>
            <returns>the root of the generated tree</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.CascadeParseStyles(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData@,System.Boolean@)">
            <summary>
            Read styles defined inside the dom structure in links and style elements.<br/>
            If the html tag is "style" tag parse it content and add to the css data for all future tags parsing.<br/>
            If the html tag is "link" that point to style data parse it content and add to the css data for all future tags parsing.<br/>
            </summary>
            <param name="box">the box to parse style data in</param>
            <param name="htmlContainer">the html container to use for reference resolve</param>
            <param name="cssData">the style data to fill with found styles</param>
            <param name="cssDataChanged">check if the css data has been modified by the handled html not to change the base css data</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.CascadeApplyStyles(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData)">
            <summary>
            Applies style to all boxes in the tree.<br/>
            If the html tag has style defined for each apply that style to the css box of the tag.<br/>
            If the html tag has "class" attribute and the class name has style defined apply that style on the tag css box.<br/>
            If the html tag has "style" attribute parse it and apply the parsed style on the tag css box.<br/>
            </summary>
            <param name="box">the box to apply the style to</param>
            <param name="cssData">the style data for the html</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.SetTextSelectionStyle(KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData)">
            <summary>
            Set the selected text style (selection text color and background color).
            </summary>
            <param name="htmlContainer"> </param>
            <param name="cssData">the style data</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.AssignClassCssBlocks(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData)">
            <summary>
            Assigns the given css classes to the given css box checking if matching.<br/>
            Support multiple classes in single attribute separated by whitespace.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="cssData">the css data to use to get the matching css blocks</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.AssignCssBlocks(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData,System.String)">
            <summary>
            Assigns the given css style blocks to the given css box checking if matching.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="cssData">the css data to use to get the matching css blocks</param>
            <param name="className">the class selector to search for css blocks</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.IsBlockAssignableToBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock)">
            <summary>
            Check if the given css block is assignable to the given css box.<br/>
            the block is assignable if it has no hierarchical selectors or if the hierarchy matches.<br/>
            Special handling for ":hover" pseudo-class.<br/>
            </summary>
            <param name="box">the box to check assign to</param>
            <param name="block">the block to check assign of</param>
            <returns>true - the block is assignable to the box, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.IsBlockAssignableToBoxWithSelector(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock)">
            <summary>
            Check if the given css block is assignable to the given css box by validating the selector.<br/>
            </summary>
            <param name="box">the box to check assign to</param>
            <param name="block">the block to check assign of</param>
            <returns>true - the block is assignable to the box, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.AssignCssBlock(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.CssBlock)">
            <summary>
            Assigns the given css style block properties to the given css box.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="block">the css block to assign</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.IsStyleOnElementAllowed(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.String,System.String)">
            <summary>
            Check if the given style is allowed to be set on the given css box.<br/>
            Used to prevent invalid CssBoxes creation like table with inline display style.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="key">the style key to cehck</param>
            <param name="value">the style value to check</param>
            <returns>true - style allowed, false - not allowed</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.CloneCssData(KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData@,System.Boolean@)">
            <summary>
            Clone css data if it has not already been cloned.<br/>
            Used to preserve the base css data used when changed by style inside html.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.TranslateAttributes(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            
            </summary>
            <param name="tag"></param>
            <param name="box"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.TranslateLength(System.String)">
            <summary>
            Converts an HTML length into a Css length
            </summary>
            <param name="htmlLength"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.ApplyTableBorder(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.String)">
            <summary>
            Cascades to the TD's the border spacified in the TABLE tag.
            </summary>
            <param name="table"></param>
            <param name="border"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.ApplyTablePadding(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.String)">
            <summary>
            Cascades to the TD's the border spacified in the TABLE tag.
            </summary>
            <param name="table"></param>
            <param name="padding"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.SetForAllCells(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.ActionInt{KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox})">
            <summary>
            Execute action on all the "td" cells of the table.<br/>
            Handle if there is "theader" or "tbody" exists.
            </summary>
            <param name="table">the table element</param>
            <param name="action">the action to execute</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.CorrectTextBoxes(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Go over all the text boxes (boxes that have some text that will be rendered) and
            remove all boxes that have only white-spaces but are not 'preformatted' so they do not effect
            the rendered html.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.CorrectImgBoxes(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Go over all image boxes and if its display style is set to block, put it inside another block but set the image to inline.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.CorrectLineBreaksBlocks(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Boolean@)">
            <summary>
            Correct the DOM tree recursively by replacing  "br" html boxes with anonymous blocks that respect br spec.<br/>
            If the "br" tag is after inline box then the anon block will have zero height only acting as newline,
            but if it is after block box then it will have min-height of the font size so it will create empty line.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
            <param name="followingBlock">used to know if the br is following a box so it should create an empty line or not so it only
            move to a new line</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.CorrectBlockInsideInline(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Correct DOM tree if there is block boxes that are inside inline blocks.<br/>
            Need to rearrange the tree so block box will be only the child of other block box.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.CorrectBlockInsideInlineImp(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Rearrange the DOM of the box to have block box with boxes before the inner block box and after.
            </summary>
            <param name="box">the box that has the problem</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.CorrectBlockSplitBadBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Split bad box that has inline and block boxes into two parts, the left - before the block box
            and right - after the block box.
            </summary>
            <param name="parentBox">the parent box that has the problem</param>
            <param name="badBox">the box to split into different boxes</param>
            <param name="leftBlock">the left block box that is created for the split</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.CorrectInlineBoxesParent(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Makes block boxes be among only block boxes and all inline boxes have block parent box.<br/>
            Inline boxes should live in a pool of Inline boxes only so they will define a single block.<br/>
            At the end of this process a block box will have only block siblings and inline box will have
            only inline siblings.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.ContainsInlinesOnlyDeep(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Check if the given box contains only inline child boxes in all subtree.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - only inline child boxes, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.DomParser.ContainsVariantBoxes(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Check if the given box contains inline and block child boxes.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - has variant child boxes, false - otherwise</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.HtmlParser">
            <summary>
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.HtmlParser.ParseDocument(System.String)">
            <summary>
            Parses the source html to css boxes tree structure.
            </summary>
            <param name="source">the html source to parse</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.HtmlParser.AddTextBox(System.String,System.Int32,System.Int32,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox@)">
            <summary>
            AddBulk html text anon box to the current box, this box will have the rendered text<br/>
            Adding box also for text that contains only whitespaces because we don't know yet if
            the box is preformatted. At later stage they will be removed if not relevant.
            </summary>
            <param name="source">the html source to parse</param>
            <param name="startIdx">the start of the html part</param>
            <param name="tagIdx">the index of the next html tag</param>
            <param name="curBox">the current box in html tree parsing</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.HtmlParser.ParseHtmlTag(System.String,System.Int32,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox@)">
            <summary>
            Parse the html part, the part from prev parsing index to the beginning of the next html tag.<br/>
            </summary>
            <param name="source">the html source to parse</param>
            <param name="tagIdx">the index of the next html tag</param>
            <param name="curBox">the current box in html tree parsing</param>
            <returns>the end of the parsed part, the new start index</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.HtmlParser.ParseHtmlTag(System.String,System.Int32,System.Int32,System.String@,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            Parse raw html tag source to <seealso cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.HtmlTag"/> object.<br/>
            Extract attributes found on the tag.
            </summary>
            <param name="source">the html source to parse</param>
            <param name="idx">the start index of the tag in the source</param>
            <param name="length">the length of the tag from the start index in the source</param>
            <param name="name">return the name of the html tag</param>
            <param name="attributes">return the dictionary of tag attributes</param>
            <returns>true - the tag is closing tag, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.HtmlParser.ExtractAttributes(System.String,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            Extract html tag attributes from the given sub-string.
            </summary>
            <param name="source">the html source to parse</param>
            <param name="idx">the start index of the tag attributes in the source</param>
            <param name="length">the length of the tag attributes from the start index in the source</param>
            <param name="attributes">return the dictionary of tag attributes</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils">
            <summary>
            Collection of regular expressions used when parsing
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssMediaTypes">
            <summary>
            Extracts the media types from a media at-rule; e.g. @media print, 3d, screen {
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssBlocks">
            <summary>
            Extracts defined blocks in CSS. 
            WARNING: Blocks will include blocks inside at-rules.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssNumber">
            <summary>
            Extracts a number; e.g.  5, 6, 7.5, 0.9
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssPercentage">
            <summary>
            Extracts css percentages from the string; e.g. 100% .5% 5.4%
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssLength">
            <summary>
            Extracts CSS lengths; e.g. 9px 3pt .89em
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssLineHeight">
            <summary>
            Extracts line-height values (normal, numbers, lengths, percentages)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssFontFamily">
            <summary>
            Extracts font-family values
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssFontStyle">
            <summary>
            Extracts CSS font-styles; e.g. normal italic oblique
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssFontVariant">
            <summary>
            Extracts CSS font-variant values; e.g. normal, small-caps
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssFontWeight">
            <summary>
            Extracts font-weight values; e.g. normal, bold, bolder...
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssFontSize">
            <summary>
            Exracts font sizes: xx-small, larger, small, 34pt, 30%, 2em
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.CssFontSizeAndLineHeight">
            <summary>
            Gets the font-size[/line-height]? on the font shorthand property.
            Check http://www.w3.org/TR/CSS21/fonts.html#font-shorthand
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils._regexes">
            <summary>
            the regexes cache that is used by the parser so not to create regex each time
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.GetCssAtRules(System.String,System.Int32@)">
            <summary>
            Get CSS at rule from the given stylesheet.
            </summary>
            <param name="stylesheet">the stylesheet data to retrieve the rule from</param>
            <param name="startIdx">the index to start the search for the rule, on return will be the value of the end of the found rule</param>
            <returns>the found at rule or null if not exists</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.Match(System.String,System.String)">
            <summary>
            Extracts matches from the specified source
            </summary>
            <param name="regex">Regular expression to extract matches</param>
            <param name="source">Source to extract matches</param>
            <returns>Collection of matches</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.Search(System.String,System.String)">
            <summary>
            Searches the specified regex on the source
            </summary>
            <param name="regex"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.Search(System.String,System.String,System.Int32@)">
            <summary>
            Searches the specified regex on the source
            </summary>
            <param name="regex"></param>
            <param name="source"></param>
            <param name="position"> </param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.RegexParserUtils.GetRegex(System.String)">
            <summary>
            Get regex instance for the given regex string.
            </summary>
            <param name="regex">the regex string to use</param>
            <returns>the regex instance</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.ArgChecker">
            <summary>
            Static class that contains argument-checking methods
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.ArgChecker.AssertIsTrue``1(System.Boolean,System.String)">
            <summary>
            Validate given <see cref="!:condition"/> is true, otherwise throw exception.
            </summary>
            <typeparam name="TException">Exception type to throw.</typeparam>
            <param name="condition">Condition to assert.</param>
            <param name="message">Exception message in-case of assert failure.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.ArgChecker.AssertArgNotNull(System.Object,System.String)">
            <summary>
            Validate given argument isn't Null.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null</exception>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.ArgChecker.AssertArgNotNull(System.IntPtr,System.String)">
            <summary>
            Validate given argument isn't <see cref="F:System.IntPtr.Zero"/>.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is <see cref="F:System.IntPtr.Zero"/></exception>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.ArgChecker.AssertArgNotNullOrEmpty(System.String,System.String)">
            <summary>
            Validate given argument isn't Null or empty.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null or empty</exception>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.ArgChecker.AssertArgOfType``1(System.Object,System.String)">
            <summary>
            Validate given argument isn't Null.
            </summary>
            <typeparam name="T">Type expected of <see cref="!:arg"/></typeparam>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null</exception>
            <returns><see cref="!:arg"/> cast as <see cref="!:T"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.ArgChecker.AssertFileExist(System.String,System.String)">
            <summary>
            Validate given argument isn't Null or empty AND argument value is the path of existing file.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null or empty</exception>
            <exception cref="T:System.IO.FileNotFoundException">if <see cref="!:arg"/> file-path not exist</exception>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils">
            <summary>
            Utility methods for general stuff.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils._romanDigitsTable">
            <summary>
            Table to convert numbers into roman digits
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils._tempPath">
            <summary>
            the temp path to use for local files
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.IsAsianCharecter(System.Char)">
            <summary>
            Check if the given char is of Asian range.
            </summary>
            <param name="ch">the character to check</param>
            <returns>true - Asian char, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.IsDigit(System.Char,System.Boolean)">
            <summary>
            Check if the given char is a digit character (0-9) and (0-9, a-f for HEX)
            </summary>
            <param name="ch">the character to check</param>
            <param name="hex">optional: is hex digit check</param>
            <returns>true - is digit, false - not a digit</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.ToDigit(System.Char,System.Boolean)">
            <summary>
            Convert the given char to digit.
            </summary>
            <param name="ch">the character to check</param>
            <param name="hex">optional: is hex digit check</param>
            <returns>true - is digit, false - not a digit</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.Max(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RSize)">
            <summary>
            Get size that is max of <paramref name="size"/> and <paramref name="other"/> for width and height separately.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.TryGetUri(System.String)">
            <summary>
            Get Uri object for the given path if it is valid uri path.
            </summary>
            <param name="path">the path to get uri for</param>
            <returns>uri or null if not valid</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.GetFirstValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``1)">
            <summary>
            Get the first value in the given dictionary.
            </summary>
            <typeparam name="TKey">the type of dictionary key</typeparam>
            <typeparam name="TValue">the type of dictionary value</typeparam>
            <param name="dic">the dictionary</param>
            <param name="defaultValue">optional: the default value to return of no elements found in dictionary </param>
            <returns>first element or default value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.TryGetFileInfo(System.String)">
            <summary>
            Get file info object for the given path if it is valid file path.
            </summary>
            <param name="path">the path to get file info for</param>
            <returns>file info or null if not valid</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.GetResponseContentType(System.Net.WebClient)">
            <summary>
            Get web client response content type.
            </summary>
            <param name="client">the web client to get the response content type from</param>
            <returns>response content type or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.GetLocalfileName(System.Uri)">
            <summary>
            Gets the representation of the online uri on the local disk.
            </summary>
            <param name="imageUri">The online image uri.</param>
            <returns>The path of the file on the disk.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.GetNextSubString(System.String,System.Int32,System.Int32@)">
            <summary>
            Get substring separated by whitespace starting from the given idex.
            </summary>
            <param name="str">the string to get substring in</param>
            <param name="idx">the index to start substring search from</param>
            <param name="length">return the length of the found string</param>
            <returns>the index of the substring, -1 if no valid sub-string found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.SubStringEquals(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Compare that the substring of <paramref name="str"/> is equal to <paramref name="str2"/>
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>true - equals, false - not equals</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.GetValidFileName(System.String)">
            <summary>
            Replaces invalid filename chars to '_'
            </summary>
            <param name="source">The possibly-not-valid filename</param>
            <returns>A valid filename.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.ConvertToAlphaNumber(System.Int32,System.String)">
            <summary>
            Convert number to alpha numeric system by the requested style (UpperAlpha, LowerRoman, Hebrew, etc.).
            </summary>
            <param name="number">the number to convert</param>
            <param name="style">the css style to convert by</param>
            <returns>converted string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.ConvertToEnglishNumber(System.Int32,System.Boolean)">
            <summary>
            Convert the given integer into alphabetic numeric format (D, AU, etc.)
            </summary>
            <param name="number">the number to convert</param>
            <param name="lowercase">is to use lowercase</param>
            <returns>the roman number string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.ConvertToGreekNumber(System.Int32)">
            <summary>
            Convert the given integer into alphabetic numeric format (alpha, AU, etc.)
            </summary>
            <param name="number">the number to convert</param>
            <returns>the roman number string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.ConvertToRomanNumbers(System.Int32,System.Boolean)">
            <summary>
            Convert the given integer into roman numeric format (II, VI, IX, etc.)
            </summary>
            <param name="number">the number to convert</param>
            <param name="lowercase">if to use lowercase letters for roman digits</param>
            <returns>the roman number string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.ConvertToSpecificNumbers(System.Int32,System.String[0:,0:])">
            <summary>
            Convert the given integer into given alphabet numeric system.
            </summary>
            <param name="number">the number to convert</param>
            <param name="alphabet">the alphabet system to use</param>
            <returns>the number string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CommonUtils.ConvertToSpecificNumbers2(System.Int32,System.String[])">
            <summary>
            Convert the given integer into given alphabet numeric system.
            </summary>
            <param name="number">the number to convert</param>
            <param name="alphabet">the alphabet system to use</param>
            <returns>the number string</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants">
            <summary>
            String constants to avoid typing errors.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants.Cm">
            <summary>
            Centimeters
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants.Mm">
            <summary>
            Millimeters
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants.Px">
            <summary>
            Pixels
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants.In">
            <summary>
            Inches
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants.Em">
            <summary>
            Em - The font size of the relevant font
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants.Ex">
            <summary>
            The 'x-height' of the relevan font
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants.Pt">
            <summary>
            Points
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants.Pc">
            <summary>
            Picas
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants.FontSize">
            <summary>
            Default font size in points. Change this value to modify the default font size.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssConstants.DefaultFont">
            <summary>
            Default font used for the generic 'serif' family
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssUtils">
            <summary>
            Utility method for handling CSS stuff.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssUtils._defaultSelectionBackcolor">
            <summary>
            Brush for selection background
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssUtils.DefaultSelectionBackcolor">
            <summary>
            Brush for selection background
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssUtils.WhiteSpace(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBoxProperties)">
            <summary>
            Gets the white space width of the specified box
            </summary>
            <param name="g"></param>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssUtils.GetPropertyValue(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.String)">
            <summary>
            Get CSS box property value by the CSS name.<br/>
            Used as a mapping between CSS property and the class property.
            </summary>
            <param name="cssBox">the CSS box to get it's property value</param>
            <param name="propName">the name of the CSS property</param>
            <returns>the value of the property, null if no such property exists</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.CssUtils.SetPropertyValue(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.String,System.String)">
            <summary>
            Set CSS box property value by the CSS name.<br/>
            Used as a mapping between CSS property and the class property.
            </summary>
            <param name="cssBox">the CSS box to set it's property value</param>
            <param name="propName">the name of the CSS property</param>
            <param name="value">the value to set</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils">
            <summary>
            Utility class for traversing DOM structure and execution stuff on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.IsInBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Check if the given location is inside the given box deep.<br/>
            Check inner boxes and all lines that the given box spans to.
            </summary>
            <param name="box">the box to check</param>
            <param name="location">the location to check</param>
            <returns>true - location inside the box, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.ContainsInlinesOnly(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Check if the given box contains only inline child boxes.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - only inline child boxes, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.FindParent(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.String,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Recursively searches for the parent with the specified HTML Tag name
            </summary>
            <param name="root"></param>
            <param name="tagName"></param>
            <param name="box"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetPreviousSibling(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Gets the previous sibling of this box.
            </summary>
            <returns>Box before this one on the tree. Null if its the first</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetPreviousContainingBlockSibling(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Gets the previous sibling of this box.
            </summary>
            <returns>Box before this one on the tree. Null if its the first</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.IsBoxHasWhitespace(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            fix word space for first word in inline tag.
            </summary>
            <param name="box">the box to check</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetNextSibling(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Gets the next sibling of this box.
            </summary>
            <returns>Box before this one on the tree. Null if its the first</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetAttribute(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.String)">
            <summary>
            Get attribute value by given key starting search from given box, search up the tree until
            attribute found or root.
            </summary>
            <param name="box">the box to start lookup at</param>
            <param name="attribute">the attribute to get</param>
            <returns>the value of the attribute or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetCssBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Get css box under the given sub-tree at the given x,y location, get the inner most.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box by</param>
            <param name="visible">Optional: if to get only visible boxes (default - true)</param>
            <returns>css link box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetAllLinkBoxes(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Collections.Generic.List{KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox})">
            <summary>
            Collect all link boxes found in the HTML tree.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="linkBoxes">collection to add all link boxes to</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetLinkBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Get css link box under the given sub-tree at the given x,y location.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box by</param>
            <returns>css link box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetBoxById(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.String)">
            <summary>
            Get css box under the given sub-tree with the given id.<br/>
            </summary>
            <param name="box">the box to start search from</param>
            <param name="id">the id to find the box by</param>
            <returns>css box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetCssLineBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Get css line box under the given sub-tree at the given y location or the nearest line from the top.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box at</param>
            <returns>css word box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetCssBoxWord(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Get css word box under the given sub-tree at the given x,y location.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box at</param>
            <returns>css word box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetCssBoxWord(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssLineBox,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RPoint)">
            <summary>
            Get css word box under the given sub-tree at the given x,y location.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="lineBox">the line box to search in</param>
            <param name="location">the location to find the box at</param>
            <returns>css word box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetCssLineBoxByWord(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect)">
            <summary>
            Find the css line box that the given word is in.
            </summary>
            <param name="word">the word to search for it's line box</param>
            <returns>line box that the word is in</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetSelectedPlainText(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Get selected plain text of the given html sub-tree.
            </summary>
            <param name="root">the DOM box to get selected text from its sub-tree</param>
            <returns>the selected plain text string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GenerateHtml(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle,System.Boolean)">
            <summary>
            Generate html from the given DOM tree.<br/>
            Generate all the style inside the html, in header or for every tag depending on <paramref name="styleGen"/> value.
            </summary>
            <param name="root">the box of the html generate html from</param>
            <param name="styleGen">Optional: controls the way styles are generated when html is generated</param>
            <param name="onlySelected">Optional: true - generate only selected html subset, false - generate all (default - false)</param>
            <returns>generated html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GenerateBoxTree(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Generate textual tree representation of the css boxes tree starting from the given root.<br/>
            Used for debugging html parsing.
            </summary>
            <param name="root">the root to generate tree from</param>
            <returns>generated tree</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetSelectedPlainText(System.Text.StringBuilder,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Get selected plain text of the given html sub-tree.<br/>
            Append all the selected words.
            </summary>
            <param name="sb">the builder to append the selected text to</param>
            <param name="box">the DOM box to get selected text from its sub-tree</param>
            <returns>the index of the last word appended</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.CollectSelectedBoxes(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Collect the boxes that have at least one word down the hierarchy that is selected recursively.<br/>
            </summary>
            <param name="root">the box to check its sub-tree</param>
            <returns>the collection to add the selected tags to</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.CollectSelectedBoxes(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Collections.Generic.Dictionary{KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Boolean},System.Collections.Generic.Dictionary{KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Boolean})">
            <summary>
            Collect the boxes that have at least one word down the hierarchy that is selected recursively.<br/>
            Use <paramref name="maybeBoxes"/> to handle boxes that are between selected words but don't have selected word inside.<br/>
            </summary>
            <param name="box">the box to check its sub-tree</param>
            <param name="selectedBoxes">the hash to add the selected boxes to</param>
            <param name="maybeBoxes">used to handle boxes that are between selected words but don't have selected word inside</param>
            <returns>is the current box is in selected sub-tree</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetSelectionRoot(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Collections.Generic.Dictionary{KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Boolean})">
            <summary>
            find the box the is the root of selected boxes (the first box to contain multiple selected boxes)
            </summary>
            <param name="root">the root of the boxes tree</param>
            <param name="selectedBoxes">the selected boxes to find selection root in</param>
            <returns>the box that is the root of selected boxes</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.ContainsNamedBox(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Check if the given box has a names child box (has html tag) recursively.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - in sub-tree there is a named box, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.WriteHtml(KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser,System.Text.StringBuilder,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle,System.Collections.Generic.Dictionary{KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Boolean},KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Write the given html DOM sub-tree into the given string builder.<br/>
            If <paramref name="selectedBoxes"/> are given write html only from those tags.
            </summary>
            <param name="cssParser">used to parse CSS data</param>
            <param name="sb">the string builder to write html into</param>
            <param name="box">the html sub-tree to write</param>
            <param name="styleGen">Controls the way styles are generated when html is generated</param>
            <param name="selectedBoxes">Control if to generate only selected boxes, if given only boxes found in hash will be generated</param>
            <param name="selectionRoot">the box the is the root of selected boxes (the first box to contain multiple selected boxes)</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.WriteHtmlTag(KimTools.WinForms.KtLabelHTMLHelpers.Core.Parse.CssParser,System.Text.StringBuilder,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlGenerationStyle)">
            <summary>
            Write the given html tag with all its attributes and styles.
            </summary>
            <param name="cssParser">used to parse CSS data</param>
            <param name="sb">the string builder to write html into</param>
            <param name="box">the css box with the html tag to write</param>
            <param name="styleGen">Controls the way styles are generated when html is generated</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.StripDefaultStyles(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Clean the given style collection by removing default styles so only custom styles remain.<br/>
            Return new collection where the old remains unchanged.
            </summary>
            <param name="box">the box the styles apply to, used to know the default style</param>
            <param name="tagStyles">the collection of styles to clean</param>
            <returns>new cleaned styles collection</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.WriteStylesheet(System.Text.StringBuilder,KimTools.WinForms.KtLabelHTMLHelpers.Core.CssData)">
            <summary>
            Write stylesheet data inline into the html.
            </summary>
            <param name="sb">the string builder to write stylesheet into</param>
            <param name="cssData">the css data to write to the head</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GetSelectedWord(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssRect,System.Boolean)">
            <summary>
            Get the selected word with respect to partial selected words.
            </summary>
            <param name="rect">the word to append</param>
            <param name="selectedText">is to get selected text or all the text in the word</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.DomUtils.GenerateBoxTree(KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox,System.Text.StringBuilder,System.Int32)">
            <summary>
            Generate textual tree representation of the css boxes tree starting from the given root.<br/>
            Used for debugging html parsing.
            </summary>
            <param name="box">the box to generate for</param>
            <param name="builder">the string builder to generate to</param>
            <param name="indent">the current indent level to set indent of generated text</param>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.HtmlConstants">
            <summary>
            Defines HTML strings
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.HtmlUtils._list">
            <summary>
            List of html tags that don't have content
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.HtmlUtils._encodeDecode">
            <summary>
            the html encode\decode pairs
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.HtmlUtils._decodeOnly">
            <summary>
            the html decode only pairs
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.HtmlUtils.#cctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.HtmlUtils.IsSingleTag(System.String)">
            <summary>
            Is the given html tag is single tag or can have content.
            </summary>
            <param name="tagName">the tag to check (must be lower case)</param>
            <returns>true - is single tag, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.HtmlUtils.DecodeHtml(System.String)">
            <summary>
            Decode html encoded string to regular string.<br/>
            Handles &lt;, &gt;, "&amp;.
            </summary>
            <param name="str">the string to decode</param>
            <returns>decoded string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.HtmlUtils.EncodeHtml(System.String)">
            <summary>
            Encode regular string into html encoded string.<br/>
            Handles &lt;, &gt;, "&amp;.
            </summary>
            <param name="str">the string to encode</param>
            <returns>encoded string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.HtmlUtils.DecodeHtmlCharByCode(System.String)">
            <summary>
            Decode html special charecters encoded using char entity code (&#8364;)
            </summary>
            <param name="str">the string to decode</param>
            <returns>decoded string</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.HtmlUtils.DecodeHtmlCharByName(System.String)" -->
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.RenderUtils">
            <summary>
            Provides some drawing functionality
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.RenderUtils.IsColorVisible(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RColor)">
            <summary>
            Check if the given color is visible if painted (has alpha and color values)
            </summary>
            <param name="color">the color to check</param>
            <returns>true - visible, false - not visible</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.RenderUtils.ClipGraphicsByOverflow(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.Dom.CssBox)">
            <summary>
            Clip the region the graphics will draw on by the overflow style of the containing block.<br/>
            Recursively travel up the tree to find containing block that has overflow style set to hidden. if not
            block found there will be no clipping and null will be returned.
            </summary>
            <param name="g">the graphics to clip</param>
            <param name="box">the box that is rendered to get containing blocks</param>
            <returns>true - was clipped, false - not clipped</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.RenderUtils.DrawImageLoadingIcon(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Draw image loading icon.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="htmlContainer"></param>
            <param name="r">the rectangle to draw icon in</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.RenderUtils.DrawImageErrorIcon(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Core.HtmlContainerInt,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect)">
            <summary>
            Draw image failed to load icon.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="htmlContainer"></param>
            <param name="r">the rectangle to draw icon in</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.RenderUtils.GetRoundRect(KimTools.WinForms.KtLabelHTMLHelpers.Adapters.RGraphics,KimTools.WinForms.KtLabelHTMLHelpers.Adapters.Entities.RRect,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a rounded rectangle using the specified corner radius<br/>
            NW-----NE
             |       |
             |       |
            SW-----SE
            </summary>
            <param name="g">the device to draw into</param>
            <param name="rect">Rectangle to round</param>
            <param name="nwRadius">Radius of the north east corner</param>
            <param name="neRadius">Radius of the north west corner</param>
            <param name="seRadius">Radius of the south east corner</param>
            <param name="swRadius">Radius of the south west corner</param>
            <returns>GraphicsPath with the lines of the rounded rectangle ready to be painted</returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString">
            <summary>
            Represents sub-string of a full string starting at specific location with a specific length.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString._fullString">
            <summary>
            the full string that this sub-string is part of
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString._startIdx">
            <summary>
            the start index of the sub-string
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString._length">
            <summary>
            the length of the sub-string starting at <see cref="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString._startIdx"/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.#ctor(System.String)">
            <summary>
            Init sub-string that is the full string.
            </summary>
            <param name="fullString">the full string that this sub-string is part of</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Init.
            </summary>
            <param name="fullString">the full string that this sub-string is part of</param>
            <param name="startIdx">the start index of the sub-string</param>
            <param name="length">the length of the sub-string starting at <paramref name="startIdx"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fullString"/> is null</exception>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.FullString">
            <summary>
            the full string that this sub-string is part of
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.StartIdx">
            <summary>
            the start index of the sub-string
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.Length">
            <summary>
            the length of the sub-string starting at <see cref="F:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString._startIdx"/>
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.Item(System.Int32)">
            <summary>
            Get string char at specific index.
            </summary>
            <param name="idx">the idx to get the char at</param>
            <returns>char at index</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.IsEmpty">
            <summary>
            Is the sub-string is empty string.
            </summary>
            <returns>true - empty string, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.IsEmptyOrWhitespace">
            <summary>
            Is the sub-string is empty string or contains only whitespaces.
            </summary>
            <returns>true - empty or whitespace string, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.IsWhitespace">
            <summary>
            Is the sub-string contains only whitespaces (at least one).
            </summary>
            <returns>true - empty or whitespace string, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.CutSubstring">
            <summary>
            Get a string of the sub-string.<br/>
            This will create a new string object!
            </summary>
            <returns>new string that is the sub-string represented by this instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHTMLHelpers.Core.Utils.SubString.Substring(System.Int32,System.Int32)">
            <summary>
            Retrieves a substring from this instance. The substring starts at a specified character position and has a specified length. 
            </summary>
            <param name="startIdx">The zero-based starting character position of a substring in this instance.</param>
            <param name="length">The number of characters in the substring. </param>
            <returns>A String equivalent to the substring of length length that begins at startIndex in this instance, or 
            Empty if startIndex is equal to the length of this instance and length is zero. </returns>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHtml">
            <summary>
            Provides standard and rich HTML text-rendering capabilities with 
            native support for CSS 2.0 styling and inline CSS style-tags.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.#ctor">
            <summary>
            Creates a new Tailwind Label.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHtml.TextAlignments">
            <summary>
            Tailwind Label Html Alignments options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHtml.TextAlignments.Left">
            <summary>
            Positions the text to the Left of the container.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHtml.TextAlignments.Right">
            <summary>
            Positions the text to the Right of the container.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHtml.TextAlignments.Center">
            <summary>
            Positions the text to the Center of the container.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLabelHtml.TextFormattingOptions">
            <summary>
            Provides a list of text-formatting options
            for Tailwind Labels.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHtml.TextFormattingOptions.Default">
            <summary>
            Retains the default text format.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHtml.TextFormattingOptions.UpperCase">
            <summary>
            Converts the text to upper-case.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHtml.TextFormattingOptions.LowerCase">
            <summary>
            Converts the text to lower-case.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHtml.TextFormattingOptions.TitleCase">
            <summary>
            Converts the text to title-case.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLabelHtml.TextFormattingOptions.SentenceCase">
            <summary>
            Converts the text to sentence-case.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.AllowParentOverrides">
            <summary>
            Gets or sets a value indicating whether the label will inherit 
            its parent font and fore color properties.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.Text">
            <summary>
            Gets or sets the label text.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.BackColor">
            <summary>
            Gets or sets the background color of the label.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.TextRenderingHint">
            <summary>
            The text rendering hint to be used for rendering text.
            </summary>
            <value>The text rendering hint.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.BorderStyle">
            <summary>
            Gets or sets the border style.
            </summary>
            <value>The border style.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.ForeColor">
            <summary>
            Gets or sets the foreground color of the label.
            </summary>
            <value>The color of the label.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.RightToLeft">
            <summary>
            Gets or sets a value indicating whether control's elements are aligned to support
            locales using right-to-left fonts. You can also use the following inline CSS style: 
            style="text-align: right; direction: Rtl;"
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.TextAlignment">
            <summary>
            Determines the position of the text within the label.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.TextFormat">
            <summary>
            Provides a number of text-formatting options.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.TextAlign">
            <summary>
            Determines the position of the text within the label.
            (This property is no longer supported. Please use 'TextAlignment' instead.)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.Cursor">
            <summary>
            Gets or sets the cursor that is displayed when the mouse pointer is over the control.
            </summary>
            <value>The cursor.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.EllipsisFormat">
            <summary>
            Gets or sets the ellipsis format to be applied whenever the range of text exceeds the control's width.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.AutoEllipsis">
            <summary>
            Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge (default position)
            of the <see cref="T:KimTools.WinForms.KtLabelHtml"/> control, denoting that the label's text extends beyond the length of the label.
            This is only possible if the properties <see cref="P:KimTools.WinForms.KtLabelHtml.AutoSize"/> and <see cref="P:KimTools.WinForms.KtLabelHtml.AutoSizeHeightOnly"/>
            are set to <see cref="!:false"/>.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.UseGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.<br />
            </summary>
            <value><c>true</c> If [use GDI text rendering]; otherwise, <c>false</c>.</value>
            <remarks><para>
            GDI+ text rendering is less smooth than GDI text rendering bnut it natively supports alpha chanel
            thus allows creating transparent images.
            </para>
            <para>
            While using GDI+ text rendering, you can control the text rendering using <see cref="P:System.Drawing.Graphics.TextRenderingHint" />, note that
            using <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit" /> doesn't work well with transparent background.
            </para></remarks>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.ConvertNewlinesToBreakTags">
            <summary>
            Gets or sets a value indicating whether to allow conversion of newline characters to HTML break tags.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.UseSystemCursors">
            <summary>
            If to use cursors defined by the operating system or .NET cursors
            </summary>
            <value><c>true</c> if [use system cursors]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.UseWaitCursor">
            <summary>
            Gets or sets a value indicating whether to use the wait cursor for the current
            control and all child controls.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default-false).
            </summary>
            <value><c>true</c> if [avoid geometry antialias]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default-true).<br />
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
            <value><c>true</c> if this instance is selection enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default-true)
            </summary>
            <value><c>true</c> if this instance is context menu enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.AutoSizeHeightOnly">
            <summary>
            Automatically sets the height of the label by content height (width is not effected).
            </summary>
            <value><c>true</c> if [automatic size height only]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.AutoSize">
            <summary>
            Automatically sets the size of the label by content size
            </summary>
            <value><c>true</c> if [automatic size]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.AllowDrop">
            <summary>
            Gets or sets a value indicating whether the control can accept data that the user drags onto it.
            Returns [true] if drag-and-drop operations are allowed in the control; otherwise, [false]. The default is [false].
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.BaseStylesheet">
            <summary>
            Set base stylesheet to be used by html rendered in the panel.
            </summary>
            <value>The base stylesheet.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.MaximumSize">
            <summary>
            Gets or sets the max size the control get be set by <see cref="P:KimTools.WinForms.KtLabelHtml.AutoSize" /> or <see cref="P:KimTools.WinForms.KtLabelHtml.AutoSizeHeightOnly" />.
            </summary>
            <value>The maximum size.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.MinimumSize">
            <summary>
            Gets or sets the min size the control get be set by <see cref="P:KimTools.WinForms.KtLabelHtml.AutoSize" /> or <see cref="P:KimTools.WinForms.KtLabelHtml.AutoSizeHeightOnly" />.
            </summary>
            <value>The minimum size.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.CursorType">
            <summary>
            [Variant] Gets or sets the cursor that is displayed when the mouse pointer is over the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
            <value>The selected text.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
            <value>The selected HTML.</value>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.CreateParams">
            <summary>
            Override to support border for the control.
            </summary>
            <value>The create parameters.</value>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.GetHtml">
            <summary>
            Get html from the current DOM tree with inline style.
            </summary>
            <returns>generated html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br />
            Element if found by id (id attribute on the html element).<br />
            Note: to get the screen rectangle you need to adjust by the hosting control.<br />
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.InDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode as per the LicenseManager module.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.ToSentenceCase(System.String)">
            <summary>
            Converts a string to sentence-case format.
            </summary>
            <param name="text"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.Render(System.Boolean)">
            <summary>
            Renders the text content in HTML format.
            </summary>
            <param name="rightToLeft">
            Render in RightToLeft (RTL) format?
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Override the proc processing method to set OS specific hand cursor.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.Dispose(System.Boolean)">
            <summary>
            Release the html container resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHtml.EllipsisFormatChanged">
            <summary>
              Raised when the EllipsisFormat property value changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHtml.BorderStyleChanged">
            <summary>
              Raised when the BorderStyle property value changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHtml.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHtml.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHtml.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtLabelHtml.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnBorderStyleChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:KimTools.WinForms.KtLabelHtml.BorderStyleChanged" /> event.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnLoadComplete(System.EventArgs)">
            <summary>
            Propagate the LoadComplete event from root container.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnLinkClicked(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs)">
            <summary>
            Propagate the LinkClicked event from root container.
            </summary>
            <param name="e">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnRenderError(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs)">
            <summary>
            Propagate the Render Error event from root container.
            </summary>
            <param name="e">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnImageLoad(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs)">
            <summary>
            Propagate the image load event from root container.
            </summary>
            <param name="e">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnRefresh(KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRefreshEventArgs)">
            <summary>
            Handle html renderer invalidate and re-layout as requested.
            </summary>
            <param name="e">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRefreshEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnLoadComplete(System.Object,System.EventArgs)">
            <summary>
            Handles the <see cref="E:LoadComplete" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnLinkClicked(System.Object,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs)">
            <summary>
            Handles the <see cref="E:LinkClicked" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlLinkClickedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnRenderError(System.Object,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs)">
            <summary>
            Handles the <see cref="E:RenderError" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRenderErrorEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnImageLoad(System.Object,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs)">
            <summary>
            Handles the <see cref="E:ImageLoad" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlImageLoadEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnRefresh(System.Object,KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRefreshEventArgs)">
            <summary>
            Handles the <see cref="E:Refresh" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:KimTools.WinForms.KtLabelHTMLHelpers.Core.Entities.HtmlRefreshEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnParentForeColorChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.ForeColorChanged"/> 
            event when the <see cref="P:System.Windows.Forms.Control.ForeColor" /> property 
            value of the control's container changes.
            </summary>
            <param name="e">
            An <see cref="T:System.EventArgs"/> 
            that contains the event data.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnParentFontChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="M:KimTools.WinForms.KtLabelHtml.OnParentFontChanged(System.EventArgs)"/> event 
            when the parent font changes.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnParentChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="M:KimTools.WinForms.KtLabelHtml.OnParentChanged(System.EventArgs)"/> event 
            when the parent control changes.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnResize(System.EventArgs)">
            <summary>
            Perform text-rendering while control is being resized.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnLayout(System.Windows.Forms.LayoutEventArgs)">
            <summary>
            Perform the layout of the html in the control.
            </summary>
            <param name="levent">The <see cref="T:System.Windows.Forms.LayoutEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Perform paint of the html in the control.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnMouseLeave(System.EventArgs)">
            <summary>
            Handle mouse leave to handle cursor change.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtLabelHtml.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse double click to select word under the mouse.
            </summary>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:KimTools.WinForms.KtLabelHtml.BunifuLabelActionList.Html">
            <summary>
            Gets or sets the control's text.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.Ellipsis">
            <summary>
            Provides ellipsis-handling tasks and features for controls.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.Ellipsis.EllipsisChars">
            <summary>
            String used as a placeholder for trimmed text.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.Ellipsis.EllipsisFormat">
            <summary>
            Specifies ellipsis format and alignment.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.Ellipsis.EllipsisFormat.None">
            <summary>
            Html is not modified.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.Ellipsis.EllipsisFormat.End">
            <summary>
            Html is trimmed at the end of the string. An ellipsis (...) is drawn in place of remaining text.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.Ellipsis.EllipsisFormat.Start">
            <summary>
            Html is trimmed at the begining of the string. An ellipsis (...) is drawn in place of remaining text. 
            </summary>
        </member>
        <member name="F:KimTools.WinForms.Ellipsis.EllipsisFormat.Middle">
            <summary>
            Html is trimmed in the middle of the string. An ellipsis (...) is drawn in place of remaining text.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.Ellipsis.EllipsisFormat.Path">
            <summary>
            Preserve as much as possible of the drive and filename information. Must be combined with alignment information.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.Ellipsis.EllipsisFormat.Word">
            <summary>
            Html is trimmed at a word boundary. Must be combined with alignment information.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.Ellipsis.Compact(System.String,System.Windows.Forms.Control,KimTools.WinForms.Ellipsis.EllipsisFormat)">
            <summary>
            Truncates a text string to fit within a given control width by replacing trimmed text with ellipses. 
            </summary>
            <param name="text">The text or string to be trimmed.</param>
            <param name="control">
            The control whose Html property will be trimmed-down. 
            The Html must fit within control's width.
            The control's FontDefault is used to measure the Html string.
            </param>
            <param name="options">The format and alignment of the ellipsis.</param>
            <returns>This function returns the text trimmed to the specified control's width.</returns>
        </member>
        <member name="F:KimTools.WinForms.KtMenu.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtMenu.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtMenu.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtMenuDropdown.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtMenuDropdown.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtMenuDropdown.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.BackColorClick">
            <summary>
            Gets or sets the back color click.
            </summary>
            <value>
            The back color click.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.BackColorHover">
            <summary>
            Gets or sets the back color hover.
            </summary>
            <value>
            The back color hover.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.BackColorSelected">
            <summary>
            Gets or sets the back color selected.
            </summary>
            <value>
            The back color selected.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.BadgesMargin">
            <summary>
            Gets or sets the badges margin.
            </summary>
            <value>
            The badges margin.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.DisableToggling">
            <summary>
            Gets or sets the disable toggling.
            </summary>
            <value>
            The disable toggling.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.FoldingMode">
            <summary>
            Gets or sets the expansion mode.
            </summary>
            <value>
            The expansion mode.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.ForeColorSelected">
            <summary>
            Gets or sets the fore color selected.
            </summary>
            <value>
            The fore color selected.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.IsExpandable">
            <summary>
            Gets or sets a value indicating whether this instance is expandable.
            </summary>
            <value>
              <c>true</c> if this instance is expandable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance is expanded.
            </summary>
            <value>
              <c>true</c> if this instance is expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.ItemHeight">
            <summary>
            Gets or sets the height of the item.
            </summary>
            <value>
            The height of the item.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.ItemImageSize">
            <summary>
            Gets or sets the size of the item image.
            </summary>
            <value>
            The size of the item image.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.ItemPadding">
            <summary>
            Gets or sets the item padding.
            </summary>
            <value>
            The item padding.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.ItemRightImageMargin">
            <summary>
            Gets or sets the item right image margin.
            </summary>Back
            <value>
            The item right image margin.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.ItemRightImageSize">
            <summary>
            Gets or sets the size of the item right image.
            </summary>
            <value>
            The size of the item right image.
            </value>
        </member>
        <!-- Badly formed XML comment ignored for member "P:KimTools.WinForms.KtNavMenu.Items" -->
        <member name="P:KimTools.WinForms.KtNavMenu.ItemSeparator">
            <summary>
            Gets or sets the item separator.
            </summary>
            <value>
            The item separator.
            </value> 
        </member>
        <member name="P:KimTools.WinForms.KtNavMenu.ItemTextMargin">
            <summary>
            Gets or sets the item text margin.
            </summary>
            <value>
            The item text margin.
            </value>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.Badge(System.String)">
            <summary>
            Badges the specified path.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.Badge(System.String,System.Drawing.Color,System.Drawing.Color,System.Object)">
            <summary>
            Badges the specified path.
            </summary>
            <param name="path">The path.</param>
            <param name="backColor">Color of the back.</param>
            <param name="foreColor">Color of the fore.</param>
            <param name="val">The value.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.BadgeClear(System.String)">
            <summary>
            Badges the clear.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.BadgeError(System.String)">
            <summary>
            Badges the error.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.BadgeError(System.String,System.String)">
            <summary>
            Badges the error.
            </summary>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.BadgeInfo(System.String)">
            <summary>
            Badges the information.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.BadgeInfo(System.String,System.String)">
            <summary>
            Badges the information.
            </summary>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.BadgeReset(System.String)">
            <summary>
            Badges the reset.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.BadgeSuccess(System.String)">
            <summary>
            Badges the success.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.BadgeSuccess(System.String,System.String)">
            <summary>
            Badges the success.
            </summary>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.BadgeWarning(System.String)">
            <summary>
            Badges the warning.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.BadgeWarning(System.String,System.String)">
            <summary>
            Badges the warning.
            </summary>
            <param name="path">The path.</param>
            <param name="value">The value.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.ChangeColor(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Changes the color.
            </summary>
            <param name="bitmap">The bitmap.</param>
            <param name="newColor">The new color.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.CollapseAll">
            <summary>
            Collapses all menu items.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.SetSelection(System.String)">
            <summary>
            Sets the selection.
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="F:KimTools.WinForms.KtNavMenu.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtNavMenu.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.NavigtionMenuButton.IconSelected">
            <summary>
            Gets or sets the icon active.
            </summary>
            <value>
            The icon active.
            </value>
        </member>
        <member name="P:KimTools.WinForms.NavigtionMenuButton.IconDefault">
            <summary>
            Gets or sets the icon idle.
            </summary>
            <value>
            The icon idle.
            </value> 
        </member>
        <member name="P:KimTools.WinForms.NavigtionMenuButton.Page">
            <summary>
            Gets or sets the page.
            </summary>
            <value>
            The page.
            </value>
        </member>
        <member name="P:KimTools.WinForms.NavigtionMenuButton.IsExpanded">
            <summary>
            Gets or sets a value indicating whether this instance is expanded.
            </summary>
            <value>
              <c>true</c> if this instance is expanded; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KimTools.WinForms.NavigtionMenuButton.SubItems">
            <summary>
            Gets or sets the sub items.
            </summary>
            <value>
            The sub items.
            </value>
        </member>
        <member name="F:KimTools.WinForms.KtNavPageSelector.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtNavPageSelector.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtNavPageSelector.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtNavSlot.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtNavSlot.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtNavSlot.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPages">
            <summary>
            Provides controlled tab-based navigation that appears invisible 
            to users but visible and customizable to developers at design-time, 
            mimicking single-page-applications (SPAs).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPages.#ctor">
            <summary>
            Provides controlled tab-based navigation which 
            appears invisible to users but visible and customizable 
            to developers, thus mimicking single-page-applications design.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPages.AllowTransitions">
            <summary>
            Gets or sets a value indicating 
            whether transitions are enabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPages.Transition">
            <summary>
            Gets or sets the transition options to be 
            applied when moving between pages.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPages.TransitionType">
            <summary>
            Gets or sets the type of transition to be 
            used when moving from one page to another.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPages.Page">
            <summary>
            Gets or sets the currently selected page.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPages.PageIndex">
            <summary>
            Gets or sets the currently selected page 
            using its page index.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPages.PageTitle">
            <summary>
            Gets or sets the currently selected page 
            using its page title or text.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPages.PageName">
            <summary>
            Gets or sets the currently selected page 
            using its page name.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPages.SetPage(System.String,System.Boolean)">
            <summary>
            Sets the tab page that will be visible to the user.
            </summary>
            <param name="pageTitle">The title of the tab page to set.</param>
            <param name="useNameInstead">
            If set to true, the tab page name will be used 
            instead of the page title when selecting; else, 
            the default page title will be used by default.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtPages.SetPage(System.Int32)">
            <summary>
            Sets the tab page that will be visible to the user.
            </summary>
            <param name="pageIndex">The tab page index to be set.</param>
        </member>
        <member name="M:KimTools.WinForms.KtPages.SetPage(System.Windows.Forms.TabPage)">
            <summary>
            Sets the tab page that will be visible to the user.
            </summary>
            <param name="page">The tab page to be set.</param>
        </member>
        <member name="M:KimTools.WinForms.KtPages.OnSelecting(System.Windows.Forms.TabControlCancelEventArgs)">
            <summary>
            Raises the <see cref="M:KimTools.WinForms.KtPages.OnSelecting(System.Windows.Forms.TabControlCancelEventArgs)"/> event. 
            </summary>
            <param name="e">
            Provides data for the 'Selecting' and 'Deselecting'
            events of a <see cref="T:KimTools.WinForms.KtPages"/> control.
            </param>
        </member>
        <member name="F:KimTools.WinForms.KtPage.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPage.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtPage.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPanelGradient">
            <summary>
            Create stylish gradient panels with extendable color customization options.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPanelGradient.#ctor">
            <summary>
            Creates a new <see cref="T:KimTools.WinForms.KtPanelGradient"/> control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelGradient.BorderRadius">
            <summary>
            Gets or sets the panel's border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelGradient.GradientTopLeft">
            <summary>
            Gets or sets the top-left gradient color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelGradient.GradientTopRight">
            <summary>
            Gets or sets the top-right gradient color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelGradient.GradientBottomLeft">
            <summary>
            Gets or sets the bottom-left gradient color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelGradient.GradientBottomRight">
            <summary>
            Gets or sets the bottom-right gradient color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelGradient.Quality">
            <summary>
            [Deprecated] Gets or sets the gradient's quality.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelGradient.BackColor">
            <summary>
            Gets or sets the control's background color.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPanelGradient.Refresh">
             <summary>
             Forces the control to invalidate its client area and 
             immediately redraw itself and any child controls.
             </summary>
            
        </member>
        <member name="M:KimTools.WinForms.KtPanelGradient.RoundRectangle(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws a rounded rectangle and returns its absolute path.
            </summary>
            <param name="rectangle">
            The rectangle bounds to be used when drawing.
            </param>
            <param name="radius">
            The rectangle radius.
            </param>
        </member>
        <member name="T:KimTools.WinForms.KtPanelGradient.BunifuControlDesignerActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtPanelGradient.BunifuControlDesignerActionList"/> class.
            </summary>
            <seealso cref="T:Microsoft.DotNet.DesignTools.Designers.Actions.DesignerActionList" />
        </member>
        <member name="M:KimTools.WinForms.KtPanelGradient.BunifuControlDesignerActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelGradient.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPanelGradient.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtPanelGradient.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPanel">
            <summary>
            AddBulk customizable panels to your applications with additional styling options.
            </summary> 
        </member>
        <member name="M:KimTools.WinForms.KtPanel.RoundRectangle(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws a rounded rectangle and returns its absolute path.
            </summary>
            <param name="rectangle">
            The rectangle bounds to be used when drawing.
            </param>
            <param name="radius">
            The rectangle radius.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtPanel.#ctor">
            <summary>
            Creates a new <see cref="T:KimTools.WinForms.KtPanel" /> control.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtPanel.BackgroundColorChanged">
            <summary>
            Raised whenever the <see cref="P:KimTools.WinForms.KtPanel.BackgroundColor" /> property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtPanel.BorderColorChanged">
            <summary>
            Raised whenever the <see cref="P:KimTools.WinForms.KtPanel.BorderColor" /> property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtPanel.BorderRadiusChanged">
            <summary>
            Raised whenever the <see cref="P:KimTools.WinForms.KtPanel.BorderRadiusSize" /> property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtPanel.BorderThicknessChanged">
            <summary>
            Raised whenever the <see cref="P:KimTools.WinForms.KtPanel.BorderThickness" /> property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtPanel.ShowBordersChanged">
            <summary>
            Raised whenever the <see cref="P:KimTools.WinForms.KtPanel.ShowBorders" /> property has been changed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanel.BackColor">
            <summary>
            Gets or sets the control's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanel.BackgroundColor">
            <summary>
            Gets or sets the panel's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanel.BorderColor">
            <summary>
            Gets or sets the panel's border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanel.BorderRadiusSize">
            <summary>
            Gets or sets the panel's border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanel.BorderThickness">
            <summary>
            Gets or sets the panel's border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanel.ShowBorders">
            <summary>
            Gets or sets a value indicating whether borders will be displayed along the panel's edges.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPanel.Refresh">
            <summary>
            Forces the control to invalidate its client area and immediately redraw itself and any
            child controls.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPanel.Render">
            <summary>
            Renders this instance.
            </summary> 
        </member>
        <member name="F:KimTools.WinForms.KtPanel.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPanel.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtPanel.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPictureBox">
            <summary>
            Provides a customizable Picture Box with more styling options.
            </summary>
            <seealso cref="T:System.Windows.Forms.PictureBox" />
        </member>
        <member name="M:KimTools.WinForms.KtPictureBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtPictureBox" /> class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPictureBox.Types">
            <summary>
            Provides a list of shapes the 
            control can be rendered in.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPictureBox.Types.Circle">
            <summary>
            Circular design.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPictureBox.Types.Square">
            <summary>
            Square design.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPictureBox.Types.Custom">
            <summary>
            Custom design.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPictureBox.AutoSizeHeight">
            <summary>
            Gets or sets a value indicating whether the 
            PictureBox will be autosized on resize.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPictureBox.BorderRadius">
            <summary>
            Gets or sets the border radius.
            </summary> 
        </member>
        <member name="P:KimTools.WinForms.KtPictureBox.Type">
            <summary>
            Gets or sets the control's shape.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPictureBox.IsCircle">
            <summary>
            Gets a value indicating whether the control is rendered as a circle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPictureBox.AllowFocused">
            <summary>
            Gets or sets a value indicating 
            whether control allows focus.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPictureBox.DrawPictureBox(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Draws the picture box.
            </summary>
            <param name="pe">The <see cref="T:System.Windows.Forms.PaintEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtPictureBox.RoundedRect(System.Drawing.Rectangle,System.Int32)">
            <summary>
            Roundeds the rect.
            </summary>
            <param name="bounds">The bounds.</param>
            <param name="radius">The radius.</param>
            <returns>GraphicsPath.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtPictureBox.ResizeControl">
            <summary>
            Auto-resizes the control's height based on its width.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPictureBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPictureBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtPictureBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtProgressRadial">
            <summary>
            Provides customizable circular progress bars for use in 
            value ranges and progressive movement of data.
            </summary>
            <seealso cref="T:System.Windows.Forms.ProgressBar" />
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="M:KimTools.WinForms.KtProgressRadial.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtProgressRadial" /> class.
            </summary>
            
        </member>
        <member name="T:KimTools.WinForms.KtProgressRadial.CapStyles">
            <summary>
            Provides various cap styles used when 
            drawing the edges of a progress bar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtProgressRadial.CapStyles.Flat">
            <summary>
            Draws a flat cap.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtProgressRadial.CapStyles.Round">
            <summary>
            Draws a rounded cap.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtProgressRadial.CapStyles.Arrow">
            <summary>
            Draws an arrow-styled cap.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtProgressRadial.CapStyles.Triangle">
            <summary>
            Draws a triangulated cap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.Animated">
            <summary>
            Gets or sets a value indicating whether the 
            progress movement will be animated.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.Value">
            <summary>
            Gets or sets the progress value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.Minimum">
            <summary>
            Gets or sets the minimum progress value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.Maximum">
            <summary>
            Gets or sets the maximum progress value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.CircleMargin">
            <summary>
            Gets or sets the circle margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.Thickness">
            <summary>
            Gets or sets the line thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.ThicknessValue">
            <summary>
            Gets or sets the line progress thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.AnimationInterval">
            <summary>
            Gets or sets the animation interval.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.AnimationSpeed">
            <summary>
            Gets or sets the animation speed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.ProgressAnimationSpeed">
            <summary>
            Gets or sets the progress animation speed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.SubScriptText">
            <summary>
            Gets or sets the subscript text.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.SuperScriptText">
            <summary>
            Gets or sets the superscript text.
            </summary> 
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.Font">
            <summary>
            Gets or sets the control's primary font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.SecondaryFont">
            <summary>
            Gets or sets the secondary font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.SubScriptColor">
            <summary>
            Gets or sets the subscript color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.SuperScriptColor">
            <summary>
            Gets or sets the superscript color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.ProgressColor">
            <summary>
            Gets or sets the progress color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.ProgressGradientColor">
            <summary>
            Gets or sets the progress color, 
            providing a gradient color fill.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.ProgressBackColor">
            <summary>
            Gets or sets the progress background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.ValueMargin">
            <summary>
            Gets or sets the value text margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.SuperScriptMargin">
            <summary>
            Gets or sets the superscript margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.SubScriptMargin">
            <summary>
            Gets or sets the subscript margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.CapStart">
            <summary>
            Gets or sets the rendering style 
            of the progress starting point.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.CapEnd">
            <summary>
            Gets or sets the rendering style 
            of the progress ending point.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.ValueByTransition">
            <summary>
            Gets or sets the progress value by transition (animated movement). 
            You can use the property <see cref="P:KimTools.WinForms.KtProgressRadial.ProgressAnimationSpeed"/> to change the 
            transition speed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.Text">
            <summary>
            Gets or sets the control text.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.TextMargin">
            <summary>
            Gets or sets the value text margin.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressRadial.TransitionValue(System.Int32)">
            <summary>
            Smoothly transitions the progress value 
            from one point within range to another.
            </summary>
            <param name="value">The new value to transition to.</param>
        </member>
        <member name="M:KimTools.WinForms.KtProgressRadial.TransitionValue(System.Int32,System.Int32)">
            <summary>
            Smoothly transitions the progress value 
            from one point within range to another.
            </summary>
            <param name="value">The new value to transition to.</param>
            <param name="transitionSpeed">(Optional) The transition speed in milliseconds.</param>
        </member>
        <member name="E:KimTools.WinForms.KtProgressRadial.ProgressChanged">
            <summary>
            Occurs when the progress value changes.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtProgressRadial.ProgressChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtProgressRadial.ProgressChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressRadial.ProgressChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtProgressRadial.ProgressChanged"/> event.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.ProgressChangedEventArgs.ProgressValue">
            <summary>
            Gets the current progress value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressRadial.ProgressChangedEventArgs.ProgressPercentage">
            <summary>
            Gets the current progress value as a percentage.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtProgressRadial.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressRadial.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtProgressRadial.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtProgressBar">
            <summary>
            AddBulk stylish progress bars to depict the flow of operations in your apps.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtProgressBar" /> control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.AllowAnimations">
            <summary>
            Gets or sets value indicating whether animations are 
            enabled when the progress value is changing.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.AnimationSpeed">
            <summary>
            Gets or sets the progress animation speed. 
            Use the property <see cref="P:KimTools.WinForms.KtProgressBar.ValueByTransition"/> 
            to animate the progress value's movement.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.Value">
            <summary>
            Gets or sets the progress value. Alternatively, 
            you can use the property 'ValueByTransition' 
            to animate the progress value's movement.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.Maximum">
            <summary>
            Gets or sets the maximum progress value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.Minimum">
            <summary>
            Gets or sets the minimum progress value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.BorderRadius">
            <summary>
            Gets or sets the border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.BorderThickness">
            <summary>
            Gets or sets the border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.BorderColor">
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.BackColor">
            <summary>
            Gets or sets the progress background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.ProgressColorLeft">
            <summary>
            Gets or sets the progress color to the left.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.ProgressColorRight">
            <summary>
            Gets or sets an emerging progress color to the right.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.Orientation">
            <summary>
            Gets or sets the progress bar orientation.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.ValueByTransition">
            <summary>
            Gets or sets the progress value by transition (animated movement). 
            You can use the property <see cref="P:KimTools.WinForms.KtProgressBar.AnimationSpeed"/> to change the 
            transition speed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.MaximumValue">
            <summary>
            Gets or sets the maximum progress value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.MinimumValue">
            <summary>
            Gets or sets the minimum progress value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.Animation">
            <summary>
            [Deprecated: Use <see cref="P:KimTools.WinForms.KtProgressBar.AnimationSpeed"/> instead] Gets or sets the animation interval.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.AnimationStep">
            <summary>
            Gets or sets the animation step-count.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.ProgressBackColor">
            <summary>
            Gets or sets the progress background color.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.Render">
            <summary>
            Forces the control to invalidate its client area and 
            immediately redraw itself and any child controls.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.TransitionValue(System.Int32)">
            <summary>
            Smoothly transitions the progress value 
            from one point within range to another.
            </summary>
            <param name="value">The new value to transition to.</param>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.TransitionValue(System.Int32,System.Int32)">
            <summary>
            Smoothly transitions the progress value 
            from one point within range to another.
            </summary>
            <param name="value">The new value to transition to.</param>
            <param name="transitionSpeed">(Optional) The transition speed in milliseconds.</param>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.RoundCorners(System.Drawing.Image,System.Int32,System.Drawing.Color)">
            <summary>
            Draws a rounded image.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.RoundCorners(System.Drawing.Size,System.Drawing.Image,System.Int32,System.Drawing.Color)">
            <summary>
            Draws a rounded image.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Pen,System.Drawing.Color,System.Drawing.Size,System.Boolean)">
            <summary>
            Draws the rounded rectangle.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.DrawRoundedGradientRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Pen,System.Drawing.Color,System.Drawing.Size)">
            <summary>
            Draws the rounded rectangle.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.DrawRoundedGradientImage(System.Drawing.Image,System.Drawing.Rectangle,System.Int32,System.Drawing.Pen,System.Drawing.Color)">
            <summary>
            Draws the rounded rectangle.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.RenderCanvas">
            <summary>
            Renders the canvas or drawing area.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.RenderProgressByValue(System.Int32)">
            <summary>
            Renders the progress by value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.ValueToPixel(System.Int32)">
            <summary>
            Converts a value into pixels.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.PixelToValue(System.Int32)">
            <summary>
            Converts pixels into a value.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtProgressBar.ProgressChanged">
            <summary>
            Occurs when the progress value changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtProgressBar.onValueChange">
            <summary>
            Occurs when the progress value changes.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtProgressBar.ProgressChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtProgressBar.ProgressChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.ProgressChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtProgressBar.ProgressChanged"/> event.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.ProgressChangedEventArgs.ProgressValue">
            <summary>
            Gets the current progress value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtProgressBar.ProgressChangedEventArgs.ProgressPercentage">
            <summary>
            Gets the current progress value as a percentage.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtProgressBar.BunifuControlDesignerActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtProgressBar.BunifuControlDesignerActionList"/> class.
            </summary>
            <seealso cref="T:Microsoft.DotNet.DesignTools.Designers.Actions.DesignerActionList" />
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.BunifuControlDesignerActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtProgressBar.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtProgressBar.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtRadioBox">
            <summary>
            AddBulk stylish radio buttons with intuitive 
            customization options and design features.
            </summary>
            <seealso cref="T:System.Windows.Forms.Control" />
        </member>
        <member name="M:KimTools.WinForms.KtRadioBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtRadioBox"/> class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtRadioBox.BindingControlPositions">
            <summary>
            Specifies the bound control's position in 
            relation to the control attached to it.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtRadioBox.BindingControlPositions.Left">
            <summary>
            Positions the control to the left.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtRadioBox.BindingControlPositions.Right">
            <summary>
            Positions the control to the right.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.Checked">
            <summary>
            Gets or sets a value indicating whether the radio is checked.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.AllowBindingControlLocation">
            <summary>
            Gets or sets a value indicating whether the control will allow the 
            bound control's location to be positioned based on it's own location.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.RadioColor">
            <summary>
            Gets or sets the radio color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.RadioColorTabFocused">
            <summary>
            Gets or sets the radio color on focus.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.OutlineColorUnchecked">
            <summary>
            Gets or sets the radio's outline color when unchecked.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.OutlineColorTabFocused">
            <summary>
            Gets or sets the radio's outline color when focused.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.OutlineColor">
            <summary>
            Gets or sets the outline color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.BorderThickness">
            <summary>
            Gets or sets the outline's border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.BindingControl">
            <summary>
            Gets or sets the control to bind directly with; this in 
            most cases is a Label. This setting also binds with the 
            most appropriate events to the control selected.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.BindingControlPosition">
            <summary>
            Gets or sets the position of the bound 
            control in relation to the radio button.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.Text">
            <summary>
            Gets or sets the text associated with this control.
            </summary>
            <value>The text.</value>
        </member>
        <member name="E:KimTools.WinForms.KtRadioBox.CheckedChanged">
            <summary>
            Occurs when the <see cref="P:KimTools.WinForms.KtRadioBox.Checked"/> property is changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtRadioBox.CheckedChanged2">
            <summary>
            Occurs when the <see cref="P:KimTools.WinForms.KtRadioBox.Checked"/> property is changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtRadioBox.BindingControlChanged">
            <summary>
            Occurs whenever the bound control has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtRadioBox.BindingControlPositionChanged">
            <summary>
            Occurs whenever the bound control's position has been changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtRadioBox.CheckedChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtRadioBox.CheckedChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRadioBox.CheckedChangedEventArgs.#ctor(System.Boolean)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtRadioBox.CheckedChanged"/> event.
            </summary>
            <param name="isChecked">
            Set the checked value to true/false.
            </param>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.CheckedChangedEventArgs.Checked">
            <summary>
            Gets a value indicating whether the control is checked.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtRadioBox.BindingControlChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtRadioBox.BindingControlChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRadioBox.BindingControlChangedEventArgs.#ctor(System.Windows.Forms.Control)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtRadioBox.BindingControlChanged"/> event.
            </summary>
            <param name="currentlyBoundControl">The currently bound control.</param>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.BindingControlChangedEventArgs.Control">
            <summary>
            Gets the control that is currently bound.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtRadioBox.PositionChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtRadioBox.BindingControlPositionChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRadioBox.PositionChangedEventArgs.#ctor(KimTools.WinForms.KtRadioBox.BindingControlPositions)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtRadioBox.BindingControlPositionChanged"/> event.
            </summary>
            <param name="currentControlPosition">The currently set control's position.</param>
        </member>
        <member name="P:KimTools.WinForms.KtRadioBox.PositionChangedEventArgs.BindingControlPosition">
            <summary>
            Gets the current position of the bound control.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRadioBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the <see cref="E:Paint" /> event.
            </summary>
            <param name="pe">
            The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.
            </param>
        </member>
        <member name="T:KimTools.WinForms.KtRadioBox.BunifuRadioButtonActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtRadioBox.BunifuRadioButtonActionList"/> class.
            </summary>
            <seealso cref="T:Microsoft.DotNet.DesignTools.Designers.Actions.DesignerActionList" />
        </member>
        <member name="M:KimTools.WinForms.KtRadioBox.BunifuRadioButtonActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtRadioBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRadioBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtRadioBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtRating">
            <summary>
            AddBulk awesome rating inputs with tons of 
            customization options and UI enhancements.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRating.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:KimTools.WinForms.KtRating"/> control.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtRating.RatingShapes">
            <summary>
            Provides a list of supported rating shapes.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtRating.RatingShapes.Star">
            <summary>
            Represents a star shape.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtRating.RatingShapes.Circle">
            <summary>
            Represents a circular shape.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtRating.RatingShapes.Square">
            <summary>
            Represents a square shape.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.ReadOnly">
            <summary>
            Gets or sets a value indicating whether 
            the rating is in read-only mode.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.RightClickToClear">
            <summary>
            Gets or sets a value indicating whether 
            the rating will be cleared after right-clicking it.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.Value">
            <summary>
            Gets or sets the current rating value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.Maximum">
            <summary>
            Gets or sets the maximum rating count.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.OuterRadius">
            <summary>
            Gets or sets the rating's shape radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.InnerRadius">
            <summary>
            Gets or sets the inner radius of the star shape.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.Spacing">
            <summary>
            Gets or sets the spacing between rating shapes.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.BorderThickness">
            <summary>
            Gets or sets the border thickness of rating shapes.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.Shape">
            <summary>
            Gets or sets the rating shape style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.DisabledEmptyFillColor">
            <summary>
            Gets or sets the fill color of 
            unrated shapes when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.DisabledRatedFillColor">
            <summary>
            Gets or sets the fill color of 
            rated shapes when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.EmptyFillColor">
            <summary>
            Gets or sets the fill color of unrated shapes.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.EmptyBorderColor">
            <summary>
            Gets or sets the border color of unrated shapes.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.HoverFillColor">
            <summary>
            Gets or sets the fill color of 
            rating shapes on hover.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.HoverBorderColor">
            <summary>
            Gets or sets the border color 
            of rating shapes on hover.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.RatedFillColor">
            <summary>
            Gets or sets the fill color of rated shapes.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.RatedBorderColor">
            <summary>
            Gets or sets the border color of the rated shapes.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRating.Clear">
            <summary>
            Clears the current rating.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRating.Reset">
            <summary>
            Resets the current rating.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRating.ResizeControl">
            <summary>
            Resizes the ratings within their drawing surface.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtRating.ValueChanged">
            <summary>
            Occurs when the rating value has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtRating.ValueHovered">
            <summary>
            Occurs when a rating value has been hovered onto.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtRating.ValueHoveredEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtRating.ValueHovered"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRating.ValueHoveredEventArgs.#ctor(System.Boolean,System.Int32,System.Int32,System.Int32,System.Drawing.Point)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtRating.ValueHovered"/> event.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.ValueHoveredEventArgs.Focused">
            <summary>
            Gets a value indicating whether 
            the rating has mouse input focus.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.ValueHoveredEventArgs.Maximum">
            <summary>
            Gets the maximum rating selectable.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.ValueHoveredEventArgs.CurrentValue">
            <summary>
            Gets the current rating value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.ValueHoveredEventArgs.HoveredValue">
            <summary>
            Gets the hovered onto rating value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.ValueHoveredEventArgs.Position">
            <summary>
            Gets the hovered rating position.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtRating.ValueChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtRating.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRating.ValueChangedEventArgs.#ctor(System.Int32,System.Int32)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtRating.ValueChanged"/> event.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.ValueChangedEventArgs.Maximum">
            <summary>
            Gets the maximum rating selectable.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtRating.ValueChangedEventArgs.Value">
            <summary>
            Gets the applied rating value.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRating.BunifuRatingActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtRating.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtRating.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar">
            <summary>
            Provides enhanced vertical content-scrolling capabilities and extended customization options at design time.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtScrollbar"/> control class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.ArrowType">
            <summary>
            Provides a list of arrow-types for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.ArrowType.TopArrow">
            <summary>
            Specifies the Up or Top arrow.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.ArrowType.BottomArrow">
            <summary>
            Specifies the Down or Bottom arrow.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.ArrowStyle">
            <summary>
            Provides a list of arrow-styles for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.ArrowStyle.Line">
            <summary>
            Specifies a line-style arrow.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.ArrowStyle.Fill">
            <summary>
            Specifies a fill-style arrow.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.EffectType">
            <summary>
            Provides a set of states that can be specified for the control's mouse-effect transitions.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.EffectType.OnEnter">
            <summary>
            Specifies the MouseEnter event-state effect.
            Note: The "MouseHover" event is called each time 
            scrolling occurs and thus is not advisable to use.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.EffectType.OnPress">
            <summary>
            Specifies the MouseDown event-state effect.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.EffectType.OnLeave">
            <summary>
            Specifies the MouseLeave event-state effect.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.ThumbStyles">
            <summary>
            Provides options for choosing the thumb's style within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.ThumbStyles.Inset">
            <summary>
            Adjusts the thumb's position to appear within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.ThumbStyles.Proportional">
            <summary>
            Adjusts the thumb's position to appear in the same size as the ScrollBar.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.Direction">
            <summary>
            Provides a list of the thumb's directional movements within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.Direction.Top">
            <summary>
            Returns if the thumb is moving towards the top of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.Direction.Bottom">
            <summary>
            Returns if the thumb is moving towards the bottom of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.Direction.InCursor">
            <summary>
            Returns if the thumb is has reached the cursor's current position.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.ScrollBarVisualStyles">
            <summary>
            Provides visual style options for customizing the 
            look and feel of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.ScrollBarVisualStyles.ScrollBar">
            <summary>
            Switches the ScrollBar to its default style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.ScrollBarVisualStyles.Slider">
            <summary>
            Switches the ScrollBar to visually mimic a slider.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.DrawModes">
            <summary>
            Provides rendering options used whenever elements
            are being drawn within a control's surface.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.DrawModes.Fill">
            <summary>
            Draws an element filling its entire
            surface with its primary color.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.DrawModes.Outline">
            <summary>
            Draws an element in outline form, 
            leaving its inner surface either 
            color-filled or transparent.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.OnDisable">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.Orientation">
            <summary>
            Gets the orientation of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.BindingContainer">
            <summary>
            Gets or sets the container-control attached with the ScrollBar.
            The container control needs to be a <see cref="T:System.Windows.Forms.ScrollableControl"/> 
            or a <see cref="T:System.Windows.Forms.DataGridView"/> for it to be attached.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.Value">
            <summary>
            Gets or sets the thumb's value or position in the ScrollBar.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the value set is outside appropriate range, that is, between the Minimum and Maximum set values.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.Maximum">
            <summary>
            Gets or sets the ScrollBar's minimum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Minimum property value is greater than the Maximum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.Minimum">
            <summary>
            Gets or sets the ScrollBar's maximum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Maximum property value is greater than the Minimum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.SmallChange">
            <summary>
            Gets or sets the amount by which the thumb's value 
            changes when the user presses an arrow key.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.LargeChange">
            <summary>
             Gets or sets the amount by which the thumb's value 
             changes when the user clicks in the scroll bar or 
             presses the PageUp or PageDown keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.BorderRadius">
            <summary>
            [Experimental] Gets or sets the border  
            radius of the ScrollBar and the thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.BorderThickness">
            <summary>
            Gets or sets the border-thickness of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ThumbStyle">
            <summary>
             Gets or sets the thumb's style in relation to the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ThumbLength">
            <summary>
            Gets or sets the length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ThumbMargin">
            <summary>
            Gets or sets the distance between the thumb and the ScrollBar's edges.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.MinimumThumbLength">
            <summary>
            Gets or sets the minimum length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.DurationBeforeShrink">
            <summary>
            Gets or sets the duration the ScrollBar will 
            wait before it shrinks back when inactive.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ShrinkSizeLimit">
            <summary>
            Gets or sets the shrink-size limit 
            of the ScrollBar when focus is lost.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.AllowShrinkingOnFocusLost">
            <summary>
            Gets or sets a value indicating whether the ScrollBar 
            will automatically shrink when focus is lost.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.AllowCursorChanges">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will 
             allow changes to the cursor during the thumb's movement.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.AllowScrollOptionsMenu">
            <summary>
            Gets or sets a value indicating whether the 
            ScrollBar will allow displaying of the scroll 
            options menu on right-clicking it.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.AllowScrollKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will 
             allow detection of the standard scroll navigation keys which 
             include the Up/Down arrow keys and the Page-up/Page-down keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.AllowScrollingAnimations">
            <summary>
             Gets or sets a value indicating whether the ScrollBar  
             will allow animations whenever the thumb is moved.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.AllowHomeEndKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will 
             allow detection of the Home/End special navigation keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.AllowIncrementalClickMoves">
            <summary>
             Gets or sets a value indicating whether the ScrollBar 
             will allow incremental thumb movements whenever 
             the scrolling region is clicked at any one point.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.AllowMouseDownEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar 
             will allow mouse-down effects when active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.AllowMouseHoverEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar 
             will allow mouse-hover effects when active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ScrollOptionsMenuVisible">
            <summary>
            Gets a value indicating whether the ScrollBar's 
            options menu is currently visible.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.BackgroundColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.BorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ScrollBarRectangle">
            <summary>
            Gets the ScrollBar's enclosing rectangle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.CreateParams">
            <summary>
            Overrides the CreateParams method to stop flickering issues 
            by setting the "WS_EX_COMPOSITED" (0x02000000) style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.VisualStyle">
            <summary>
            Gets or sets a preset visual style to be applied in the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ThumbBorderThickness">
            <summary>
            Gets or sets the thumb's border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ThumbBorderColor">
            <summary>
            Gets or sets the thumb's border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ThumbDrawMode">
            <summary>
            Gets or sets the thumb's default draw-mode.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtScrollbar.ValueChanged">
            <summary>
            Occurs whenever the Value property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtScrollbar.Scroll">
            <summary>
            Occurs whenever the Scroll event has been raised.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtScrollbar.MouseCaptureChanged">
            <summary>
            Occurs after the mouse capture is changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.ValueChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtScrollbar.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.ValueChangedEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtScrollbar.ValueChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ValueChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.MouseCaptureChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtScrollbar.MouseCaptureChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.MouseCaptureChangedEventArgs.#ctor(System.Int32,KimTools.WinForms.KtScrollbar.Direction)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtScrollbar.MouseCaptureChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.MouseCaptureChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.MouseCaptureChangedEventArgs.ThumbDirection">
            <summary>
            Gets the thumb's directional movement.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.ScrollEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtScrollbar.Scroll"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.ScrollEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="!:KtScrollbar.ScrollChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ScrollEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Allows for the processing of the assigned movement keys to the ScrollBar when active.
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.Refresh">
            <summary>
            Redraws the control's surface.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.BindTo(System.Windows.Forms.Control)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/> 
            to attach to.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.BindTo(System.Windows.Forms.ScrollableControl)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/>.
            </summary>
            <param name="scrollableControl">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> to attach to.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.BindTo(System.Windows.Forms.DataGridView,System.Boolean)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="dataGridView">
            The <see cref="T:System.Windows.Forms.DataGridView"/> to attach to.
            </param>
            <param name="allowSelection">
            Allow cell-selections when scrolling?
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.DrawScrollBar">
            <summary>
            Draws the ScrollBar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.DrawThumb(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's thumb.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="thumbPen">The pen used to draw the thumb.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the thumb.</param>
            <param name="height">The thumb's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.DrawTopArrow(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws the ScrollBar's top arrow.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="arrowPen">The pen used to draw the arrow.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the arrow.</param>
            <param name="height">The arrow's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,KimTools.WinForms.KtScrollbar.ArrowType,KimTools.WinForms.KtScrollbar.ArrowStyle,System.Drawing.Color)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name="g">The Graphics object.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="type">The type of arrow to be drawn.</param>
            <param name="style">The style of arrow to be rendered.</param>
            <param name="arrowColor">The arrow color to apply.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.DrawArrow(System.Drawing.Graphics@,System.Drawing.Pen,KimTools.WinForms.KtScrollbar.ArrowType,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name = "graphics" > The Graphics canvas.</param>
            <param name = "arrowPen" > The pen used to draw the graphics surface.</param>
            <param name = "type" > The type of arrow to be drawn - either top or bottom.</param>
            <param name = "controlRectangle" > The rectangle surface on which to draw the graphics.</param>
            <param name = "thickness" > The thickness of the arrow.</param>
            <param name = "width" > The arrow's width.</param>
            <param name = "height" > The arrow's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.DrawRoundedRectangle(System.Drawing.RectangleF,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws a rectangle in the indicated Rectangle rounding the indicated corners.
            </summary>
            <param name="rect"></param>
            <param name="xradius"></param>
            <param name="yradius"></param>
            <param name="round_ul"></param>
            <param name="round_ur"></param>
            <param name="round_lr"></param>
            <param name="round_ll"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.DrawLayout(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Creates the control's container layout.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="Bounds">The canvas rectangle-bounds.</param>
            <param name="radius">The canvas corner-radius.</param>
            <param name="pen">The pen used to draw objects inside the canvas.</param>
            <param name="backColor">The layout's background color.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.HandleMouseCapture(System.Boolean)">
            <summary>
            Handles mouse-capture events in the ScrollBar.
            </summary>
            <param name="isInTimerMode">Prevents attaching multiple events when moving the thumb through the Timer when set to "true".</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.BindToContainerControl">
            <summary>
            Automatically binds the attached container-control
            or DataGridView at runtime.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.IsControlScrollBindable(System.Windows.Forms.Control)">
            <summary>
            Determines if a certain control can 
            be bound-up with Tailwind Scrollbars.
            </summary>
            <param name="control">The control to determine.</param>
            <returns>True if scroll-bindable, or False if not scroll-bindable.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.DebugString(System.String)">
            <summary>
            Allows you to view the value of a parameter or object value from the parent form's "Html" caption.
            </summary>
            <param name="value">The value (in <see cref="T:System.String"/> format) to be printed.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.BeginThumbMovement(System.Int32)">
            <summary>
            Begins moving the thumb using the Timer from the "MouseDown" event.
            </summary>
            <param name="movementIntervals">The timer intervals to skip before the thumb moves again.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.EndThumbMovement">
            <summary>
            Resets the duration set and then ends the thumb's movement in the 
            Timer from the "MouseUp" event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.AutoGrowScrollBar">
            <summary>
            Adjusts the ScrollBar's size when inactive. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.AutoShrinkScrollBar">
            <summary>
            Adjusts the ScrollBar's size when active. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.Shrink(System.Object)">
            <summary>
            [Asynchronous] Called by the method <see cref="M:KimTools.WinForms.KtScrollbar.AutoShrinkScrollBar"/> to shrink the ScrollBar.
            </summary>
            <param name="stateInfo">May be used to represent the state of the ScrollBar.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.MoveThumb(System.Int32,System.Boolean)">
            <summary>
            Moves the thumb to a specified position.
            </summary>
            <param name="to">The new thumb's position.</param>
            <param name="allowTransition">Enable/disable the thumb's transition.
            Disabling the animation is important when handling on-demand thumb-change scenarios.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.PerformMouseEffect(KimTools.WinForms.KtScrollbar.EffectType)">
            <summary>
            Performs a directed mouse effect to the control.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.SetThumbLength">
            <summary>
            Sets the appropriate length of the thumb.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.SetThumbLength(System.Int32)">
            <summary>
            Sets the appropriate length of the thumb.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.SetScrollBounds">
            <summary>
            Applies the standard scroll values responsible for setting the bounds of the ScrollBar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.IsPointInRect(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Determines whether rectangle contains given point.
            </summary>
            <param name="pt">The point to test.</param>
            <param name="rect">The base rectangle.</param>
            <returns>
            	<c>true</c> if rectangle contains given point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.IsMouseInThumb(System.Boolean)">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <param name="applyUniqueCheck">Applies a unique check whereby anywhere within the thumb's region is used instead of the thumb's rectangle region.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.IsMouseInScrollBar">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.ConvertRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts the ScrollBar's size dimensions to the user-specified range dimensions.
            </summary>
            <param name="originalStart">The original starting point.</param>
            <param name="originalEnd">The original ending point.</param>
            <param name="newStart">The new starting point in the user-specified range.</param>
            <param name="newEnd">The new ending point in the user-specified range.</param>
            <param name="value">The value to be set within the range.</param>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.BunifuVScrollBarActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtScrollbar.BunifuVScrollBarActionList"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.BunifuVScrollBarActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbar.ScrollBarState">
            <summary>
            An abstract class used to define various states within Tailwind ScrollBars.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.ScrollBarState.#ctor(System.String)">
            <summary>
            Creates a new Tailwind ScrollBar state.
            </summary>
            <param name="name">Provide a name for the state. This can be used to track the state once initialized.</param>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ScrollBarState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ScrollBarState.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ScrollBarState.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbar.ScrollBarState.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.ScrollBarState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:KimTools.WinForms.KtScrollbar.ScrollBarState.ScrollBarBorderColor"/>, <see cref="P:KimTools.WinForms.KtScrollbar.ScrollBarState.ScrollBarColor"/>, 
            <see cref="P:KimTools.WinForms.KtScrollbar.ScrollBarState.ThumbColor"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbar.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbar.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH">
            <summary>
            Provides enhanced vertical content-scrolling capabilities and extended customization options at design time.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtScrollbarH"/> control class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.ArrowType">
            <summary>
            Provides a list of arrow-types for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.ArrowType.TopArrow">
            <summary>
            Specifies the Up or Top arrow.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.ArrowType.BottomArrow">
            <summary>
            Specifies the Down or Bottom arrow.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.ArrowStyle">
            <summary>
            Provides a list of arrow-styles for rendering in the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.ArrowStyle.Line">
            <summary>
            Specifies a line-style arrow.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.ArrowStyle.Fill">
            <summary>
            Specifies a fill-style arrow.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.EffectType">
            <summary>
            Provides a set of states that can be specified for the control's mouse-effect transitions.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.EffectType.OnEnter">
            <summary>
            Specifies the MouseEnter event-state effect.
            Note: The "MouseHover" event is called each time 
            scrolling occurs and thus is not advisable to use.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.EffectType.OnPress">
            <summary>
            Specifies the MouseDown event-state effect.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.EffectType.OnLeave">
            <summary>
            Specifies the MouseLeave event-state effect.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.ThumbStyles">
            <summary>
            Provides options for choosing the thumb's style within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.ThumbStyles.Inset">
            <summary>
            Adjusts the thumb's position to appear within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.ThumbStyles.Proportional">
            <summary>
            Adjusts the thumb's position to appear in the same size as the ScrollBar.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.Direction">
            <summary>
            Provides a list of the thumb's directional movements within the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.Direction.Left">
            <summary>
            Returns if the thumb is moving towards the left of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.Direction.Right">
            <summary>
            Returns if the thumb is moving towards the right of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.Direction.InCursor">
            <summary>
            Returns if the thumb is has reached the cursor's current position.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.ScrollBarVisualStyles">
            <summary>
            Provides visual style options for customizing the 
            look and feel of the ScrollBar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.ScrollBarVisualStyles.ScrollBar">
            <summary>
            Switches the ScrollBar to its default style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.ScrollBarVisualStyles.Slider">
            <summary>
            Switches the ScrollBar to visually mimic a slider.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.DrawModes">
            <summary>
            Provides rendering options used whenever elements
            are being drawn within a control's surface.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.DrawModes.Fill">
            <summary>
            Draws an element filling its entire
            surface with its primary color.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.DrawModes.Outline">
            <summary>
            Draws an element in outline form, 
            leaving its inner surface either 
            color-filled or transparent.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.OnDisable">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.Orientation">
            <summary>
            Gets the orientation of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.BindingContainer">
            <summary>
            Gets or sets the container-control attached with the ScrollBar.
            The container control needs to be a <see cref="T:System.Windows.Forms.ScrollableControl"/> 
            or a <see cref="T:System.Windows.Forms.DataGridView"/> for it to be attached.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.Value">
            <summary>
            Gets or sets the thumb's value or position in the ScrollBar.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the value set is outside appropriate range, that is, between the Minimum and Maximum set values.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.Maximum">
            <summary>
            Gets or sets the ScrollBar's minimum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Minimum property value is greater than the Maximum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.Minimum">
            <summary>
            Gets or sets the ScrollBar's maximum scrollable range.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException"> exception is thrown when the Maximum property value is greater than the Minimum property value.</exception>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.SmallChange">
            <summary>
            Gets or sets the amount by which the thumb's value 
            changes when the user presses an arrow key.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.LargeChange">
            <summary>
             Gets or sets the amount by which the thumb's value 
             changes when the user clicks in the scroll bar or 
             presses the PageUp or PageDown keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.BorderRadius">
            <summary>
            [Experimental] Gets or sets the border  
            radius of the ScrollBar and the thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.BorderThickness">
            <summary>
            Gets or sets the border-thickness of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ThumbStyle">
            <summary>
             Gets or sets the thumb's style in relation to the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ThumbLength">
            <summary>
            Gets or sets the length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ThumbMargin">
            <summary>
            Gets or sets the distance between the thumb and the ScrollBar's edges.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.MinimumThumbLength">
            <summary>
            Gets or sets the minimum length of the ScrollBar's thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.DurationBeforeShrink">
            <summary>
            Gets or sets the duration the ScrollBar will 
            wait before it shrinks back when inactive.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ShrinkSizeLimit">
            <summary>
            Gets or sets the shrink-size limit 
            of the ScrollBar when focus is lost.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.AllowShrinkingOnFocusLost">
            <summary>
            Gets or sets a value indicating whether the ScrollBar 
            will automatically shrink when focus is lost.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.AllowCursorChanges">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will 
             allow changes to the cursor during the thumb's movement.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.AllowScrollOptionsMenu">
            <summary>
            Gets or sets a value indicating whether the 
            ScrollBar will allow displaying of the scroll 
            options menu on right-clicking it.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.AllowScrollKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will 
             allow detection of the standard scroll navigation keys which 
             include the Up/Down arrow keys and the Page-up/Page-down keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.AllowScrollingAnimations">
            <summary>
             Gets or sets a value indicating whether the ScrollBar  
             will allow animations whenever the thumb is moved.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.AllowHomeEndKeysDetection">
            <summary>
             Gets or sets a value indicating whether the ScrollBar will 
             allow detection of the Home/End special navigation keys.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.AllowIncrementalClickMoves">
            <summary>
             Gets or sets a value indicating whether the ScrollBar 
             will allow incremental thumb movements whenever 
             the scrolling region is clicked at any one point.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.AllowMouseDownEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar 
             will allow mouse-down effects when active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.AllowMouseHoverEffects">
            <summary>
             Gets or sets a value indicating whether the ScrollBar 
             will allow mouse-hover effects when active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ScrollOptionsMenuVisible">
            <summary>
            Gets a value indicating whether the ScrollBar's 
            options menu is currently visible.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.BackgoundColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.BorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ScrollBarRectangle">
            <summary>
            Gets the ScrollBar's enclosing rectangle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.CreateParams">
            <summary>
            Overrides the CreateParams method to stop flickering issues 
            by setting the "WS_EX_COMPOSITED" (0x02000000) style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.VisualStyle">
            <summary>
            Gets or sets a preset visual style to be applied in the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ThumbBorderThickness">
            <summary>
            Gets or sets the thumb's border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ThumbBorderColor">
            <summary>
            Gets or sets the thumb's border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ThumbDrawMode">
            <summary>
            Gets or sets the thumb's default draw-mode.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtScrollbarH.ValueChanged">
            <summary>
            Occurs whenever the Value property has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtScrollbarH.Scroll">
            <summary>
            Occurs whenever the Scroll event has been raised.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtScrollbarH.MouseCaptureChanged">
            <summary>
            Occurs after the mouse capture is changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.ValueChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtScrollbarH.ValueChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.ValueChangedEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtScrollbarH.ValueChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ValueChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.MouseCaptureChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtScrollbarH.MouseCaptureChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.MouseCaptureChangedEventArgs.#ctor(System.Int32,KimTools.WinForms.KtScrollbarH.Direction)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtScrollbarH.MouseCaptureChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.MouseCaptureChangedEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.MouseCaptureChangedEventArgs.ThumbDirection">
            <summary>
            Gets the thumb's directional movement.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.ScrollEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtScrollbarH.Scroll"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.ScrollEventArgs.#ctor(System.Int32)">
            <summary>
            Provides data for the <see cref="!:KtScrollbarH.ScrollChanged"/> event.
            </summary>
            <param name="value">The newly set ScrollBar value.</param>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ScrollEventArgs.Value">
            <summary>
            Gets the new ScrollBar value.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Allows for the processing of the assigned movement keys to the ScrollBar when active.
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.Refresh">
            <summary>
            Redraws the control's surface.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.BindTo(System.Windows.Forms.Control)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> or <see cref="T:System.Windows.Forms.DataGridView"/> 
            to attach to.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.BindTo(System.Windows.Forms.ScrollableControl)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.ScrollableControl"/>.
            </summary>
            <param name="scrollableControl">
            The <see cref="T:System.Windows.Forms.ScrollableControl"/> to attach to.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.BindTo(System.Windows.Forms.DataGridView,System.Boolean)">
            <summary>
            Binds or attaches the ScrollBar to the scroll events of any
            <see cref="T:System.Windows.Forms.DataGridView"/>.
            </summary>
            <param name="dataGridView">
            The <see cref="T:System.Windows.Forms.DataGridView"/> to attach to.
            </param>
            <param name="allowSelection">
            Allow cell-selections when scrolling?
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.DrawScrollBar">
            <summary>
            Draws the ScrollBar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.DrawThumb(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's thumb.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="thumbPen">The pen used to draw the thumb.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the thumb.</param>
            <param name="height">The thumb's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.DrawTopArrow(System.Drawing.Graphics@,System.Drawing.Pen,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Draws the ScrollBar's top arrow.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="arrowPen">The pen used to draw the arrow.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="thickness">The thickness of the arrow.</param>
            <param name="height">The arrow's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.DrawArrow(System.Drawing.Graphics,System.Drawing.Rectangle,KimTools.WinForms.KtScrollbarH.ArrowType,KimTools.WinForms.KtScrollbarH.ArrowStyle,System.Drawing.Color)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name="g">The Graphics object.</param>
            <param name="controlRectangle">The rectangle surface on which to draw the graphics.</param>
            <param name="type">The type of arrow to be drawn.</param>
            <param name="style">The style of arrow to be rendered.</param>
            <param name="arrowColor">The arrow color to apply.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.DrawArrow(System.Drawing.Graphics@,System.Drawing.Pen,KimTools.WinForms.KtScrollbarH.ArrowType,System.Drawing.Rectangle,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws the ScrollBar's arrows.
            </summary>
            <param name = "graphics" > The Graphics canvas.</param>
            <param name = "arrowPen" > The pen used to draw the graphics surface.</param>
            <param name = "type" > The type of arrow to be drawn - either top or bottom.</param>
            <param name = "controlRectangle" > The rectangle surface on which to draw the graphics.</param>
            <param name = "thickness" > The thickness of the arrow.</param>
            <param name = "width" > The arrow's width.</param>
            <param name = "height" > The arrow's height.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.DrawRoundedRectangle(System.Drawing.RectangleF,System.Single,System.Single,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Draws a rectangle in the indicated Rectangle rounding the indicated corners.
            </summary>
            <param name="rect"></param>
            <param name="xradius"></param>
            <param name="yradius"></param>
            <param name="round_ul"></param>
            <param name="round_ur"></param>
            <param name="round_lr"></param>
            <param name="round_ll"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.DrawLayout(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32)">
            <summary>
            Creates the control's container layout.
            </summary>
            <param name="graphics">The Graphics canvas.</param>
            <param name="Bounds">The canvas rectangle-bounds.</param>
            <param name="radius">The canvas corner-radius.</param>
            <param name="pen">The pen used to draw objects inside the canvas.</param>
            <param name="backColor">The layout's background color.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.HandleMouseCapture(System.Boolean)">
            <summary>
            Handles mouse-capture events in the ScrollBar.
            </summary>
            <param name="isInTimerMode">Prevents attaching multiple events when moving the thumb through the Timer when set to "true".</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.BindToContainerControl">
            <summary>
            Automatically binds the attached container-control
            or DataGridView at runtime.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.IsControlScrollBindable(System.Windows.Forms.Control)">
            <summary>
            Determines if a certain control can 
            be bound-up with Tailwind Scrollbars.
            </summary>
            <param name="control">The control to determine.</param>
            <returns>True if scroll-bindable, or False if not scroll-bindable.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.IsInDesignMode">
            <summary>
            Determines whether the hosting process is in design-mode.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.DebugString(System.String)">
            <summary>
            Allows you to view the value of a parameter or object value from the parent form's "Html" caption.
            </summary>
            <param name="value">The value (in <see cref="T:System.String"/> format) to be printed.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.BeginThumbMovement(System.Int32)">
            <summary>
            Begins moving the thumb using the Timer from the "MouseDown" event.
            </summary>
            <param name="movementIntervals">The timer intervals to skip before the thumb moves again.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.EndThumbMovement">
            <summary>
            Resets the duration set and then ends the thumb's movement in the 
            Timer from the "MouseUp" event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.AutoGrowScrollBar">
            <summary>
            Adjusts the ScrollBar's size when inactive. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.AutoShrinkScrollBar">
            <summary>
            Adjusts the ScrollBar's size when active. 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.Shrink(System.Object)">
            <summary>
            [Asynchronous] Called by the method <see cref="M:KimTools.WinForms.KtScrollbarH.AutoShrinkScrollBar"/> to shrink the ScrollBar.
            </summary>
            <param name="stateInfo">May be used to represent the state of the ScrollBar.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.MoveThumb(System.Int32,System.Boolean)">
            <summary>
            Moves the thumb to a specified position.
            </summary>
            <param name="to">The new thumb's position.</param>
            <param name="allowTransition">Enable/disable the thumb's transition.
            Disabling the animation is important when handling on-demand thumb-change scenarios.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.MoveValue(System.Int32)">
            <summary>
            Moves any value to a newly specified position.
            </summary>
            <param name="to">The new value.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.PerformMouseEffect(KimTools.WinForms.KtScrollbarH.EffectType)">
            <summary>
            Performs a directed mouse effect to the control.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.SetThumbLength">
            <summary>
            Sets the appropriate length of the thumb.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.SetScrollBounds">
            <summary>
            Applies the standard scroll values responsible for setting the bounds of the ScrollBar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.IsPointInRect(System.Drawing.Point,System.Drawing.Rectangle)">
            <summary>
            Determines whether rectangle contains given point.
            </summary>
            <param name="pt">The point to test.</param>
            <param name="rect">The base rectangle.</param>
            <returns>
            	<c>true</c> if rectangle contains given point; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.IsMouseInThumb(System.Boolean)">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <param name="applyUniqueCheck">Applies a unique check whereby anywhere within the thumb's region is used instead of the thumb's rectangle region.</param>
            <returns>true/false</returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.IsMouseInScrollBar">
            <summary>
            Determines whether the mouse in within the thumb's region.
            </summary>
            <returns>true/false</returns>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.ConvertRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Converts the ScrollBar's size dimensions to the user-specified range dimensions.
            </summary>
            <param name="originalStart">The original starting point.</param>
            <param name="originalEnd">The original ending point.</param>
            <param name="newStart">The new starting point in the user-specified range.</param>
            <param name="newEnd">The new ending point in the user-specified range.</param>
            <param name="value">The value to be set within the range.</param>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.ScrollBarState">
            <summary>
            An abstract class used to define various states within Tailwind ScrollBars.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.ScrollBarState.#ctor(System.String)">
            <summary>
            Creates a new Tailwind ScrollBar state.
            </summary>
            <param name="name">Provide a name for the state. This can be used to track the state once initialized.</param>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ScrollBarState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ScrollBarState.ScrollBarColor">
            <summary>
             Gets or sets the background color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ScrollBarState.ScrollBarBorderColor">
            <summary>
             Gets or sets the border color of the ScrollBar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtScrollbarH.ScrollBarState.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.ScrollBarState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:KimTools.WinForms.KtScrollbarH.ScrollBarState.ScrollBarBorderColor"/>, <see cref="P:KimTools.WinForms.KtScrollbarH.ScrollBarState.ScrollBarColor"/>, 
            <see cref="P:KimTools.WinForms.KtScrollbarH.ScrollBarState.ThumbColor"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="T:KimTools.WinForms.KtScrollbarH.BunifuHScrollBarActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtScrollbarH.BunifuHScrollBarActionList"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.BunifuHScrollBarActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtScrollbarH.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtScrollbarH.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtComboBox">
            <summary>
            Bring style and elegance to your item selections with Tailwind Dropdown.
            </summary>
            <seealso cref="T:System.Windows.Forms.ComboBox" />
        </member>
        <member name="M:KimTools.WinForms.KtComboBox.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtComboBox" /> class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtComboBox.Directions">
            <summary>
            Provides the directional options for the dropdown indicator.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.Directions.Up">
            <summary>
            Displays indicator upward.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.Directions.Down">
            <summary>
            Displays indicator downward.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtComboBox.Indicator">
            <summary>
            Provides various positions for the dropdown indicator. 
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.Indicator.Left">
            <summary>
            Left position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.Indicator.Right">
            <summary>
            Right position.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.Indicator.None">
            <summary>
            No position (defaults to center).
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtComboBox.TextAlign">
            <summary>
            Provides various text alignment options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.TextAlign.Left">
            <summary>
            Left aligned.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.TextAlign.Right">
            <summary>
            Right aligned.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.TextAlign.Center">
            <summary>
            Center aligned.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtComboBox.BorderThickness">
            <summary>
            Provides the standard thickness options supported.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.BorderThickness.Thick">
            <summary>
            Represents a thick border.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.BorderThickness.Thin">
            <summary>
            Represents a thin border.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.Enabled">
            <summary>
            Gets or sets a value indicating whether the control can respond to user interaction.
            </summary>
            <value><c>true</c> if enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.FillIndicator">
            <summary>
            Gets or sets a value inidicating whether 
            the indicator will be filled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.ItemHeight">
            <summary>
            Gets or sets the dropdown's height.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.BorderRadius">
            <summary>
            Gets or sets the dropdown's border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.TextLeftMargin">
            <summary>
            Gets or sets the margin between the 
            dropdown's text and its borders.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.ItemTopMargin">
            <summary>
            Gets or sets the margin between each 
            dropdown's item and the items container.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.Height">
            <summary>
            Gets or sets the dropdown's item height.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.Width">
            <summary>
            Gets or sets the dropdown's item width.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.Text">
            <summary>
            Gets or sets the dropdown's text.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.IndicatorColor">
            <summary>
            Gets or sets the indicator color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.ItemForeColor">
            <summary>
            Gets or sets the default items' fore color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.DisabledBackColor">
            <summary>
            Gets or sets the dropdown's back color when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.DisabledBorderColor">
            <summary>
            Gets or sets the dropdown's border color when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.DisabledIndicatorColor">
            <summary>
            Gets or sets the dropdown's indicator color when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.DisabledForeColor">
            <summary>
            Gets or sets the dropdown's fore color when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.ItemHighLightColor">
            <summary>
            Gets or sets the highlighted item's back color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.ItemHighLightForeColor">
            <summary>
            Gets or sets the highlighted items' fore color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.BorderColor">
            <summary>
            Gets or sets the dropdown's border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.BackgroundColor">
            <summary>
            Gets or sets the dropdown's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.ItemBorderColor">
            <summary>
            Gets or sets the color of the item border.
            </summary>
            <value>The color of the item border.</value>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.ItemBackColor">
            <summary>
            Gets or sets the background color of the dropdown list.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.ForeColor">
            <summary>
            Gets or sets the dropdown's fore color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.Font">
            <summary>
            Gets or sets the dropdown's font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.DropdownBorderThickness">
            <summary>
            Gets or sets the dropdown's border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.TextAlignment">
            <summary>
            Gets or sets the default text alignment.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.IndicatorAlignment">
            <summary>
            Gets or sets the indicator's alignment position.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.FillDropDown">
            <summary>
            Gets or sets a value indicating whether 
            the dropdown will be color-filled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.SelectedIndex">
            <summary>
            Gets or sets the selected index.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.Color">
            <summary>
            Gets or sets the dropdown's back color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.DisabledColor">
            <summary>
            Gets or sets the dropdown's back color when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.Icon">
            <summary>
            Gets or sets a custom dropdown icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.Direction">
            <summary>
            Gets or sets the indicator's directional look.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.DropDownTextAlign">
            <summary>
            Gets or sets the default text alignment.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.IndicatorLocation">
            <summary>
            Gets or sets the indicator's alignment position.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.DropDownStyle">
            <summary>
            Gets or sets the default dropdown style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.FlatStyle">
            <summary>
            Gets or sets the dropdown's default style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.DrawMode">
            <summary>
            Gets or sets a value indicating whether your code or the 
            Operating System will handle drawing of elements in the list.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtComboBox.BackColor">
            <summary>
            Gets or sets a the control back color.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtComboBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtComboBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtComboBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtShapes">
            <summary>
            AddBulk stylish shapes with intuitive customization options and design features.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtShapes.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:KimTools.WinForms.KtShapes"/> control.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtShapes.Shapes">
            <summary>
            Provides the various supported shapes.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtShapes.Shapes.Circle">
            <summary>
            A circle.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtShapes.Shapes.Oval">
            <summary>
            An oval circle.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtShapes.Shapes.Square">
            <summary>
            A square.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtShapes.Shapes.Rectangle">
            <summary>
            A rectangle.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtShapes.Shapes.Polygon">
            <summary>
            A polygon.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtShapes.Shapes.Line">
            <summary>
            A line.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtShapes.FillShape">
            <summary>
            Gets or sets a value indicating whether 
            shapes will be filled upon drawing.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtShapes.BorderThickness">
            <summary>
            Gets or sets the shape border thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtShapes.Sides">
            <summary>
            Gets or sets the number of sides (minimum 16) for a polygon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtShapes.Angle">
            <summary>
            Gets or sets the angle to be used when drawing polygons and lines.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtShapes.FillColor">
            <summary>
            Gets or sets the shape fill color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtShapes.BorderColor">
            <summary>
            Gets or sets the shape border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtShapes.Shape">
            <summary>
            Gets or sets the shape to be drawn.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtShapes.DrawShapes(System.Drawing.Graphics)">
            <summary>
            Draws standard graphics shapes.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtShapes.DrawPolygon(System.Int32,System.Drawing.Rectangle,System.Drawing.Graphics)">
            <summary>
            Draws polygonal shapes such as a pentagon, hexagon and other related shapes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtShapes.ShapeChanged">
            <summary>
            Occurs when the shape has been changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtShapes.ShapeChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtShapes.ShapeChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtShapes.ShapeChangedEventArgs.#ctor(KimTools.WinForms.KtShapes.Shapes)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtShapes.ShapeChanged"/> event.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtShapes.ShapeChangedEventArgs.Shape">
            <summary>
            Gets the shape type applied.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtShapes.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the paint event.
            </summary>
            <param name="e">Provides the paint event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtShapes.BunifuShapesActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtShapes.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtShapes.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtShapes.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSlider">
            <summary>
            Provides enhanced horizontal ranged value 
            selections and extra customization options.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:KimTools.WinForms.KtSlider.#ctor">
            <summary>
            Creates a new <see cref="T:KimTools.WinForms.KtSlider"/> control.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSlider.ThumbStyles">
            <summary>
            Provides options for choosing the thumb's overall style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSlider.ThumbStyles.Fill">
            <summary>
            In fill mode, the thumb will have a fill color 
            as provided by the 'ThumbColor' property.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:KimTools.WinForms.KtSlider.ThumbStyles.Outline" -->
        <member name="T:KimTools.WinForms.KtSlider.SliderStyles">
            <summary>
            Provides options for choosing the slider's overall style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSlider.SliderStyles.Thick">
            <summary>
            Applies a thick border to the slider.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:KimTools.WinForms.KtSlider.SliderStyles.Thin" -->
        <member name="T:KimTools.WinForms.KtSlider.ThumbSizes">
            <summary>
            Provides default thumb size options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSlider.ThumbSizes.Small">
            <summary>
            Represents a small thumb.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSlider.ThumbSizes.Medium">
            <summary>
            Represents a medium-sized thumb.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSlider.ThumbSizes.Large">
            <summary>
            Represents a large thumb.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSlider.SliderStates">
            <summary>
            Defines various states in a Slider's activity cycle.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSlider.SliderStates.Idle">
            <summary>
            Denotes the Slider's idle state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSlider.SliderStates.Hover">
            <summary>
            Denotes the Slider's mouse-hover state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSlider.SliderStates.Pressed">
            <summary>
            Denotes the Slider's mouse-press or click state.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.IndicateFocus">
            <summary>
            Gets or sets a value indicating whether the 
            control will provide a visual cue when focused.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.AnimationSpeed">
            <summary>
            Gets or sets the Slider's animation speed (in milliseconds) 
            when moving from one state to another.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.SliderColor">
            <summary>
            Gets or sets the slider's BackColor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.ElapsedColor">
            <summary>
            Gets or sets the slider's elapsed region color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.ThumbFillColor">
            <summary>
            Gets or sets the thumb's inner fill color. 
            This is only necessary when the property 
            'ThumbStyle' is set to 'Outline'.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.ThumbStyle">
            <summary>
            Gets or sets the slider's thumb style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.SliderStyle">
            <summary>
            Gets or sets the slider's overral style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.FocusState">
            <summary>
            Gets or sets the state to use when the Slider 
            contains focus while the cursor is away.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.OnIdleState">
            <summary>
            Represents the idle state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.OnDisabledState">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.OnHoverState">
            <summary>
            Represents the mouse hover state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.OnPressedState">
            <summary>
            Represents the mouse pressed or click state of the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.OnDisableSlider">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSlider.ResetAnimations">
            <summary>
            Resets the control's state animations.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSlider.BunifuHSliderActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtSlider.BunifuHSliderActionList"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSlider.BunifuHSliderActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSlider.SliderState">
            <summary>
            An abstract class used to define various states within Tailwind Sliders.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSlider.SliderState.#ctor(System.String)">
            <summary>
            Creates a new Tailwind Slider state.
            </summary>
            <param name="name">
            Provide a name for the state. 
            This can be used to track the state once initialized.
            </param>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.SliderState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.SliderState.SliderColor">
            <summary>
             Gets or sets the background color of the Slider.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.SliderState.ElapsedColor">
            <summary>
             Gets or sets the slider's elapsed region color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.SliderState.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSlider.SliderState.ThumbFillColor">
            <summary>
            Gets or sets the thumb's inner fill color. 
            This is only necessary when the property 
            'ThumbStyle' is set to 'Outline'.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSlider.SliderState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:KimTools.WinForms.KtSlider.SliderState.SliderColor"/>, <see cref="P:KimTools.WinForms.KtSlider.SliderState.ElapsedColor"/>, <see cref="P:KimTools.WinForms.KtSlider.SliderState.ThumbColor"/>, 
            <see cref="P:KimTools.WinForms.KtSlider.SliderState.ThumbColor"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="F:KimTools.WinForms.KtSlider.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSlider.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtSlider.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSliderVert">
            <summary>
            Provides enhanced vertical ranged value 
            selections and extra customization options.
            </summary>
            <seealso cref="T:System.Windows.Forms.UserControl" />
        </member>
        <member name="M:KimTools.WinForms.KtSliderVert.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:KimTools.WinForms.KtSliderVert"/> control.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSliderVert.DirectionalMovements">
            <summary>
            Provides directional options that the vertical
            slider can adjust to whenever movement occurs.
            </summary>      
        </member>
        <member name="F:KimTools.WinForms.KtSliderVert.DirectionalMovements.TopDown">
            <summary>
            Adjusts movement from top to bottom.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSliderVert.DirectionalMovements.BottomUp">
            <summary>
            Adjusts movement from bottom to top.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSliderVert.ThumbStyles">
            <summary>
            Provides options for choosing the thumb's overall style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSliderVert.ThumbStyles.Fill">
            <summary>
            In fill mode, the thumb will have a fill color 
            as provided by the 'ThumbColor' property.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:KimTools.WinForms.KtSliderVert.ThumbStyles.Outline" -->
        <member name="T:KimTools.WinForms.KtSliderVert.ThumbSizes">
            <summary>
            Provides default thumb size options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSliderVert.ThumbSizes.Small">
            <summary>
            Represents a small thumb.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSliderVert.ThumbSizes.Medium">
            <summary>
            Represents a medium-sized thumb.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSliderVert.ThumbSizes.Large">
            <summary>
            Represents a large thumb.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSliderVert.SliderStyles">
            <summary>
            Provides options for choosing the slider's overall style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSliderVert.SliderStyles.Thick">
            <summary>
            Applies a thick border to the slider.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:KimTools.WinForms.KtSliderVert.SliderStyles.Thin" -->
        <member name="P:KimTools.WinForms.KtSliderVert.ScrollDirection">
            <summary>
            Gets or sets the directional movement of the slider.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSliderVert.SliderColor">
            <summary>
            Gets or sets the slider's BackColor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSliderVert.ElapsedColor">
            <summary>
            Gets or sets the slider's elapsed region color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSliderVert.ThumbFillColor">
            <summary>
            Gets or sets the thumb's inner fill color. 
            This is only necessary when the property 
            'ThumbStyle' is set to 'Outline'.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSliderVert.ThumbStyle">
            <summary>
            Gets or sets the slider's thumb style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSliderVert.SliderStyle">
            <summary>
            Gets or sets the slider's overral style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSliderVert.OnDisableSlider">
            <summary>
            Represents the disabled or inactive state of the control.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSliderVert.BunifuVSliderActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtSliderVert.BunifuVSliderActionList"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSliderVert.BunifuVSliderActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSliderVert.SliderState">
            <summary>
            An abstract class used to define various states within Tailwind Sliders.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSliderVert.SliderState.#ctor(System.String)">
            <summary>
            Creates a new Tailwind Slider state.
            </summary>
            <param name="name">
            Provide a name for the state. 
            This can be used to track the state once initialized.
            </param>
        </member>
        <member name="P:KimTools.WinForms.KtSliderVert.SliderState.Name">
            <summary>
            Gets the name applied to the state.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSliderVert.SliderState.SliderColor">
            <summary>
             Gets or sets the background color of the Slider.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSliderVert.SliderState.ElapsedColor">
            <summary>
             Gets or sets the slider's elapsed region color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSliderVert.SliderState.ThumbColor">
            <summary>
             Gets or sets the background color of the thumb.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSliderVert.SliderState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing the values passed to the state separated by semi-colons.
            The order of appearance is: <see cref="P:KimTools.WinForms.KtSliderVert.SliderState.SliderColor"/>, <see cref="P:KimTools.WinForms.KtSliderVert.SliderState.ElapsedColor"/>, <see cref="P:KimTools.WinForms.KtSliderVert.SliderState.ThumbColor"/>, 
            <see cref="P:KimTools.WinForms.KtSliderVert.SliderState.ThumbColor"/>.
            </summary>
            <returns>String</returns>
        </member>
        <member name="F:KimTools.WinForms.KtSliderVert.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSliderVert.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtSliderVert.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Bloom.Name">
            <summary>
            Gets the instance name.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Bloom.Value">
            <summary>
            Gets or sets the bloom color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Bloom.ValueHex">
            <summary>
            Gets or sets the color value in Hexadecimal format.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLoaderNS.Core.LoaderBase">
            <summary>
            Test Edited
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtLoaderNS.Core.LoaderBase.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:KimTools.WinForms.KtLoaderNS.Core.LoaderBase"/>.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtLoaderNS.Helpers.MouseState">
            <summary>
            Provides various supported mouse states.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLoaderNS.Helpers.MouseState.None">
            <summary>
            No active state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLoaderNS.Helpers.MouseState.Over">
            <summary>
            Mouse cursor is over an element.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLoaderNS.Helpers.MouseState.Down">
            <summary>
            Mouse key is pressed down.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtLoaderNS.Helpers.MouseState.Block">
            <summary>
            Mouse has been blocked.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSpinner">
            <summary>
            Provides a stylish and highly customizable animated loader 
            for visually indicating indeterminate operations and tasks.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSpinner.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:KimTools.WinForms.KtSpinner"/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSpinner.#cctor">
            <summary>
            Initializes a static instance of <see cref="T:KimTools.WinForms.KtSpinner"/>
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSpinner.Styles">
            <summary>
            Provides various ring formatting styles.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.Styles.Solid">
            <summary>
            The default solid style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.Styles.Dash">
            <summary>
            A dashed style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.Styles.Dot">
            <summary>
            A dotted style.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSpinner.Presets">
            <summary>
            Provides various style preset options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.Presets.Solid">
            <summary>
            The default solid style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.Presets.Dash">
            <summary>
            A dashed style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.Presets.Dot">
            <summary>
            A dotted style.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.Presets.Diamond">
            <summary>
            A diamond ringed style.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSpinner.DashCaps">
            <summary>
            Provides various dash cap formatting options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.DashCaps.Flat">
            <summary>
            The default flat cap.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.DashCaps.Round">
            <summary>
            A rounded cap.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.DashCaps.Triangle">
            <summary>
            A triangulated cap.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSpinner.CapStyles">
            <summary>
            Provides various supported cap style options.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.CapStyles.Flat">
            <summary>
            Represents a flat cap.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.CapStyles.Round">
            <summary>
            Represents a rounded cap.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.CapStyles.Triangle">
            <summary>
            Represents a triangular cap.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSpinner.CapPoints">
            <summary>
            Provides various supported cap areas.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.CapPoints.Start">
            <summary>
            The cap will be styled at the start.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.CapPoints.End">
            <summary>
            The cap will be styled at the rear/end.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSpinner.CapPoints.Both">
            <summary>
            The cap will be styled at the start and the end.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.AllowPresets">
            <summary>
            Gets or sets a value indicating whether style presets are allowed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.ShowText">
            <summary>
            Gets or sets a value indicating whether 
            the text will be displayed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.Preset">
            <summary>
            Gets or sets a loading style preset. Ensure that 
            the property <see cref="P:KimTools.WinForms.KtSpinner.AllowPresets"/> is enabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.Speed">
            <summary>
            Gets or sets the progress speed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.Thickness">
            <summary>
            Gets or sets the progress thickness.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.DashWidth">
            <summary>
            Gets or sets the indicator dash pattern. 
            This is only visible whenever the property 
            <see cref="P:KimTools.WinForms.KtSpinner.Style"/> is set to 
            <see cref="!:Styles.Dashed"/>.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.Text">
            <summary>
            Gets or sets the loader text.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.Color">
            <summary>
            Gets or sets the indicator color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.ForeColor">
            <summary>
            Gets or sets the fore color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.Font">
            <summary>
            Gets or sets the text font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.TextPadding">
            <summary>
            Gets or sets the text padding.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.Style">
            <summary>
            Gets or sets the indicator ring style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.DashCap">
            <summary>
            Gets or sets the indicator dash cap format.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.CapStyle">
            <summary>
            Gets or sets the indicator cap style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.CapPoint">
            <summary>
            Gets or sets point where the cap will be applied.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.Paused">
            <summary>
            Gets a value indicating whether the 
            animation timer has been paused.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSpinner.Timer">
            <summary>
            Gets or sets the animation timer.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSpinner.Pause">
            <summary>
            Pauses the indeterminate animation timer.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSpinner.Continue">
            <summary>
            Continues the indeterminate animation timer.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtSpinner.Running">
            <summary>
            Raised whenever the loader is running.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSvui.GetRoot">
            <summary>
            Gets the root.
            </summary>
            <returns></returns>
        </member>
        <member name="F:KimTools.WinForms.KtSvui.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSvui.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtSvui.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSwitch">
            <summary>
            AddBulk customizable switches that toggle between 
            the visual states of settings and features.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSwitch.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtSwitch"/> class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.Animation">
            <summary>
            Gets or sets the animation speed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.BorderRadius">
            <summary>
            Gets or sets the border radius.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:KimTools.WinForms.KtSwitch.BorderRadiusThumb" -->
        <member name="P:KimTools.WinForms.KtSwitch.Checked">
            <summary>
            Gets or sets a value indicating whether 
            the Toggle Switch has been checked.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.CustomStateOff">
            <summary>
            Gets or sets the visual properties of the 'OFF' toggle state.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.CustomStateOn">
            <summary>
            Gets or sets the visual properties of the 'ON' toggle state.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.ThumbMargin">
            <summary>
            Gets or sets the border thickness.
            </summary>
            <summary>
            Gets or sets the thumb's (inner circle) padding.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.BackgroundImage">
            <summary>
            Gets or sets the background image displayed in the control.
            </summary>
            <value>The background image.</value>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.BackgroundImageLayout">
            <summary>
            Gets or sets the background image layout as defined in the <see cref="T:System.Windows.Forms.ImageLayout" /> enumeration.
            </summary>
            <value>The background image layout.</value>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.InnerCirclePadding">
            <summary>
            Gets or sets the inner circle's padding.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.Padding">
            <summary>
            Gets or sets the inner circle's padding.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.Value">
            <summary>
            Gets or sets a value indicating whether thw switch is checked.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSwitch.KtSwitchState">
            <summary>
            Provides visual properties for customizing  
            <see cref="T:KimTools.WinForms.KtSwitch"/>.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.KtSwitchState.Border">
            <summary>
            Gets or sets the inner border thickness.
            </summary>
            <summary>
            Gets or sets the border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.KtSwitchState.Bg">
            <summary>
            Gets or sets the background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.KtSwitchState.Thumb">
            <summary>
            Gets or sets the inner background color.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSwitch.KtSwitchState.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> containing 
            the default properties.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSwitch.Render">
            <summary>
            Forces the control to invalidate its client area and 
            immediately redraw itself and any child controls.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSwitch.ResizeControl">
            <summary>
            Resizes amd re-renders the control appropriately.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSwitch.DrawBackground(KimTools.WinForms.KtSwitch.KtSwitchState)">
            <summary>
            Draws the toggle's background.
            </summary>
            <param name="State">The state.</param>
        </member>
        <member name="M:KimTools.WinForms.KtSwitch.DrawCircle(KimTools.WinForms.KtSwitch.KtSwitchState)">
            <summary>
            Draws the thumb circle.
            </summary>
            <param name="State">The state.</param>
        </member>
        <member name="M:KimTools.WinForms.KtSwitch.DrawRoundedRectangle(System.Drawing.Graphics,System.Drawing.Rectangle,System.Int32,System.Drawing.Color,System.Drawing.Pen)">
            <summary>
            Draws a rounded background rectangle.
            </summary>
            <param name="graphics">The graphics object to use when drawing.</param>
            <param name="bounds">The drawing rectangle's bounds.</param>
            <param name="radius">The border radius.</param>
            <param name="pen">The drawing pen to use.</param>
            <param name="backColor">The background color.</param>
        </member>
        <member name="E:KimTools.WinForms.KtSwitch.CheckedChanged">
            <summary>
            Occurs when the switch value has been changed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtSwitch.OnValuechange">
            <summary>
            Occurs when the switch value has been changed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtSwitch.CheckedChangedEventArgs">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtSwitch.CheckedChanged"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSwitch.CheckedChangedEventArgs.#ctor(System.Boolean)">
            <summary>
            Provides data for the <see cref="E:KimTools.WinForms.KtSwitch.CheckedChanged"/> event.
            </summary>
            <param name="isChecked">
            Set the checked value to true/false.
            </param>
        </member>
        <member name="P:KimTools.WinForms.KtSwitch.CheckedChangedEventArgs.Checked">
            <summary>
            Gets a value indicating whether the control is checked.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSwitch.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSwitch.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtSwitch.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTable.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTable.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTable.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.Elements.KtTable.KtTableAssets">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Elements.KtTable.KtTableAssets.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Elements.KtTable.KtTableAssets.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Elements.KtTable.KtTableAssets.Avatar">
             <summary>
               Looks up a localized string similar to &lt;svg  xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
              &lt;circle r=&quot;20&quot; cx=&quot;23&quot; cy=&quot;23&quot;  stroke=&quot;{border}&quot; stroke-width=&quot;2&quot; opacity=&quot;{opacity}&quot;  fill=&quot;{fill}&quot; /&gt; 
              &lt;text x=&quot;19&quot; y=&quot;29&quot;  stroke=&quot;{stroke}&quot; font-size=&quot;12pt&quot; font-family=&quot;Segoe UI Light&quot;&gt;{label}&lt;/text&gt;
            &lt;/svg&gt;.
             </summary>
        </member>
        <member name="P:KimTools.WinForms.Elements.KtTable.KtTableAssets.Progress">
             <summary>
               Looks up a localized string similar to &lt;svg  xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
               &lt;rect stroke=&quot;{border}&quot; fill=&quot;{bg}&quot;  x=&quot;2&quot; y=&quot;2&quot;  stroke-width=&quot;1.5&quot;   width=&quot;{width}&quot; height=&quot;15&quot; rx=&quot;7&quot; ry=&quot;11&quot;  /&gt; 
               &lt;rect fill=&quot;{fill}&quot;  x=&quot;2&quot; y=&quot;2&quot;  width=&quot;{fill-width}&quot; height=&quot;15&quot; rx=&quot;7&quot; ry=&quot;11&quot;  /&gt;   
            &lt;/svg&gt;.
             </summary>
        </member>
        <member name="P:KimTools.WinForms.Elements.KtTable.KtTableAssets.Status">
             <summary>
               Looks up a localized string similar to &lt;svg  xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
               &lt;rect fill=&quot;{fill}&quot;  x=&quot;0&quot; y=&quot;0&quot;  width=&quot;{width}&quot; height=&quot;20&quot; rx=&quot;10&quot; ry=&quot;20&quot;  /&gt; 
               &lt;text  fill=&quot;{stroke}&quot; x=&quot;10&quot; y=&quot;14&quot; font-family=&quot;Segoe UI Semibold&quot;  font-size=&quot;9pt&quot;&gt;{label}&lt;/text&gt; 
            &lt;/svg&gt;.
             </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTextBox">
            <summary>
            Provides enhanced TextBox with customized styling 
            properties and features for greater flexibility.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.CreateParams">
            <summary>
            Gets the list of created control parameters.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.#ctor">
            <summary>
            Creates a new <see cref="!:KimToolsTextbox"/> control.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.AcceptsTabChanged">
            <summary>
            Occurs when the property 'AcceptsTab' changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.BorderStyleChanged">
            <summary>
            Occurs when the 'BorderStyle' property changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.EnabledChanged">
            <summary>
            Occurs when the control's enabled state changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.HideSelectionChanged">
            <summary>
            Occurs when the 'HideSelection' property changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.KeyDown">
            <summary>
            Occurs when a key is first pressed.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.KeyPress">
            <summary>
            Occurs when the control has focus and 
            the user presses and releases a key.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.KeyUp">
            <summary>
            Occurs when a key is released.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.ModifiedChanged">
            <summary>
            Occurs when the 'Modified' property changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.IconLeftClick">
            <summary>
            Occurs when the left icon is clicked.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.IconRightClick">
            <summary>
            Occurs when the right icon is clicked.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.ReadOnlyChanged">
            <summary>
            Occurs when the 'ReadOnly' property changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.TextAlignChanged">
            <summary>
            Occurs when the 'TextAlign' property changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.TextChange">
            <summary>
            Occurs when the 'Text' property changes.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTextBox.TextChanged">
            <summary>
            Occurs when the 'Text' property changes.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTextBox.ktTextBoxState">
            <summary>
            Provides various states supported by KimTools TextBox.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.ktTextBoxState.Idle">
            <summary>
            Represents the idle state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.ktTextBoxState.hover">
            <summary>
            Represents the hover state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.ktTextBoxState.Active">
            <summary>
            Represents the active state.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.ktTextBoxState.Disabled">
            <summary>
            Represents the disabled state.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTextBox.KtTextBoxStyle">
            <summary>
            Provides various styling options for KimTools TextBox.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.KtTextBoxStyle.Tailwind">
            <summary>
            Uses the default KimTools TextBox design.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.KtTextBoxStyle.Fluent">
            <summary>
            Provides a custom Material TextBox design.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:KimTools.WinForms.KtTextBox.KtTextBoxStyle.Material" -->
        <member name="T:KimTools.WinForms.KtTextBox.KtTextCasing">
            <summary>
            Specifies the case of characters in a <see cref="T:KimTools.WinForms.KtTextBox"/> control.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.KtTextCasing.UpperCase">
            <summary>
            Converts all characters to uppercase.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.KtTextCasing.LowerCase">
            <summary>
            Converts all characters to lowercase.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.KtTextCasing.TitleCase">
            <summary>
            Converts all characters to sentence case.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.KtTextCasing.SentenceCase">
            <summary>
            The sentence
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.KtTextCasing.CamelCase">
            <summary>
            The pascal case
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.KtTextCasing.PascalCase">
            <summary>
            The pascal case
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.KtTextCasing.SnakeCase">
            <summary>
            The snake case
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.AnimationSpeed">
            <summary>
            Gets or sets the Button's animation speed (in milliseconds) 
            when moving from one state to another.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.AutoCompleteCustomSource">
            <summary>
            Gets or sets the automatic complete custom source.
            </summary>
            <value>
            The automatic complete custom source.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.AutoSizeHeight">
            <summary>
            Gets or sets a value indicating whether the 
            control control can respond to user interaction.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.BackColor">
            <summary>
            Gets or sets the control's BackColor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.BackgroundImage">
            <summary>
            Gets or sets the control's BackgroundImage.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.BaseTextBox">
            <summary>
            Gets the hosted input area.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.BorderRadius">
            <summary>
            Gets or sets the the TextBox's border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.Cursor">
            <summary>
            Represents the image used 
            to paint the mouse pointer.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.CustomBorderColor">
            <summary>
            Gets or sets the TextBox's border color when idle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.CustomBorderColorActive">
            <summary>
            Gets or sets the TextBox's border 
            color when active or focused.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.CustomBorderColorDisabled">
            <summary>
            Gets or sets the TextBox's border color when disabled.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.CustomFillColor">
            <summary>
            Gets or sets the TextBox's fill 
            color or inner-background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.CustomIconLeft">
            <summary>
            Gets or sets the TextBox's left icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.CustomIconRight">
            <summary>
            Gets or sets the TextBox's right icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.CustomPlaceholderColor">
            <summary>
            Gets or sets the placeholder's ForeColor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.DefaultFont">
            <summary>
            Gets or sets the font of the 
            text displayed by the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.DrawingRectangle">
            <summary>
            Gets the TextBox's drawing rectangle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.Enabled">
            <summary>
            Gets or sets a value indicating whether the 
            control control can respond to user interaction.
            </summary> 
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.Focused">
            <summary>
            Gets a value indicating whether 
            the control has input focus.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.Font">
            <summary>
            Gets or sets the font of the text displayed by the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.ForeColor">
            <summary>
            Gets or sets the TextBox's foreground color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.IconPadding">
            <summary>
            Gets or sets the TextBox's padding for
            both the left and the right icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.isOnFocused">
            <summary>
            Gets a value indicating whether this instance is on focused.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.LeftIcon">
            <summary>
            Gets the left icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.TextPlaceholder">
            <summary>
            Gets or sets the TextBox's border thickness.
            </summary>
            <summary>
            Gets or sets the TextBox's placeholder.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.ReadOnly">
            <summary>
            Gets or sets a value indicating whether 
            text in the text box is read-only.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.RightIcon">
            <summary>
            Gets the right icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.ScrollBars">
            <summary>
            Indicates which scroll bars will be shown 
            when the TextBox is set to multiline.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.Style">
            <summary>
            Gets or sets the TextBox style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.TextCasing">
            <summary>
            Gets or sets the input character casing.
            </summary> 
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.Text">
            <summary>
            Gets or sets the text input.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.TextMarginBottom">
            <summary>
            Gets or sets the TextBox's bottom margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.TextOffsetX">
            <summary>
            Gets or sets the TextBox's left margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTextBox.TextOffsetY">
            <summary>
            Gets or sets the TextBox's top margin.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.AppendText(System.String)">
            <summary>
            Appends text to the current text of a text box.
            </summary>
            <param name="text">
            The text to append to the current 
            contents of the text box.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.Clear">
            <summary>
            Clears all text from the text box control.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.ClearUndo">
            <summary>
            Clears information about the most recent 
            operation from the undo buffer of the text box.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.Copy">
            <summary>
            Copies the current selection in 
            the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.Cut">
            <summary>
            Moves the current selection in 
            the text box to the Clipboard.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.DeselectAll">
            <summary>
            Specifies that the value of the <see cref="P:KimTools.WinForms.KtTextBox.SelectionLength"/> 
            property is zero so that no characters are selected in the control.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.Focus">
            <summary>
            Sets input focus to the control.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.GetCharFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the character that is closest to 
            the specified location within the control.
            </summary>
            <param name="pt">The location from which to seek the nearest character.</param>
            <returns>The character at the specified location.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.GetCharIndexFromPosition(System.Drawing.Point)">
            <summary>
            Retrieves the index of the character 
            nearest to the specified location.
            </summary>
            <param name="pt">The location to search.</param>
            <returns>
            The zero-based character index 
            at the specified location.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.GetFirstCharIndexFromLine(System.Int32)">
            <summary>
            Retrieves the index of the first character of a given line.
            </summary>
            <param name="lineNumber">The line for which to get the index of its first character.</param>
            <returns>
            The zero-based index of the first 
            character in the specified line.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.GetFirstCharIndexOfCurrentLine">
            <summary>
            Retrieves the index of the first character of the current line.
            </summary>
            <returns>
            The zero-based character 
            index in the current line.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.GetLineFromCharIndex(System.Int32)">
            <summary>
            Retrieves the line number from the specified 
            character position within the text of the control.
            </summary>
            <param name="index">The character index position to search.</param>
            <returns>
            The zero-based line number in which  
            the character index is located.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.GetPositionFromCharIndex(System.Int32)">
            <summary>
            Retrieves the location within the control 
            at the specified character index.
            </summary>
            <param name="index">
            The index of the character for 
            which to retrieve the location.
            </param>
            <returns>
            The location of the specified character 
            within the client rectangle of the control.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.OnStateChanged(KimTools.WinForms.KtTextBox.ktTextBoxState)">
            <summary>
            Called when [state changed].
            </summary>
            <param name="ktTextBox">The kt text box.</param>
            <param name="newState">The new state.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.OnStateChanging(KimTools.WinForms.KtTextBox.ktTextBoxState,KimTools.WinForms.KtTextBox.ktTextBoxState,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called when [state changing].
            </summary>
            <param name="ktTextBox">The kt text box.</param>
            <param name="oldState">The old state.</param>
            <param name="newState">The new state.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.Paste">
            <summary>
            Replaces the current selection in the text box 
            with the contents of the Clipboard.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.KtTextBox.Render" -->
        <member name="M:KimTools.WinForms.KtTextBox.Reset">
            <summary>
            Inserts default placeholder, assigns placeholder 
            style and sets cursor to the first position.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.ResetText">
            <summary>
            Resets the <see cref="P:KimTools.WinForms.KtTextBox.Text"/> property to its default value.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.ResizeControl">
            <summary>
            Adjusts the control to its appropriate size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.ScrollToCaret">
            <summary>
            Scrolls the contents of the control 
            to the current caret position.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.Select(System.Int32,System.Int32)">
            <summary>
            Selects a range of text in the text box.
            </summary>
            <param name="start">
            The position of the first character in the 
            current text selection within the text box.
            </param>
            <param name="length">
            The number of characters to select.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.SelectAll">
            <summary>
            Selects all text in the text box.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.ToString">
            <summary>
            Returns a string that represents the <see cref="T:KimTools.WinForms.KtTextBox"/> control.
            </summary>
            <returns>
            A string that represents the current <see cref="T:KimTools.WinForms.KtTextBox"/>. 
            The string includes the type and the <see cref="T:KimTools.WinForms.KtTextBox"/> 
            property of the control.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.Undo">
            <summary>
            Undoes the last edit operation in the text box.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTextBox.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTextBox.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtWindow.UseImmersiveDarkMode(System.IntPtr,System.Boolean)">
            <summary>
            Uses the immersive dark mode.
            </summary>
            <param name="handle">The handle.</param>
            <param name="enabled">if set to <c>true</c> [enabled].</param>
            <returns></returns>
        </member>
        <member name="F:KimTools.WinForms.KtWindow.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtWindow.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtWindow.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPanelShadow">
            <summary>
            Provides a beautiful and improved panel with shadowed borders 
            amongst other features, including styling borders and edges.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPanelShadow.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:KimTools.WinForms.KtPanelShadow"/>.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPanelShadow.BevelStyles">
            <summary>
            Provides the various supported bevel styles.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.BevelStyles.Lowered">
            <summary>
            A lowered border.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.BevelStyles.Raised">
            <summary>
            A raised border.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.BevelStyles.Flat">
            <summary>
            A thin border.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPanelShadow.FillStyles">
            <summary>
            Provides various fill styles used when rendering colors.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.FillStyles.Solid">
            <summary>
            Draws a solid fill color.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.FillStyles.Gradient">
            <summary>
            Draws a gradient fill color.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPanelShadow.GradientModes">
            <summary>
            Provides the various supported gradient modes.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.GradientModes.BackwardDiagonal">
            <summary>
            Specifies a gradient from upper right to lower left.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.GradientModes.ForwardDiagonal">
            <summary>
            Specifies a gradient from upper left to lower right.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.GradientModes.Horizontal">
            <summary>
            Specifies a gradient from left to right.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.GradientModes.Vertical">
            <summary>
            Specifies a gradient from top to bottom.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPanelShadow.ShadowStyles">
            <summary>
            Provides the various supported shadow styles.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.ShadowStyles.ForwardDiagonal">
            <summary>
            Specifies a shodow from upper left to lower right.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.ShadowStyles.Surrounded">
            <summary>
            Specifies a surrounded shadow.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPanelShadow.ShadowStyles.Dropped">
            <summary>
            Specifies a dropped shadow.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.Bevel">
            <summary>
            Gets or sets the panel's bevel style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.BorderColor">
            <summary>
            Gets or sets the panel's border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.BorderRadius">
            <summary>
            Gets or sets the panel's border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.BorderThickness">
            <summary>
            Gets or sets the thickness of the panel's borders.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.FillStyle">
            <summary>
            Gets or sets the color fill style to be 
            used when rendering the shadow panel.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.GradientMode">
            <summary>
            Gets or sets the background gradient mode.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.PanelColor">
            <summary>
            Gets or sets the panel's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.PanelColor2">
            <summary>
            Gets or sets panel's ending gradient color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.ShadowColor">
            <summary>
            Gets or sets the panel's shadow color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.ShadowDept">
            <summary>
            [Deprecated] Gets the shadow dept.
            </summary>
            <value>
            The shadow dept.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.ShadowDepth">
            <summary>
            Gets or sets the panel's shadow depth.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.ShadowStyle">
            <summary>
            Gets or sets the panel's shadow style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtPanelShadow.ShadowTopLeftVisible">
            <summary>
            [Deprecated] Gets or sets a value indicating 
            whether the top-left shadow will be visible.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtPanelShadow.BunifuControlDesignerActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtPanelShadow.BunifuControlDesignerActionList"/> class.
            </summary>
            <seealso cref="T:Microsoft.DotNet.DesignTools.Designers.Actions.DesignerActionList" />
        </member>
        <member name="M:KimTools.WinForms.KtPanelShadow.BunifuControlDesignerActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtPopOver.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtPopOver.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtPopOver.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtSignal.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtSignal.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtSignal.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KTheme._current">
            <summary>
            Gets the default.
            </summary>
            <value>
            The default.
            </value>
        </member>
        <member name="M:KimTools.WinForms.KTheme.OnChanged(System.String)">
            <summary>
            Called when [changed].
            </summary>
            <param name="propName">Name of the property.</param>
        </member>
        <member name="M:KimTools.WinForms.KThemeHelper.GetBorderShape(System.Windows.Forms.Control,System.Nullable{KimTools.WinForms.KtSize})">
            <summary>
            Gets the border shape.
            </summary>
            <param name="control">The control.</param>
            <param name="shape">The shape.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KThemeHelper.GetBorderSize(KimTools.WinForms.KtSize)">
            <summary>
            Gets the size of the border.
            </summary>
            <param name="borderSize">Size of the border.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KThemeHelper.Color(KimTools.WinForms.KtColor,KimTools.WinForms.KtColor)">
            <summary>
            Gets the color.
            </summary>
            <param name="ktColor">The role.</param>
            <param name="useDefault">The default role.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KThemeHelper.ColorContent(KimTools.WinForms.KtColor,KimTools.WinForms.KtColor)">
            <summary>
            Colors the content.
            </summary>
            <param name="ktColor">The role.</param>
            <param name="useDefault">The default role.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KThemeHelper.KtRender(KimTools.WinForms.IKtRender,KimTools.WinForms.KtCanvas,System.String,System.String,KimTools.WinForms.KtShade)">
            <summary>
            Applies the kt style.
            </summary>
            <param name="ktRender">The control.</param>
            <param name="ktCanvas">The kt canvas.</param>
            <param name="borderShape">The border shape.</param>
            <param name="borderSize">Size of the border.</param>
            <param name="shade">The shade.</param>
        </member>
        <member name="M:KimTools.WinForms.KThemeHelper.KtRender(KimTools.WinForms.IKtRender,KimTools.WinForms.KtCanvas,KimTools.WinForms.KtColor,System.String,System.String,KimTools.WinForms.KtShade)">
            <summary>
            Applies the kt style.
            </summary>
            <param name="ktRender">The control.</param>
            <param name="ktCanvas">The kt canvas.</param>
            <param name="ktColor">The role.</param>
            <param name="borderShape">The border shape.</param>
            <param name="borderSize">Size of the border.</param>
            <param name="shade">The shade.</param>
        </member>
        <member name="M:KimTools.WinForms.KThemeHelper.FromHsb(System.Single,System.Single,System.Single)">
            <summary>
            Froms the HSB.
            </summary>
            <param name="hue">The hue.</param>
            <param name="saturation">The saturation.</param>
            <param name="brightness">The brightness.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KThemeHelper.GetAnalogousColors(System.Drawing.Color)">
            <summary>
            Gets the analogous colors.
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KThemeHelper.GetColorMajor(KimTools.WinForms.KtColor,KimTools.WinForms.KtColor)">
            <summary>
            Gets the color.
            </summary>
            <param name="ktColor">Color of the kt.</param>
            <param name="defaultKtColor">Default color of the kt.</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KThemeHelper.GetColorContent(KimTools.WinForms.KtColor,KimTools.WinForms.KtColor)">
            <summary>
            Gets the content of the color.
            </summary>
            <param name="ktColor">The role.</param>
            <param name="useDefault">The default role.</param>
            <returns></returns>
        </member>
        <member name="F:KimTools.WinForms.KtTheme.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTheme.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTheme.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToasts">
            <summary>
            Deliver stunningly neat, time-bound, and brief messages 
            about application processes during or after execution.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.#ctor">
            <summary>
            Creates a new <see cref="T:KimTools.WinForms.KtToasts"/> component.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Creates a new <see cref="T:KimTools.WinForms.KtToasts"/> component.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToasts.Hosts">
            <summary>
            Provides a list of supported hosts 
            used to contain snackbars.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Hosts.Screen">
            <summary>
            The current screen or monitor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Hosts.Control">
            <summary>
            A standard control or user control.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Hosts.FormOwner">
            <summary>
            The parent form owning the snackbar.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToasts.Positions">
            <summary>
            Provides a list of positions to be 
            used when displaying the snackbar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Positions.TopLeft">
            <summary>
            The top-left area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Positions.TopCenter">
            <summary>
            The top-center area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Positions.TopRight">
            <summary>
            The top-right area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Positions.MiddleLeft">
            <summary>
            The top-right area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Positions.MiddleCenter">
            <summary>
            The middle-center area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Positions.MiddleRight">
            <summary>
            The middle-right area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Positions.BottomLeft">
            <summary>
            The bottom-left area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Positions.BottomCenter">
            <summary>
            The bottom-center area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Positions.BottomRight">
            <summary>
            The bottom-right area.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.Positions.Custom">
            <summary>
            Lets you specify your own custom position 
            using the <see cref="!:CustomPosition"/> property.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToasts.MessageTypes">
            <summary>
            Provides a default list of snackbar message 
            types that can be used in various scenarios.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.MessageTypes.Information">
            <summary>
            Displays an information message.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.MessageTypes.Success">
            <summary>
            Displays a success message.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.MessageTypes.Warning">
            <summary>
            Displays a warning message.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.MessageTypes.Error">
            <summary>
            Displays an error message.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToasts.SnackbarResult">
            <summary>
            Specifies identifiers to indicate 
            the return value of a snackbar.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.SnackbarResult.AutoClosed">
            <summary>
            The snackbar return value is <see cref="F:KimTools.WinForms.KtToasts.SnackbarResult.AutoClosed"/>, 
            meaning the snackabr ended its duration of display.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.SnackbarResult.UserClosed">
            <summary>
            The snackbar return value is <see cref="F:KimTools.WinForms.KtToasts.SnackbarResult.UserClosed"/>, 
            meaning the snackbar was closed by the end user.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.SnackbarResult.ActionClicked">
            <summary>
            The snackbar return value is <see cref="F:KimTools.WinForms.KtToasts.SnackbarResult.ActionClicked"/>, 
            meaning the snackbar's Action button was clicked.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.AllowDragging">
            <summary>
            Gets or sets a value indicating whether the 
            Snackbar will be draggable once displayed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.ClickToClose">
            <summary>
            Gets or sets a value indicating whether the 
            Snackbar will be closed once clicked by the user.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.DoubleClickToClose">
            <summary>
            Gets or sets a value indicating whether the Snackbar 
            will be closed once double-clicked by the user.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.AllowMultipleViews">
            <summary>
            Gets or sets a value indicating whether multiple 
            instances of the Snackbar will be displayed at a time.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.ShowCloseIcon">
            <summary>
            Gets or sets a value indicating whether 
            the close icon will be displayed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.ShowIcon">
            <summary>
            Gets or sets a value indicating whether  
            the Snackbar icon will be displayed.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.ShowBorders">
            <summary>
            Gets or sets a value indicating whether the Snackbar 
            will display its borders rather than shadows.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.ShowShadows">
            <summary>
            Gets or sets a value indicating whether the Snackbar 
            will display its shadows rather than borders.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.FadeCloseIcon">
            <summary>
            Gets or sets a value indicating whether 
            the close icon will fade when inactive.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.ZoomCloseIcon">
            <summary>
            Gets or sets a value indicating whether the 
            close icon will zoom-in when hovered onto.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.Margin">
            <summary>
            Gets or sets the Snackbar's overall 
            distance between its host and its edges.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.ViewsMargin">
            <summary>
            Gets or sets the distance between Snackbars whenever multiple 
            views are enabled using the property <see cref="P:KimTools.WinForms.KtToasts.AllowMultipleViews"/>.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.MaximumViews">
            <summary>
            Gets or sets the maximum number of Snackbars 
            that can be visible at a given time.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.DurationAfterIdle">
            <summary>
            Gets or sets the duration the Snackbar will remain 
            visible after it receives and then loses mouse focus.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.MessageRightMargin">
            <summary>
            Gets or sets the Snackbar's message right margin, 
            or distance between the message and the closing icon.
            Please note that the minimum size for display will be 
            established beyond the user-provided margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.InformationOptions">
            <summary>
            Gets the list of customization options provided  
            for the Snackbar's informational messages.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.SuccessOptions">
            <summary>
            Gets the list of customization options provided 
            for the Snackbar's success messages.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.WarningOptions">
            <summary>
            Gets the list of customization options provided 
            for the Snackbar's warning messages.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.ErrorOptions">
            <summary>
            Gets the list of customization options provided 
            for the Snackbar's error messages.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.MinimumSize">
            <summary>
            Gets or sets the minimum size the 
            Snackbar can be auto-resized to.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.MaximumSize">
            <summary>
            Gets or sets the maximum size the 
            Snackbar can be auto-resized to.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.Host">
            <summary>
            Gets or sets the host that will 
            be used to contain the Snackbar.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.HasAvailableAction">
            <summary>
            Gets a value determining whether an
            action was provided for the Snackbar.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtToasts.CustomizationOptions">
            <summary>
            Provides a list of supported customization 
            options for Snackbar messages.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.CustomizationOptions.#ctor">
            <summary>
            Initializes a new instance of 
            <see cref="T:KimTools.WinForms.KtToasts.CustomizationOptions"/> class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.ActionForeColor">
            <summary>
            Gets or sets the action button's foreground color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.ActionBackColor">
            <summary>
            Gets or sets the action button's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.ActionBorderColor">
            <summary>
            Gets or sets the action button's border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.CloseIconColor">
            <summary>
            Gets or sets the Snackbar's close icon color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.BackColor">
            <summary>
            Gets or sets the Snackbar's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.BorderColor">
            <summary>
            Gets or sets the Snackbar's border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.ForeColor">
            <summary>
            Gets or sets the message's foreground color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.ActionBorderRadius">
            <summary>
            Gets or sets the action button's border radius.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.IconLeftMargin">
            <summary>
            Gets or sets the Snackbar icon's left margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.Icon">
            <summary>
            Gets or sets the Snackbar's icon.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.Font">
            <summary>
            Gets or sets the message's font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtToasts.CustomizationOptions.ActionFont">
            <summary>
            Gets or sets the action button's font.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.CustomizationOptions.ToString">
            <summary>
            Returns a string containing the list of applied object propeties.
            </summary>
            <returns><see cref="T:System.String"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.Show(System.Windows.Forms.Form,System.String)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <returns>A <see cref="T:KimTools.WinForms.KtToasts.SnackbarResult"/>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.Show(System.Windows.Forms.Form,System.String,KimTools.WinForms.KtToasts.MessageTypes)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <param name="type">The type of message to be displayed.</param>
            <returns>A <see cref="T:KimTools.WinForms.KtToasts.SnackbarResult"/>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.Show(System.Windows.Forms.Form,System.String,KimTools.WinForms.KtToasts.MessageTypes,System.Int32)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <param name="type">The type of message to be displayed.</param> 
            <param name="duration">
            The time it will take before the 
            Snackbar automatically closes. 
            </param>
            <returns>A <see cref="T:KimTools.WinForms.KtToasts.SnackbarResult"/>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.Show(System.Windows.Forms.Form,System.String,KimTools.WinForms.KtToasts.MessageTypes,System.Int32,System.String)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <param name="type">The type of message to be displayed.</param>
            <param name="duration">
            The time it will take before the 
            Snackbar automatically closes. 
            </param>
            <param name="action">
            Specify the text to be displayed
            in the action button.
            </param>
            <returns>A <see cref="T:KimTools.WinForms.KtToasts.SnackbarResult"/>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.Show(System.Windows.Forms.Form,System.String,KimTools.WinForms.KtToasts.MessageTypes,System.Int32,System.String,KimTools.WinForms.KtToasts.Positions)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <param name="type">The type of message to be displayed.</param>
            <param name="position">
            The relative area or position where 
            the Snackbar will be displayed.
            </param>
            <param name="duration">
            The time it will take before the 
            Snackbar automatically closes. 
            </param>
            <param name="action">
            Specify the text to be displayed
            in the action button.
            </param>
            <returns>A <see cref="T:KimTools.WinForms.KtToasts.SnackbarResult"/>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.Show(System.Windows.Forms.Form,System.String,KimTools.WinForms.KtToasts.MessageTypes,System.Int32,System.String,KimTools.WinForms.KtToasts.Positions,KimTools.WinForms.KtToasts.Hosts)">
            <summary>
            Displays a Snackbar with specified text.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="message">The Snackbar message to be displayed.</param>
            <param name="type">The type of message to be displayed.</param>
            <param name="position">
            The relative area or position where 
            the Snackbar will be displayed.
            </param>
            <param name="host">
            The specific container that 
            will host the Snackbar.
            </param>
            <param name="duration">
            The time it will take before the 
            Snackbar automatically closes. 
            </param>
            <param name="action">
            Specify the text to be displayed
            in the action button.
            </param>
            <returns>A <see cref="T:KimTools.WinForms.KtToasts.SnackbarResult"/>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.Show(System.Windows.Forms.Form,System.Windows.Forms.Control,System.Int32,KimTools.WinForms.KtToasts.Positions,KimTools.WinForms.KtToasts.Hosts)">
            <summary>
            Displays a Snackbar with a custom control as its primary content.
            </summary>
            <param name="owner">The Form owning the Snackbar.</param>
            <param name="displayControl">
            The control to be displayed in-place-of 
            the default snackbar content.
            </param>
            <param name="duration">
            The time it will take before the 
            Snackbar automatically closes. 
            </param>
            <param name="position">
            The relative area or position where 
            the Snackbar will be displayed.
            </param>
            <param name="host">
            The specific container that 
            will host the Snackbar.
            </param>
            <returns>A <see cref="T:KimTools.WinForms.KtToasts.SnackbarResult"/>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.Close">
            <summary>
            Closes the currently active Snackbar.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.CloseAll">
            <summary>
            Closes all the currently displayed Snackbars.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.ChangeBitmapColor(System.Drawing.Bitmap,System.Drawing.Color)">
            <summary>
            Lets you change the color(s) of a  
            Bitmap image to a monochrome color.
            </summary>
            <param name="bitmapImage">The Bitmap image to use.</param>
            <param name="color">The resulting color of the Bitmap.</param>
            <returns>The resulting colored Bitmap image.</returns>
        </member>
        <member name="F:KimTools.WinForms.KtToasts.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtToasts.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.SnackbarExtensions">
            <summary>
            Provides extension methods that can  
            be utilized with Tailwind Snackbars.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.SnackbarExtensions.Then(KimTools.WinForms.KtToasts.SnackbarResult,System.Action{KimTools.WinForms.KtToasts.SnackbarResult})">
            <summary>
            Lets you to check the result returned by the 
            Snackbar once it is closed. You can also use 
            this to execute any specific action based on 
            the result provided.
            </summary>
            <param name="result">
            The result returned by the Snackbar.
            </param>
            <param name="action">
            The action to be performed either 
            anonymously or as per a specific result.
            </param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltips">
            <summary>
            Provides enhanced ToolTips with a set of customzation 
            options to distinctly match your design needs.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTooltips"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTooltips"/> class with a specified container.
            </summary>
            <param name="container">An <see cref="T:System.ComponentModel.IContainer"/> that represents the container of the ToolTip.</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.Active">
            <summary>
            Gets or sets a value indicating whether the ToolTip is active.
            Tooltips will only appear if this property is set to <see cref="!:true"/>.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.ConvertNewlinesToBreakTags">
            <summary>
            Gets or sets a value indicating whether to allow conversion 
            of newline characters in content to HTML break tags.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.ShowAlways">
            <summary>
            Determines if the tool tip will be displayed always, 
            even when the parent window is not active.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.ShowIcons">
            <summary>
            Gets or sets a value indicating whether the ToolTip will display 
            icons if the associated control or controls have specified one.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.OverrideToolTipTitles">
            <summary>
            When set to true, all ToolTip titles set in each control will be   
            replaced with the default ToolTip Title set in the Properties window.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.AlignTextWithTitle">
            <summary>
            When set to true, the <see cref="F:KimTools.WinForms.KtTooltips._toolTipText"/> will be aligned horizontally with the <see cref="P:KimTools.WinForms.KtTooltips.ToolTipTitle"/>
            position. This is especially useful whenever the ToolTipIcon is set.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.ShowShadows">
            <summary>
            Gets or sets a value indicating whether display-shadows  
            will be provided around the ToolTip's borders.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.ShowBorders">
            <summary>
            Gets or sets a value indicating whether standard 
            borders will be drawn around the ToolTip's region.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.AllowFading">
            <summary>
            When set to true, a fade effect is used 
            when ToolTips are shown or hidden.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.AllowAutoClose">
            <summary>
            When set to true, the ToolTip will be closed automatically when a set period
            of time provided by the property 'AutoCloseDuration', is given. However, when
            set to false, the ToolTip will be closed once the mouse leaves the associated control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.Padding">
            <summary>
            Gets or sets the ToolTip's inner padding between the container
            and its content, that is, the Title and Html information. Use
            the 'TextMargin' property to set the vertical distance between
            the ToolTip's Title and Html.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.Tag">
            <summary>
            Gets or sets the object that contains programmer-supplied data associated with the ToolTip.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.ToolTipTitle">
            <summary>
            Gets or sets the global ToolTipTitle to be implemented
            across all associated controls within the parent control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.Opacity">
            <summary>
            Gets or sets the opacity of transparency-level of the ToolTip.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.InitialDelay">
            <summary>
            Gets or sets the length of time, in milliseconds, it takes before the ToolTip is shown.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.ReshowDelay">
            <summary>
            Gets or sets the length of time, in milliseconds, it takes before subsequent ToolTips are shown.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.AutoCloseDuration">
            <summary>
            Gets or sets the length of time, in milliseconds, that the ToolTip will be displayed.
            This property is enabled whenever the property 'AllowAutoClose' is set to true.
            The minimum required duration should be greater-than or equal-to 100 (milliseconds).
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.EntryAnimationSpeed">
            <summary>
            Gets or sets the ToolTip's entry animation speed in milliseconds. 
            (Default is 350 milliseconds)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.ExitAnimationSpeed">
            <summary>
            Gets or sets the ToolTip's exit animation speed in milliseconds. 
            (Default is 200 milliseconds)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.IconMargin">
            <summary>
            Gets or sets the margin (distance) between the ToolTipIcon and ToolTipTitle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.TextMargin">
            <summary>
            Gets or sets the ToolTip's Html margin, that is, 
            the distance between the Title and the Html. (Default is 2)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.BackColor">
            <summary>
            Gets or sets the ToolTip's background color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.BorderColor">
            <summary>
            Gets or sets the ToolTip's border color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.TitleForeColor">
            <summary>
            Gets or sets the ToolTip's Title Fore Color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.TextForeColor">
            <summary>
            Gets or sets the ToolTip's Html ForeColor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.TitleFont">
            <summary>
            Gets or sets the ToolTip's Title FontDefault.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.TextFont">
            <summary>
            Gets or sets the ToolTip's Html FontDefault.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.SetToolTip(System.Windows.Forms.Control,System.String)">
            <summary>
            Associates ToolTip text with the specified control.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.Control"/> to associate the ToolTip text with.</param>
            <param name="text">The ToolTip text to display when the pointer is on the control.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.GetToolTip(System.Windows.Forms.Control)">
            <summary>
            Retrieves the ToolTip text associated with the specified control.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Forms.Control"/> for which to retrieve the
            <see cref="T:KimTools.WinForms.KtTooltips"/> text.
            </param>
            <returns>A <see cref="T:System.String"/> containing the ToolTip text for the specified control.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.SetToolTipIcon(System.Windows.Forms.Control,System.Drawing.Image)">
            <summary>
            Associates ToolTip icon with the specified control.
            </summary>
            <param name="control">The <see cref="T:System.Windows.Forms.Control"/> to associate the ToolTip icon with.</param>
            <param name="text">The ToolTip icon to be applied when the ToolTip is displayed.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.GetToolTipIcon(System.Windows.Forms.Control)">
            <summary>
            Retrieves the ToolTip icon associated with the specified control.
            </summary>
            <param name="control">
            The <see cref="T:System.Windows.Forms.Control"/> for which to retrieve the <see cref="T:KimTools.WinForms.KtTooltips"/> icon.
            </param>
            <returns>A <see cref="T:System.String"/> containing the ToolTip icon for the specified control.</returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.Visible">
            <summary>
            Determines if the ToolTip is currently visible.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.DisplayControl">
            <summary>
            Gets or sets a control that will be displayed in the
            ToolTip in-place of the standard ToolTip's view.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.ClickToShowDisplayControl">
            <summary>
            Gets or sets a value indicating whether the attached
            <see cref="P:KimTools.WinForms.KtTooltips.DisplayControl"/> will be displayed
            once a user clicks on the associated ToolTip control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.GenerateAutoCloseDuration">
            <summary>
            When set to true, the closing duration will be automagically generated 
            based on the size of content, that is, the ToolTipTitle and ToolTipText.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.ToolTipPosition">
            <summary>
            Gets or sets the ToolTip's position within the client region.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.Name">
            <summary>
            Gets or sets the name of the component.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.Show(System.Windows.Forms.Control,System.String,KimTools.WinForms.KtColor)">
            <summary>
            Sets the ToolTip content to be associated with the specified control and displays the ToolTip.
            </summary>
            <param name="control">The control.</param>
            <param name="text">The text.</param>
            <param name="theme">The theme.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.Success(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the Success ToolTip content to be associated with the specified control and displays the ToolTip.
            </summary>
            <param name="control">The control bound or associated with the ToolTip.</param>
            <param name="text">A <see cref="T:System.String"/> containing the new ToolTip text.</param>
            <param name="title">A <see cref="T:System.String"/> containing the new ToolTip title.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.Error(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the error ToolTip content to be associated with the specified control and displays the ToolTip.
            </summary>
            <param name="control">The control bound or associated with the ToolTip.</param>
            <param name="text">A <see cref="T:System.String"/> containing the new ToolTip text.</param>
            <param name="title">A <see cref="T:System.String"/> containing the new ToolTip title.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.Info(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the info ToolTip content to be associated with the specified control and displays the ToolTip.
            </summary>
            <param name="control">The control bound or associated with the ToolTip.</param>
            <param name="text">A <see cref="T:System.String"/> containing the new ToolTip text.</param>
            <param name="title">A <see cref="T:System.String"/> containing the new ToolTip title.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.Warning(System.Windows.Forms.Control,System.String)">
            <summary>
            Sets the warning ToolTip content to be associated with the specified control and displays the ToolTip.
            </summary>
            <param name="control">The control bound or associated with the ToolTip.</param>
            <param name="text">A <see cref="T:System.String"/> containing the new ToolTip text.</param>
            <param name="title">A <see cref="T:System.String"/> containing the new ToolTip title.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.Show(System.Windows.Forms.Control,System.String,System.String,System.Drawing.Image,System.Drawing.Point)">
            <summary>
            Sets the ToolTip content to be associated with the specified control and displays the ToolTip.
            </summary>
            <param name="control">The control bound or associated with the ToolTip.</param>
            <param name="text">A <see cref="T:System.String"/> containing the new ToolTip text.</param>
            <param name="title">A <see cref="T:System.String"/> containing the new ToolTip title.</param>
            <param name="icon">An <see cref="T:System.Drawing.Image"/> to be applied as the ToolTip's icon.</param>
            <param name="location">The set ToolTip's location once displayed.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.Hide">
            <summary>
            Hides the ToolTip when displayed in any associated control(s).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.RemoveAll">
            <summary>
            Removes all the applied ToolTips currently associated with the ToolTip component.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.CanExtend(System.Object)">
            <summary>
            Returns true if the ToolTip can offer an extender property to the specified target
            component.
            </summary>
            <param name="extendee">The target object to add an extender property to.</param>
            <returns>
            Returns true if the <see cref="T:KimTools.WinForms.KtTooltips"/> class can offer 
            one or more extender properties; otherwise, false.
            </returns>
        </member>
        <member name="E:KimTools.WinForms.KtTooltips.Popup">
            <summary>
            Raised whenever the ToolTip is being shown.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltips.Closed">
            <summary>
            Raised whenever the ToolTip is being closed.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltips.PopupEventArgs">
            <summary>
            Provides data for the ToolTip's <see cref="E:KimTools.WinForms.KtTooltips.Popup"/> event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.PopupEventArgs.#ctor(System.Windows.Forms.Control,System.Windows.Forms.IWin32Window,System.Drawing.Size,System.Drawing.Point,System.String,System.String,System.Drawing.Image,System.Int32)">
            <summary>
            Provides data for the ToolTip's <see cref="E:KimTools.WinForms.KtTooltips.Popup"/> event.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.PopupEventArgs.AssociatedControl">
            <summary>
            Gets the control for which the <see cref="T:KimTools.WinForms.KtTooltips"/> is being drawn.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.PopupEventArgs.DisplayCount">
            <summary>
            Gets the number of times this <see cref="T:KimTools.WinForms.KtTooltips"/> 
            has been displayed to the user.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.PopupEventArgs.AssociatedWindow">
            <summary>
            Gets the window to which this <see cref="T:KimTools.WinForms.KtTooltips"/> is bound.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.PopupEventArgs.ToolTipSize">
            <summary>
            Gets the size of the <see cref="T:KimTools.WinForms.KtTooltips"/> when shown.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.PopupEventArgs.ToolTipLocation">
            <summary>
            Gets the location of the <see cref="T:KimTools.WinForms.KtTooltips"/> when shown.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.PopupEventArgs.ToolTipTitle">
            <summary>
            Gets the current ToolTip Title.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.PopupEventArgs.ToolTipText">
            <summary>
            Gets the current ToolTip Html.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltips.PopupEventArgs.ToolTipIcon">
            <summary>
            Gets the current ToolTip Icon.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltips.KtComponentActionList">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTooltips.KtComponentActionList"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.KtComponentActionList.GetSortedActionItems">
            <summary>
            Implementation of this abstract method creates Smart Tag items,
            associates their targets, and collects them into a list.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltips.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltips.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.HTMLUIEditor">
            <summary>
            Provides a standard HTML Dropdown UI Editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.BrushAdapter">
            <summary>
            Adapter for WinForms brushes objects for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.BrushAdapter._brush">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.BrushAdapter._dispose">
            <summary>
            If to dispose the brush when <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.BrushAdapter.Dispose"/> is called.<br/>
            Ignore dispose for cached brushes.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.BrushAdapter.#ctor(System.Drawing.Brush,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.BrushAdapter.Brush">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ContextMenuAdapter">
            <summary>
            Adapter for WinForms context menu for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ContextMenuAdapter._contextMenu">
            <summary>
            the underline win forms context menu
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ContextMenuAdapter.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ControlAdapter">
            <summary>
            Adapter for WinForms Control for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ControlAdapter._control">
            <summary>
            the underline win forms control.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ControlAdapter._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ControlAdapter.#ctor(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ControlAdapter.Control">
            <summary>
            Get the underline win forms control
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontAdapter">
            <summary>
            Adapter for WinForms FontDefault object for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontAdapter._font">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontAdapter._hFont">
            <summary>
            a handle to this FontDefault.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontAdapter._underlineOffset">
            <summary>
            the vertical offset of the font underline location from the top of the font.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontAdapter._height">
            <summary>
            Cached font height.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontAdapter._whitespaceWidth">
            <summary>
            Cached font whitespace width.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontAdapter.#ctor(System.Drawing.Font)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontAdapter.Font">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontAdapter.HFont">
            <summary>
            Get the handle to this FontDefault.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontAdapter.SetMetrics(System.Int32,System.Int32)">
            <summary>
            Set font metrics to be cached for the font for future use.
            </summary>
            <param name="height">the full height of the font</param>
            <param name="underlineOffset">the vertical offset of the font underline location from the top of the font.</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter">
            <summary>
            Adapter for WinForms FontDefault family object for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter._fontFamily">
            <summary>
            the underline win-forms font.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter.#ctor(System.Drawing.FontFamily)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.FontFamilyAdapter.FontFamily">
            <summary>
            the underline win-forms font family.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter">
            <summary>
            Adapter for WinForms Graphics for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._charFit">
            <summary>
            used for <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.MeasureString(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont,System.Double,System.Int32@,System.Double@)"/> calculation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._charFitWidth">
            <summary>
            used for <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.MeasureString(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont,System.Double,System.Int32@,System.Double@)"/> calculation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._characterRanges">
            <summary>
            Used for GDI+ measure string.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._stringFormat">
            <summary>
            The string format to use for measuring strings for GDI+ text rendering
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._stringFormat2">
            <summary>
            The string format to use for rendering strings for GDI+ text rendering
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._g">
            <summary>
            The wrapped WinForms graphics object
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._hdc">
            <summary>
            the initialized HDC used
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._releaseGraphics">
            <summary>
            if to release the graphics object on dispose
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter._setRtl">
            <summary>
            If text alignment was set to RTL
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.#cctor">
            <summary>
            Init static resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.#ctor(System.Drawing.Graphics,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
            <param name="g">the win forms graphics object to use</param>
            <param name="useGdiPlusTextRendering">Use GDI+ text rendering to measure/draw text</param>
            <param name="releaseGraphics">optional: if to release the graphics object on dispose (default - false)</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.ReleaseHdc">
            <summary>
            Release current HDC to be able to use <see cref="T:System.Drawing.Graphics"/> methods.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.InitHdc">
            <summary>
            Init HDC for the current graphics object to be used to call GDI directly.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetFont(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont)">
            <summary>
            Set a resource (e.g. a font) for the specified device context.
            WARNING: Calling FontDefault.ToHfont() many times without releasing the font handle crashes the app.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetTextColor(System.Drawing.Color)">
            <summary>
            Set the text color of the device context.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetRtlAlignGdi(System.Boolean)">
            <summary>
            Change text align to Left-to-Right or Right-to-Left if required.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.DrawTransparentText(System.IntPtr,System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont,System.Drawing.Point,System.Drawing.Size,System.Drawing.Color)">
            <summary>
            Special draw logic to draw transparent text using GDI.<br/>
            1. Create in-memory DC<br/>
            2. Copy background to in-memory DC<br/>
            3. Draw the text to in-memory DC<br/>
            4. Copy the in-memory DC to the proper location with alpha blend<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsAdapter.SetRtlAlignGdiPlus(System.Boolean)">
            <summary>
            Change text align to Left-to-Right or Right-to-Left if required.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter">
            <summary>
            Adapter for WinForms graphics path object for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter._graphicsPath">
            <summary>
            The actual WinForms graphics path instance.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter._lastPoint">
            <summary>
            the last point added to the path to begin next segment from
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter.GraphicsPath">
            <summary>
            The actual WinForms graphics path instance.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.GraphicsPathAdapter.GetStartAngle(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphicsPath.Corner)">
            <summary>
            Get arc start angle for the given corner.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ImageAdapter">
            <summary>
            Adapter for WinForms Image object for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ImageAdapter._image">
            <summary>
            the underline win-forms image.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ImageAdapter.#ctor(System.Drawing.Image)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Object"/> class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.ImageAdapter.Image">
            <summary>
            the underline win-forms image.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.PenAdapter">
            <summary>
            Adapter for WinForms pens objects for core.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.PenAdapter._pen">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.PenAdapter.#ctor(System.Drawing.Pen)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.PenAdapter.Pen">
            <summary>
            The actual WinForms brush instance.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.WinFormsAdapter">
            <summary>
            Adapter for WinForms platforms.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.WinFormsAdapter._instance">
            <summary>
            Singleton instance of global adapter.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.WinFormsAdapter.#ctor">
            <summary>
            Init installed font families and set default font families mapping.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Adapters.WinFormsAdapter.Instance">
            <summary>
            Singleton instance of global adapter.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper">
            <summary>
            Helper to encode and set HTML fragment to clipboard.<br/>
            See http://theartofdev.wordpress.com/2012/11/11/setting-html-and-plain-text-formatting-to-clipboard/.<br/>
            <seealso cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)"/>.
            </summary>
            <remarks>
            The MIT License (MIT) Copyright (c) 2014 Arthur Teplitzki.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper.Header">
            <summary>
            The string contains index references to other spots in the string, so we need placeholders so we can compute the offsets. <br/>
            The <![CDATA[<<<<<<<]]>_ strings are just placeholders. We'll back-patch them actual values afterwards. <br/>
            The string layout (<![CDATA[<<<]]>) also ensures that it can't appear in the body of the html because the <![CDATA[<]]> <br/>
            character must be escaped. <br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper.StartFragment">
            <summary>
            html comment to point the beginning of html fragment
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper.EndFragment">
            <summary>
            html comment to point the end of html fragment
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper._byteCount">
            <summary>
            Used to calculate characters byte count in UTF-8
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)">
            <summary>
            Create <see cref="T:System.Windows.Forms.DataObject"/> with given html and plain-text ready to be used for clipboard or drag and drop.<br/>
            Handle missing <![CDATA[<html>]]> tags, specified start\end segments and Unicode characters.
            </summary>
            <remarks>
            <para>
            Windows Clipboard works with UTF-8 Unicode encoding while .NET strings use with UTF-16 so for clipboard to correctly
            decode Unicode string added to it from .NET we needs to be re-encoded it using UTF-8 encoding.
            </para>
            <para>
            Builds the CF_HTML header correctly for all possible HTMLs<br/>
            If given html contains start/end fragments then it will use them in the header:
            <code><![CDATA[<html><body><!--StartFragment-->hello <b>world</b><!--EndFragment--></body></html>]]></code>
            If given html contains html/body tags then it will inject start/end fragments to exclude html/body tags:
            <code><![CDATA[<html><body>hello <b>world</b></body></html>]]></code>
            If given html doesn't contain html/body tags then it will inject the tags and start/end fragments properly:
            <code><![CDATA[hello <b>world</b>]]></code>
            In all cases creating a proper CF_HTML header:<br/>
            <code>
            <![CDATA[
            Version:1.0
            StartHTML:000000177
            EndHTML:000000329
            StartFragment:000000277
            EndFragment:000000295
            StartSelection:000000277
            EndSelection:000000277
            <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
            <html><body><!--StartFragment-->hello <b>world</b><!--EndFragment--></body></html>
            ]]>
            </code>
            See format specification here: http://msdn.microsoft.com/library/default.asp?url=/workshop/networking/clipboard/htmlclipboard.asp
            </para>
            </remarks>
            <param name="html">a html fragment</param>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CopyToClipboard(System.String,System.String)">
            <summary>
            Clears clipboard and sets the given HTML and plain text fragment to the clipboard, providing additional meta-information for HTML.<br/>
            See <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CreateDataObject(System.String,System.String)"/> for HTML fragment details.<br/>
            </summary>
            <example>
            ClipboardHelper.CopyToClipboard("Hello <b>World</b>", "Hello World");
            </example>
            <param name="html">a html fragment</param>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper.CopyToClipboard(System.String)">
            <summary>
            Clears clipboard and sets the given plain text fragment to the clipboard.<br/>
            </summary>
            <param name="plainText">the plain text</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper.GetHtmlDataString(System.String)">
            <summary>
            Generate HTML fragment data string with header that is required for the clipboard.
            </summary>
            <param name="html">the html to generate for</param>
            <returns>the resulted string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.ClipboardHelper.GetByteCount(System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            Calculates the number of bytes produced by encoding the string in the string builder in UTF-8 and not .NET default string encoding.
            </summary>
            <param name="sb">the string builder to count its string</param>
            <param name="start">optional: the start index to calculate from (default - start of string)</param>
            <param name="end">optional: the end index to calculate to (default - end of string)</param>
            <returns>the number of bytes required to encode the string in UTF-8</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils">
            <summary>
            Utilities for converting WinForms entities to HtmlRenderer core entities.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.PointF)">
            <summary>
            Convert from WinForms point to core point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.Convert(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint[])">
            <summary>
            Convert from WinForms point to core point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.Convert(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Convert from core point to WinForms point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.ConvertRound(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Convert from core point to WinForms point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.SizeF)">
            <summary>
            Convert from WinForms size to core size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.Convert(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Convert from core size to WinForms size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.ConvertRound(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Convert from core size to WinForms size.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.RectangleF)">
            <summary>
            Convert from WinForms rectangle to core rectangle.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.Convert(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Convert from core rectangle to WinForms rectangle.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.ConvertRound(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Convert from core rectangle to WinForms rectangle.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.Convert(System.Drawing.Color)">
            <summary>
            Convert from WinForms color to core color.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.Convert(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Convert from core color to WinForms color.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Utils.CreateGraphics(System.Windows.Forms.Control)">
            <summary>
            mono has issue throwing exception for no reason.
            </summary>
            <param name="control">the control to create graphics object from</param>
            <returns>new graphics object or null in mono if failed</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Win32Utils">
            <summary>
            Utility for Win32 API.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Win32Utils.BitBltCopy">
            <summary>
            Const for BitBlt copy raster-operation code.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Win32Utils.BitBltPaint">
            <summary>
            Const for BitBlt paint raster-operation code.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Win32Utils.CreateMemoryHdc(System.IntPtr,System.Int32,System.Int32,System.IntPtr@)">
            <summary>
            Create a compatible memory HDC from the given HDC.<br/>
            The memory HDC can be rendered into without effecting the original HDC.<br/>
            The returned memory HDC and <paramref name="dib"/> must be released using <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Win32Utils.ReleaseMemoryHdc(System.IntPtr,System.IntPtr)"/>.
            </summary>
            <param name="hdc">the HDC to create memory HDC from</param>
            <param name="width">the width of the memory HDC to create</param>
            <param name="height">the height of the memory HDC to create</param>
            <param name="dib">returns used bitmap memory section that must be released when done with memory HDC</param>
            <returns>memory HDC</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Win32Utils.ReleaseMemoryHdc(System.IntPtr,System.IntPtr)">
            <summary>
            Release the given memory HDC and dib section created from <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Win32Utils.CreateMemoryHdc(System.IntPtr,System.Int32,System.Int32,System.IntPtr@)"/>.
            </summary>
            <param name="memoryHdc">Memory HDC to release</param>
            <param name="dib">bitmap section to release</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Win32Utils.GetWindowRect(System.IntPtr,System.Drawing.Rectangle@)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window. The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
            </summary>
            <remarks>
            In conformance with conventions for the RECT structure, the bottom-right coordinates of the returned rectangle are exclusive. In other words, 
            the pixel at (right, bottom) lies immediately outside the rectangle.
            </remarks>
            <param name="hWnd">A handle to the window.</param>
            <param name="lpRect">A pointer to a RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.Utilities.Win32Utils.GetWindowRectangle(System.IntPtr)">
            <summary>
            Retrieves the dimensions of the bounding rectangle of the specified window. The dimensions are given in screen coordinates that are relative to the upper-left corner of the screen.
            </summary>
            <remarks>
            In conformance with conventions for the RECT structure, the bottom-right coordinates of the returned rectangle are exclusive. In other words, 
            the pixel at (right, bottom) lies immediately outside the rectangle.
            </remarks>
            <param name="handle">A handle to the window.</param>
            <returns>RECT structure that receives the screen coordinates of the upper-left and lower-right corners of the window.</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer">
            <summary>
            Low level handling of Html Renderer logic, this class is used by <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.HtmlParser"/>, 
            <see cref="!:HtmlLabel"/>, <see cref="!:HtmlToolTip"/> and <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <seealso cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.HtmlContainerInt"/>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer._htmlContainerInt">
            <summary>
            The internal core html container
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer._useGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.Refresh">
            <summary>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.ScrollChange">
            <summary>
            Raised when Html Renderer request scroll to specific location.<br/>
            This can occur on document anchor click.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.StylesheetLoad">
            <summary>
            Raised when a stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or Uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.HtmlContainerInt">
            <summary>
            The internal core html container
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.UseGdiPlusTextRendering">
            <summary>
            Use GDI+ text rendering to measure/draw text.<br/>
            </summary>
            <remarks>
            <para>
            GDI+ text rendering is less smooth than GDI text rendering but it natively supports alpha channel
            thus allows creating transparent images.
            </para>
            <para>
            While using GDI+ text rendering you can control the text rendering using <see cref="P:System.Drawing.Graphics.TextRenderingHint"/>, note that
            using <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/> doesn't work well with transparent background.
            </para>
            </remarks>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.CssData">
            <summary>
            the parsed stylesheet data used for handling the html
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default - false).
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.AvoidAsyncImagesLoading">
            <summary>
            Gets or sets a value indicating if image asynchronous loading should be avoided (default - false).<br/>
            True - images are loaded synchronously during html parsing.<br/>
            False - images are loaded asynchronously to html parsing when downloaded from URL or loaded from disk.<br/>
            </summary>
            <remarks>
            Asynchronously image loading allows to unblock html rendering while image is downloaded or loaded from disk using IO 
            ports to achieve better performance.<br/>
            Asynchronously image loading should be avoided when the full html content must be available during render, like render to image.
            </remarks>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.AvoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            True - images are loaded as soon as the html is parsed.<br/>
            False - images that are not visible because of scroll location are not loaded until they are scrolled to.
            </summary>
            <remarks>
            Images late loading improve performance if the page contains image outside the visible scroll area, especially if there is large 
            amount of images, as all image loading is delayed (downloading and loading into memory).<br/>
            Late image loading may effect the layout and actual size as image without set size will not have actual size until they are loaded
            resulting in layout change during user scroll.<br/>
            Early image loading may also effect the layout if image without known size above the current scroll location are loaded as they
            will push the html elements down.
            </remarks>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default - true)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.ScrollOffset">
            <summary>
            The scroll offset of the html.<br/>
            This will adjust the rendered html by the given offset so the content will be "scrolled".<br/>
            </summary>
            <example>
            Element that is rendered at location (50,100) with offset of (0,200) will not be rendered as it
            will be at -100 therefore outside the client rectangle.
            </example>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.Location">
            <summary>
            The top-left most location of the rendered html.<br/>
            This will offset the top-left corner of the rendered html.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.MaxSize">
            <summary>
            The max width and height of the rendered html.<br/>
            The max width will effect the html layout wrapping lines, resize images and tables where possible.<br/>
            The max height does NOT effect layout, but will not render outside it (clip).<br/>
            <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.ActualSize"/> can be exceed the max size by layout restrictions (unwrappable line, set image size, etc.).<br/>
            Set zero for unlimited (width\height separately).<br/>
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.ActualSize">
            <summary>
            The actual size of the rendered html (after layout)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.SetHtml(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData)">
            <summary>
            Init with optional document and stylesheet.
            </summary>
            <param name="htmlSource">the html to init with, init empty if not given</param>
            <param name="baseCssData">optional: the stylesheet to init with, init default if not given</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.GetHtml(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle)">
            <summary>
            Get html from the current DOM tree with style if requested.
            </summary>
            <param name="styleGen">Optional: controls the way styles are generated when html is generated (default: <see cref="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle.Inline"/>)</param>
            <returns>generated html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.GetAttributeAt(System.Drawing.Point,System.String)">
            <summary>
            Get attribute value of element at the given x,y location by given key.<br/>
            If more than one element exist with the attribute at the location the inner most is returned.
            </summary>
            <param name="location">the location to find the attribute at</param>
            <param name="attribute">the attribute key to get value by</param>
            <returns>found attribute value or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.GetLinks">
            <summary>
            Get all the links in the HTML with the element rectangle and href data.
            </summary>
            <returns>collection of all the links in the HTML</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.GetLinkAt(System.Drawing.Point)">
            <summary>
            Get css link href at the given x,y location.
            </summary>
            <param name="location">the location to find the link at</param>
            <returns>css link href if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br/>
            Element if found by id (id attribute on the html element).<br/>
            Note: to get the screen rectangle you need to adjust by the hosting control.<br/>
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.PerformLayout(System.Drawing.Graphics)">
            <summary>
            Measures the bounds of box and children, recursively.
            </summary>
            <param name="g">Device context to draw</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.PerformPaint(System.Drawing.Graphics)">
            <summary>
            Render the html using the given device.
            </summary>
            <param name="g">the device to use to render</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.HandleMouseDown(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.HandleMouseUp(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.HandleMouseDoubleClick(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse double click to select word under the mouse.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="e">mouse event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.HandleMouseMove(System.Windows.Forms.Control,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.HandleMouseLeave(System.Windows.Forms.Control)">
            <summary>
            Handle mouse leave to handle hover cursor.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.HandleKeyDown(System.Windows.Forms.Control,System.Windows.Forms.KeyEventArgs)">
            <summary>
            Handle key down event for selection and copy.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the pressed key</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.CreateMouseEvent(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Create HtmlRenderer mouse event from win forms mouse event.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer.CreateKeyEevent(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Create HtmlRenderer key event from win forms key event.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender">
            <summary>
            Standalone static class for simple and direct HTML rendering.<br/>
            For WinForms UI prefer using HTML controls: <see cref="!:HtmlPanel"/> or <see cref="!:HtmlLabel"/>.<br/>
            For low-level control and performance consider using <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer"/>.<br/>
            </summary>
            <remarks>
            <para>
            <b>GDI vs. GDI+ text rendering</b><br/>
            Windows supports two text rendering technologies: GDI and GDI+.<br/> 
            GDI is older, has better performance and looks better on standard monitors but doesn't support alpha channel for transparency.<br/> 
            GDI+ is newer, device independent so work better for printers but is slower and looks worse on monitors.<br/>
            HtmlRender supports both GDI and GDI+ text rendering to accommodate different needs, GDI+ text rendering methods have "GdiPlus" suffix
            in their name where GDI do not.<br/>
            </para>
            <para>
            <b>Rendering to image</b><br/>
            See https://htmlrenderer.codeplex.com/wikipage?title=Image%20generation <br/>
            Because of GDI text rendering issue with alpha channel clear type text rendering rendering to image requires special handling.<br/>
            <u>Solid color background -</u> generate an image where the background is filled with solid color and all the html is rendered on top
            of the background color, GDI text rendering will be used. (RenderToImage method where the first argument is html string)<br/>
            <u>Image background -</u> render html on top of existing image with whatever currently exist but it cannot have transparent pixels, 
            GDI text rendering will be used. (RenderToImage method where the first argument is Image object)<br/>
            <u>Transparent background -</u> render html to empty image using GDI+ text rendering, the generated image can be transparent.
            Html rendering can be controlled using <see cref="T:System.Drawing.Text.TextRenderingHint"/>, note that <see cref="F:System.Drawing.Text.TextRenderingHint.ClearTypeGridFit"/>
            doesn't render well on transparent background. (RenderToImageGdiPlus method)<br/>
            </para>
            <para>
            <b>Overwrite stylesheet resolution</b><br/>
            Exposed by optional "stylesheetLoad" delegate argument.<br/>
            Invoked when a stylesheet is about to be loaded by file path or URL in 'link' element.<br/>
            Allows to overwrite the loaded stylesheet by providing the stylesheet data manually, or different source (file or URL) to load from.<br/>
            Example: The stylesheet 'href' can be non-valid URI string that is interpreted in the overwrite delegate by custom logic to pre-loaded stylesheet object<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <b>Overwrite image resolution</b><br/>
            Exposed by optional "imageLoad" delegate argument.<br/>
            Invoked when an image is about to be loaded by file path, URL or inline data in 'img' element or background-image CSS style.<br/>
            Allows to overwrite the loaded image by providing the image object manually, or different source (file or URL) to load from.<br/>
            Example: image 'src' can be non-valid string that is interpreted in the overwrite delegate by custom logic to resource image object<br/>
            Example: image 'src' in the html is relative - the overwrite intercepts the load and provide full source URL to load the image from<br/>
            Example: image download requires authentication - the overwrite intercepts the load, downloads the image to disk using custom code and provide 
            file path to load the image from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            Note: Cannot use asynchronous scheme overwrite scheme.<br/>
            </para>
            </remarks>
            <example>
            <para>
            <b>Simple rendering</b><br/>
            HtmlRender.Render(g, "<![CDATA[<div>Hello <b>World</b></div>]]>");<br/>
            HtmlRender.Render(g, "<![CDATA[<div>Hello <b>World</b></div>]]>", 10, 10, 500, CssData.Parse("body {font-size: 20px}")");<br/>
            </para>
            <para>
            <b>Image rendering</b><br/>
            HtmlRender.RenderToImage("<![CDATA[<div>Hello <b>World</b></div>]]>", new Size(600,400));<br/>
            HtmlRender.RenderToImage("<![CDATA[<div>Hello <b>World</b></div>]]>", 600);<br/>
            HtmlRender.RenderToImage(existingImage, "<![CDATA[<div>Hello <b>World</b></div>]]>");<br/>
            </para>
            </example>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.AddFontFamily(System.Drawing.FontFamily)">
            <summary>
            Adds a font family to be used in html rendering.<br/>
            The added font will be used by all rendering function including <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer"/> and all WinForms controls.
            </summary>
            <remarks>
            The given font family instance must be remain alive while the renderer is in use.<br/>
            If loaded to <see cref="T:System.Drawing.Text.PrivateFontCollection"/> then the collection must be alive.<br/>
            If loaded from file then the file must not be deleted.
            </remarks>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <remarks>
            This fonts mapping can be used as a fallback in case the requested font is not installed in the client system.
            </remarks>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.ParseStyleSheet(System.String,System.Boolean)">
            <summary>
            Parse the given stylesheet to <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData"/> object.<br/>
            If <paramref name="combineWithDefault"/> is true the parsed css blocks are added to the 
            default css data (as defined by W3), merged if class name already exists. If false only the data in the given stylesheet is returned.
            </summary>
            <seealso cref="!:http://www.w3.org/TR/CSS21/sample.html"/>
            <param name="stylesheet">the stylesheet source to parse</param>
            <param name="combineWithDefault">true - combine the parsed css data with default css data, false - return only the parsed css data</param>
            <returns>the parsed css data</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.Measure(System.Drawing.Graphics,System.String,System.Single,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given max width restriction.<br/>
            If no max width restriction is given the layout will use the maximum possible width required by the content,
            it can be the longest text line or full image width.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.MeasureGdiPlus(System.Drawing.Graphics,System.String,System.Single,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given max width restriction.<br/>
            If no max width restriction is given the layout will use the maximum possible width required by the content,
            it can be the longest text line or full image width.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.Render(System.Drawing.Graphics,System.String,System.Single,System.Single,System.Single,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max width restriction.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="left">optional: the left most location to start render the html at (default - 0)</param>
            <param name="top">optional: the top most location to start render the html at (default - 0)</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.Render(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI text rendering, note <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> has no effect.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderGdiPlus(System.Drawing.Graphics,System.String,System.Single,System.Single,System.Single,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="left">optional: the left most location to start render the html at (default - 0)</param>
            <param name="top">optional: the top most location to start render the html at (default - 0)</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderGdiPlus(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            Use GDI+ text rending, use <see cref="P:System.Drawing.Graphics.TextRenderingHint"/> to control text rendering.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.Drawing.Image,System.String,System.Drawing.PointF,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML on top of the given image.<br/>
            <paramref name="image"/> will contain the rendered html in it on top of original content.<br/>
            <paramref name="image"/> must not contain transparent pixels as it will corrupt the rendered html text.<br/>
            The HTML will be layout by the given image size but may be clipped if cannot fit.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="image">the image to render the html on</param>
            <param name="html">HTML source to render</param>
            <param name="location">optional: the top-left most location to start render the html at (default - 0,0)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.Drawing.Image,System.String,System.Drawing.PointF,System.Drawing.SizeF,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML on top of the given image.<br/>
            <paramref name="image"/> will contain the rendered html in it on top of original content.<br/>
            <paramref name="image"/> must not contain transparent pixels as it will corrupt the rendered html text.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="image">the image to render the html on</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.String,System.Drawing.Size,System.Drawing.Color,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of the requested size.<br/>
            The HTML will be layout by the given size but will be clipped if cannot fit.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="size">The size of the image to render into, layout html by width and clipped by height</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.String,System.Int32,System.Int32,System.Drawing.Color,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by max width/height and HTML layout.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxHeight"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: the max width of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="maxHeight">optional: the max height of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderToImage(System.String,System.Drawing.Size,System.Drawing.Size,System.Drawing.Color,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by min/max width/height and HTML layout.<br/>
            If <paramref name="maxSize.Width.Width"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize.Height.Height"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            If <paramref name="minSize"/> (Width/Height) is above zero the rendered image will not be smaller than the given min size.<br/>
            <p>
            Limitation: The image cannot have transparent background, by default it will be white.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </p>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="minSize">optional: the min size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">optional: the max size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <param name="backgroundColor">optional: the color to fill the image with (default - white)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">if <paramref name="backgroundColor"/> is <see cref="P:System.Drawing.Color.Transparent"/></exception>.
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Drawing.Size,System.Drawing.Text.TextRenderingHint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of the requested size.<br/>
            The HTML will be layout by the given size but will be clipped if cannot fit.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="size">The size of the image to render into, layout html by width and clipped by height</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Int32,System.Int32,System.Drawing.Text.TextRenderingHint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by max width/height and HTML layout.<br/>
            If <paramref name="maxWidth"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxHeight"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: the max width of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="maxHeight">optional: the max height of the rendered html, if not zero and html cannot be layout within the limit it will be clipped</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderToImageGdiPlus(System.String,System.Drawing.Size,System.Drawing.Size,System.Drawing.Text.TextRenderingHint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML into a new image of unknown size that will be determined by min/max width/height and HTML layout.<br/>
            If <paramref name="maxSize.Width.Width"/> is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize.Height.Height"/> is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            If <paramref name="minSize"/> (Width/Height) is above zero the rendered image will not be smaller than the given min size.<br/>
            The generated image have transparent background that the html is rendered on.<br/>
            GDI+ text rending can be controlled by providing <see cref="T:System.Drawing.Text.TextRenderingHint"/>.<br/>
            See "Rendering to image" remarks section on <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender"/>.<br/>
            </summary>
            <param name="html">HTML source to render</param>
            <param name="minSize">optional: the min size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">optional: the max size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <param name="textRenderingHint">optional: (default - SingleBitPerPixelGridFit)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the generated image of the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.Measure(System.Drawing.Graphics,System.String,System.Single,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.Boolean,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Measure the size (width and height) required to draw the given html under given width and height restrictions.<br/>
            </summary>
            <param name="g">Device to use for measure</param>
            <param name="html">HTML source to render</param>
            <param name="maxWidth">optional: bound the width of the html to render in (default - 0, unlimited)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the size required for the html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.MeasureHtmlByRestrictions(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlContainer,System.Drawing.Size,System.Drawing.Size)">
            <summary>
            Measure the size of the html by performing layout under the given restrictions.
            </summary>
            <param name="htmlContainer">the html to calculate the layout for</param>
            <param name="minSize">the minimal size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">the maximum size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <returns>return: the size of the html to be rendered within the min/max limits</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderClip(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.Boolean,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Clip the graphics so the html will not be rendered outside the max height bound given.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.RenderHtml(System.Drawing.Graphics,System.String,System.Drawing.PointF,System.Drawing.SizeF,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.Boolean,System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs},System.EventHandler{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs})">
            <summary>
            Renders the specified HTML source on the specified location and max size restriction.<br/>
            If <paramref name="maxSize"/>.Width is zero the html will use all the required width, otherwise it will perform line 
            wrap as specified in the html<br/>
            If <paramref name="maxSize"/>.Height is zero the html will use all the required height, otherwise it will clip at the
            given max height not rendering the html below it.<br/>
            Returned is the actual width and height of the rendered html.<br/>
            </summary>
            <param name="g">Device to render with</param>
            <param name="html">HTML source to render</param>
            <param name="location">the top-left most location to start render the html at</param>
            <param name="maxSize">the max size of the rendered html (if height above zero it will be clipped)</param>
            <param name="cssData">optional: the style to use for html rendering (default - use W3 default style)</param>
            <param name="useGdiPlusTextRendering">true - use GDI+ text rendering, false - use GDI text rendering</param>
            <param name="stylesheetLoad">optional: can be used to overwrite stylesheet resolution logic</param>
            <param name="imageLoad">optional: can be used to overwrite image resolution logic</param>
            <returns>the actual size of the rendered html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.WinForms.HtmlRender.CopyBufferToImage(System.IntPtr,System.Drawing.Image)">
            <summary>
            Copy all the bitmap bits from memory bitmap buffer to the given image.
            </summary>
            <param name="memoryHdc">the source memory bitmap buffer to copy from</param>
            <param name="image">the destination bitmap image to copy to</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor">
            <summary>
            Represents an ARGB (alpha, red, green, blue) color.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.Empty">
            <summary>
                Represents a color that is null.
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.Transparent">
            <summary>
            Gets a system-defined color.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.Black">
            <summary>
                Gets a system-defined color that has an ARGB value of #FF000000.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.White">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFFFFFFF.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.WhiteSmoke">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFF5F5F5.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.LightGray">
            <summary>
            Gets a system-defined color that has an ARGB value of #FFD3D3D3.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.R">
            <summary>
                Gets the red component value of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.G">
            <summary>
                Gets the green component value of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.B">
            <summary>
                Gets the blue component value of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.A">
            <summary>
                Gets the alpha component value of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.IsEmpty">
            <summary>
                Specifies whether this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure is uninitialized.
            </summary>
            <returns>
                This property returns true if this color is uninitialized; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.op_Equality(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
                Tests whether two specified <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structures are equivalent.
            </summary>
            <returns>
                true if the two <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structures are equal; otherwise, false.
            </returns>
            <param name="left">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> that is to the left of the equality operator.
            </param>
            <param name="right">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> that is to the right of the equality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.op_Inequality(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
                Tests whether two specified <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structures are different.
            </summary>
            <returns>
                true if the two <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structures are different; otherwise, false.
            </returns>
            <param name="left">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> that is to the left of the inequality operator.
            </param>
            <param name="right">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> that is to the right of the inequality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure from the four ARGB component (alpha, red, green, and blue) values. Although this method allows a 32-bit value to be passed for each component, the value of each component is limited to 8 bits.
            </summary>
            <returns>
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> that this method creates.
            </returns>
            <param name="alpha">The alpha component. Valid values are 0 through 255. </param>
            <param name="red">The red component. Valid values are 0 through 255. </param>
            <param name="green">The green component. Valid values are 0 through 255. </param>
            <param name="blue">The blue component. Valid values are 0 through 255. </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="alpha" />, <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.
            </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.FromArgb(System.Int32,System.Int32,System.Int32)">
            <summary>
                Creates a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure from the specified 8-bit color values (red, green, and blue). The alpha value is implicitly 255 (fully opaque). Although this method allows a 32-bit value to be passed for each color component, the value of each component is limited to 8 bits.
            </summary>
            <returns>
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> that this method creates.
            </returns>
            <param name="red">
                The red component value for the new <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <param name="green">
                The green component value for the new <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <param name="blue">
                The blue component value for the new <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" />. Valid values are 0 through 255.
            </param>
            <exception cref="T:System.ArgumentException">
                <paramref name="red" />, <paramref name="green" />, or <paramref name="blue" /> is less than 0 or greater than 255.
            </exception>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.Equals(System.Object)">
            <summary>
                Tests whether the specified object is a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure and is equivalent to this
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" />
                structure.
            </summary>
            <returns>
                true if <paramref name="obj" /> is a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure equivalent to this
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" />
                structure; otherwise, false.
            </returns>
            <param name="obj">The object to test. </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure.
            </summary>
            <returns>
                An integer value that specifies the hash code for this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor.ToString">
            <summary>
                Converts this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor" /> structure to a human-readable string.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RDashStyle">
            <summary>
            Specifies the style of dashed lines drawn with a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RPen"/> object.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RFontStyle">
            <summary>
            Specifies style information applied to text.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RKeyEvent">
            <summary>
            Even class for handling keyboard events in <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt"/>.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RKeyEvent._control">
            <summary>
            is control is pressed
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RKeyEvent._aKeyCode">
            <summary>
            is 'A' key is pressed
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RKeyEvent._cKeyCode">
            <summary>
            is 'C' key is pressed
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RKeyEvent.#ctor(System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RKeyEvent.Control">
            <summary>
            is control is pressed
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RKeyEvent.AKeyCode">
            <summary>
            is 'A' key is pressed
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RKeyEvent.CKeyCode">
            <summary>
            is 'C' key is pressed
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RMouseEvent">
            <summary>
            Even class for handling keyboard events in <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt"/>.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RMouseEvent._leftButton">
            <summary>
            Is the left mouse button participated in the event
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RMouseEvent.#ctor(System.Boolean)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RMouseEvent.LeftButton">
            <summary>
            Is the left mouse button participated in the event
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint">
            <summary>
                Represents an ordered pair of floating-point x- and y-coordinates that defines a point in a two-dimensional plane.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.Empty">
            <summary>
                Represents a new instance of the <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> class with member data left uninitialized.
            </summary>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> class with the specified coordinates.
            </summary>
            <param name="x">The horizontal position of the point. </param>
            <param name="y">The vertical position of the point. </param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.IsEmpty">
            <summary>
                Gets a value indicating whether this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> is empty.
            </summary>
            <returns>
                true if both <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.Y" />
                are 0; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.X">
            <summary>
                Gets or sets the x-coordinate of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />.
            </summary>
            <returns>
                The x-coordinate of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.Y">
            <summary>
                Gets or sets the y-coordinate of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />.
            </summary>
            <returns>
                The y-coordinate of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.op_Addition(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates the <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> by the specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to add to the x- and y-coordinates of the
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />
                .
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.op_Subtraction(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> by the negative of a specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to subtract from the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.op_Equality(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Compares two <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> structures. The result specifies whether the values of the
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.X" />
                and <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.Y" /> properties of the two
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />
                structures are equal.
            </summary>
            <returns>
                true if the <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.Y" />
                values of the left and right
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />
                structures are equal; otherwise, false.
            </returns>
            <param name="left">
                A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <param name="right">
                A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.op_Inequality(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Determines whether the coordinates of the specified points are not equal.
            </summary>
            <returns>
                true to indicate the <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.X" /> and
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.Y" />
                values of <paramref name="left" /> and
                <paramref
                    name="right" />
                are not equal; otherwise, false.
            </returns>
            <param name="left">
                A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <param name="right">
                A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> to compare.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.Add(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates a given <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> by a specified
                <see
                    cref="T:System.Drawing.SizeF" />
                .
            </summary>
            <returns>
                The translated <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to add to the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.Subtract(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Translates a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> by the negative of a specified size.
            </summary>
            <returns>
                The translated <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <param name="pt">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> to translate.
            </param>
            <param name="sz">
                The <see cref="T:System.Drawing.SizeF" /> that specifies the numbers to subtract from the coordinates of
                <paramref
                    name="pt" />
                .
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.Equals(System.Object)">
            <summary>
                Specifies whether this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> contains the same coordinates as the specified
                <see
                    cref="T:System.Object" />
                .
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> and has the same coordinates as this
                <see
                    cref="T:System.Drawing.Point" />
                .
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>
                An integer value that specifies a hash value for this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint.ToString">
            <summary>
                Converts this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> to a human readable string.
            </summary>
            <returns>
                A string that represents this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" />.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect">
            <summary>
            Stores a set of four floating-point numbers that represent the location and size of a rectangle. 
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Empty">
            <summary>
                Represents an instance of the <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> class with its members uninitialized.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> class with the specified location and size.
            </summary>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle. </param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle. </param>
            <param name="width">The width of the rectangle. </param>
            <param name="height">The height of the rectangle. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> class with the specified location and size.
            </summary>
            <param name="location">A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> that represents the upper-left corner of the rectangular region.</param>
            <param name="size">A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> that represents the width and height of the rectangular region.</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Location">
            <summary>
            Gets or sets the coordinates of the upper-left corner of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> that represents the upper-left corner of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.</returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Size">
            <summary>
            Gets or sets the size of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" />.
            </summary>
            <returns>A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> that represents the width and height of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.</returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.X">
            <summary>
                Gets or sets the x-coordinate of the upper-left corner of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate of the upper-left corner of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Y">
            <summary>
                Gets or sets the y-coordinate of the upper-left corner of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate of the upper-left corner of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Width">
            <summary>
                Gets or sets the width of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The width of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Height">
            <summary>
                Gets or sets the height of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The height of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Left">
            <summary>
                Gets the x-coordinate of the left edge of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate of the left edge of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Top">
            <summary>
                Gets the y-coordinate of the top edge of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate of the top edge of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Right">
            <summary>
                Gets the x-coordinate that is the sum of <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.X" /> and
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Width" />
                of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The x-coordinate that is the sum of <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.X" /> and
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Width" />
                of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Bottom">
            <summary>
                Gets the y-coordinate that is the sum of <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Y" /> and
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Height" />
                of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                The y-coordinate that is the sum of <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Y" /> and
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Height" />
                of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.IsEmpty">
            <summary>
                Tests whether the <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Width" /> or
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Height" />
                property of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> has a value of zero.
            </summary>
            <returns>
                This property returns true if the <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Width" /> or
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Height" />
                property of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> has a value of zero; otherwise, false.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.op_Equality(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Tests whether two <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structures have equal location and size.
            </summary>
            <returns>
                This operator returns true if the two specified <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structures have equal
                <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.X" />, <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Y" />, <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Width" />, and <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Height" /> properties.
            </returns>
            <param name="left">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the left of the equality operator.
            </param>
            <param name="right">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the right of the equality operator.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.op_Inequality(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Tests whether two <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structures differ in location or size.
            </summary>
            <returns>
                This operator returns true if any of the <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.X" /> ,
                <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Y" />, <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Width" />, or <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Height" />
                properties of the two <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structures are unequal; otherwise false.
            </returns>
            <param name="left">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the left of the inequality operator.
            </param>
            <param name="right">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure that is to the right of the inequality operator.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.FromLTRB(System.Double,System.Double,System.Double,System.Double)">
            <summary>
                Creates a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure with upper-left corner and lower-right corner at the specified locations.
            </summary>
            <returns>
                The new <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> that this method creates.
            </returns>
            <param name="left">The x-coordinate of the upper-left corner of the rectangular region. </param>
            <param name="top">The y-coordinate of the upper-left corner of the rectangular region. </param>
            <param name="right">The x-coordinate of the lower-right corner of the rectangular region. </param>
            <param name="bottom">The y-coordinate of the lower-right corner of the rectangular region. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Equals(System.Object)">
            <summary>
                Tests whether <paramref name="obj" /> is a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> with the same location and size of this
                <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" />.
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> and its X, Y, Width, and Height properties are equal to the corresponding properties of this
                <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" />; otherwise, false.
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Contains(System.Double,System.Double)">
            <summary>
                Determines if the specified point is contained within this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                This method returns true if the point defined by <paramref name="x" /> and <paramref name="y" /> is contained within this
                <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" />
                structure; otherwise false.
            </returns>
            <param name="x">The x-coordinate of the point to test. </param>
            <param name="y">The y-coordinate of the point to test. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Contains(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Determines if the specified point is contained within this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure.
            </summary>
            <returns>
                This method returns true if the point represented by the <paramref name="pt" /> parameter is contained within this
                <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" />
                structure; otherwise false.
            </returns>
            <param name="pt">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> to test.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Contains(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Determines if the rectangular region represented by <paramref name="rect" /> is entirely contained within this
                <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" />
                structure.
            </summary>
            <returns>
                This method returns true if the rectangular region represented by <paramref name="rect" /> is entirely contained within the rectangular region represented by this
                <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" />
                ; otherwise false.
            </returns>
            <param name="rect">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> to test.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Inflate(System.Double,System.Double)">
            <summary>
                Inflates this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure by the specified amount.
            </summary>
            <param name="x">
                The amount to inflate this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure horizontally.
            </param>
            <param name="y">
                The amount to inflate this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure vertically.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Inflate(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Inflates this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> by the specified amount.
            </summary>
            <param name="size">The amount to inflate this rectangle. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Inflate(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Double,System.Double)">
            <summary>
                Creates and returns an inflated copy of the specified <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure. The copy is inflated by the specified amount. The original rectangle remains unmodified.
            </summary>
            <returns>
                The inflated <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" />.
            </returns>
            <param name="rect">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> to be copied. This rectangle is not modified.
            </param>
            <param name="x">The amount to inflate the copy of the rectangle horizontally. </param>
            <param name="y">The amount to inflate the copy of the rectangle vertically. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Intersect(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Replaces this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure with the intersection of itself and the specified
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" />
                structure.
            </summary>
            <param name="rect">The rectangle to intersect. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Intersect(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Returns a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure that represents the intersection of two rectangles. If there is no intersection, and empty
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" />
                is returned.
            </summary>
            <returns>
                A third <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure the size of which represents the overlapped area of the two specified rectangles.
            </returns>
            <param name="a">A rectangle to intersect. </param>
            <param name="b">A rectangle to intersect. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.IntersectsWith(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Determines if this rectangle intersects with <paramref name="rect" />.
            </summary>
            <returns>
                This method returns true if there is any intersection.
            </returns>
            <param name="rect">The rectangle to test. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Union(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
                Creates the smallest possible third rectangle that can contain both of two rectangles that form a union.
            </summary>
            <returns>
                A third <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure that contains both of the two rectangles that form the union.
            </returns>
            <param name="a">A rectangle to union. </param>
            <param name="b">A rectangle to union. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Offset(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
                Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="pos">The amount to offset the location. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Offset(System.Double,System.Double)">
            <summary>
                Adjusts the location of this rectangle by the specified amount.
            </summary>
            <param name="x">The amount to offset the location horizontally. </param>
            <param name="y">The amount to offset the location vertically. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.GetHashCode">
            <summary>
                Gets the hash code for this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure. For information about the use of hash codes, see Object.GetHashCode.
            </summary>
            <returns>The hash code for this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.ToString">
            <summary>
            Converts the Location and Size of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> to a human-readable string.
            </summary>
            <returns>
            A string that contains the position, width, and height of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect" /> structure for example, "{X=20, Y=20, Width=100, Height=50}".
            </returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize">
            <summary>
            Stores an ordered pair of floating-point numbers, typically the width and height of a rectangle.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.Empty">
            <summary>
                Gets a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure that has a
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.Height" />
                and
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.Width" />
                value of 0.
            </summary>
            <returns>
                A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure that has a
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.Height" />
                and
                <see
                    cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.Width" />
                value of 0.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure from the specified existing
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <param name="size">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure from which to create the new
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure from the specified <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <param name="pt">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> structure from which to initialize this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.#ctor(System.Double,System.Double)">
            <summary>
                Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure from the specified dimensions.
            </summary>
            <param name="width">
                The width component of the new <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </param>
            <param name="height">
                The height component of the new <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.IsEmpty">
            <summary>
                Gets a value that indicates whether this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure has zero width and height.
            </summary>
            <returns>
                This property returns true when this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure has both a width and height of zero; otherwise, false.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.Width">
            <summary>
                Gets or sets the horizontal component of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                The horizontal component of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure, typically measured in pixels.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.Height">
            <summary>
                Gets or sets the vertical component of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                The vertical component of this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure, typically measured in pixels.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.op_Explicit(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)~KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint">
            <summary>
                Converts the specified <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure to a
                <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> structure to which this operator converts.</returns>
            <param name="size">The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure to be converted
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.op_Addition(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Adds the width and height of one <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure to the width and height of another
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure that is the result of the addition operation.
            </returns>
            <param name="sz1">
                The first <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
            <param name="sz2">
                The second <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.op_Subtraction(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Subtracts the width and height of one <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure from the width and height of another
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> that is the result of the subtraction operation.
            </returns>
            <param name="sz1">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left side of the subtraction operator.
            </param>
            <param name="sz2">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right side of the subtraction operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.op_Equality(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Tests whether two <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structures are equal.
            </summary>
            <returns>
                This operator returns true if <paramref name="sz1" /> and <paramref name="sz2" /> have equal width and height; otherwise, false.
            </returns>
            <param name="sz1">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left side of the equality operator.
            </param>
            <param name="sz2">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right of the equality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.op_Inequality(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Tests whether two <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structures are different.
            </summary>
            <returns>
                This operator returns true if <paramref name="sz1" /> and <paramref name="sz2" /> differ either in width or height; false if
                <paramref
                    name="sz1" />
                and <paramref name="sz2" /> are equal.
            </returns>
            <param name="sz1">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left of the inequality operator.
            </param>
            <param name="sz2">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right of the inequality operator.
            </param>
            <filterpriority>3</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.Add(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Adds the width and height of one <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure to the width and height of another
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure that is the result of the addition operation.
            </returns>
            <param name="sz1">
                The first <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
            <param name="sz2">
                The second <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure to add.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.Subtract(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
                Subtracts the width and height of one <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure from the width and height of another
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                A <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure that is a result of the subtraction operation.
            </returns>
            <param name="sz1">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure on the left side of the subtraction operator.
            </param>
            <param name="sz2">
                The <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure on the right side of the subtraction operator.
            </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.Equals(System.Object)">
            <summary>
                Tests to see whether the specified object is a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure with the same dimensions as this
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" />
                structure.
            </summary>
            <returns>
                This method returns true if <paramref name="obj" /> is a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> and has the same width and height as this
                <see
                    cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" />
                ; otherwise, false.
            </returns>
            <param name="obj">
                The <see cref="T:System.Object" /> to test.
            </param>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.GetHashCode">
            <summary>
                Returns a hash code for this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                An integer value that specifies a hash value for this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.ToPointF">
            <summary>
                Converts a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure to a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </summary>
            <returns>
                Returns a <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint" /> structure.
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize.ToString">
            <summary>
                Creates a human-readable string that represents this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </summary>
            <returns>
                A string that represents this <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize" /> structure.
            </returns>
            <filterpriority>1</filterpriority>
            <PermissionSet>
                <IPermission
                    class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
                    version="1" Flags="UnmanagedCode" />
            </PermissionSet>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter">
            <summary>
            Platform adapter to bridge platform specific objects to HTML Renderer core library.<br/>
            Core uses abstract renderer objects (RAdapter/RControl/REtc...) to access platform specific functionality, the concrete platforms 
            implements those objects to provide concrete platform implementation. Those allowing the core library to be platform agnostic.
            <para>
            Platforms: WinForms, WPF, Metro, PDF renders, etc.<br/>
            Objects: UI elements(Controls), Graphics(Render context), Colors, Brushes, Pens, Fonts, Images, Clipboard, etc.<br/>
            </para>
            </summary>
            <remarks>
            It is best to have a singleton instance of this class for concrete implementation!<br/>
            This is because it holds caches of default CssData, Images, Fonts and Brushes.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter._brushesCache">
            <summary>
            cache of brush color to brush instance
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter._penCache">
            <summary>
            cache of pen color to pen instance
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter._fontsHandler">
            <summary>
            cache of all the font used not to create same font again and again
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter._defaultCssData">
            <summary>
            default CSS parsed data singleton
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter._loadImage">
            <summary>
            image used to draw loading image icon
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter._errorImage">
            <summary>
            image used to draw error image icon
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.DefaultCssData">
            <summary>
            Get the default CSS stylesheet data.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetColor(System.String)">
            <summary>
            Resolve color value from given color name.
            </summary>
            <param name="colorName">the color name</param>
            <returns>color value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetPen(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached pen instance for the given color.
            </summary>
            <param name="color">the color to get pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetSolidBrush(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached solid brush instance for the given color.
            </summary>
            <param name="color">the color to get brush for</param>
            <returns>brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetLinearGradientBrush(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.ConvertImage(System.Object)">
            <summary>
            Convert image object returned from <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/> to <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage"/>.
            </summary>
            <param name="image">the image returned from load event</param>
            <returns>converted image or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.ImageFromStream(System.IO.Stream)">
            <summary>
            Create an <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage"/> object from the given stream.
            </summary>
            <param name="memoryStream">the stream to create image from</param>
            <returns>new image instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.IsFontExists(System.String)">
            <summary>
            Check if the given font exists in the system by font family name.
            </summary>
            <param name="font">the font name to check</param>
            <returns>true - font exists by given family name, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.AddFontFamily(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFontFamily)">
            <summary>
            Adds a font family to be used.
            </summary>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetFont(System.String,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetLoadingImage">
            <summary>
            Get image to be used while HTML image is loading.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetLoadingFailedImage">
            <summary>
            Get image to be used if HTML image load failed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetClipboardDataObject(System.String,System.String)">
            <summary>
            Get data object for the given html and plain text data.<br />
            The data object can be used for clipboard or drag-drop operation.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
            <returns>drag-drop data object</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.SetToClipboard(System.String)">
            <summary>
            Set the given text to the clipboard<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="text">the text to set</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.SetToClipboard(System.String,System.String)">
            <summary>
            Set the given html and plain text data to clipboard.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.SetToClipboard(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage)">
            <summary>
            Set the given image to clipboard.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="image">the image object to set to clipboard</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetContextMenu">
            <summary>
            Create a context menu that can be used on the control<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <returns>new context menu</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.SaveToFile(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage,System.String,System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl)">
            <summary>
            Save the given image to file by showing save dialog to the client.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="image">the image to save</param>
            <param name="name">the name of the image for save dialog</param>
            <param name="extension">the extension of the image for save dialog</param>
            <param name="control">optional: the control to show the dialog on</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.CreateFont(System.String,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.CreateFont(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFontFamily,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family instance, size and style.<br/>
            Used to support custom fonts that require explicit font family instance to be created.
            </summary>
            <param name="family">the font family instance</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetColorInt(System.String)">
            <summary>
            Resolve color value from given color name.
            </summary>
            <param name="colorName">the color name</param>
            <returns>color value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.CreatePen(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached pen instance for the given color.
            </summary>
            <param name="color">the color to get pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.CreateSolidBrush(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get cached solid brush instance for the given color.
            </summary>
            <param name="color">the color to get brush for</param>
            <returns>brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.CreateLinearGradientBrush(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.ConvertImageInt(System.Object)">
            <summary>
            Convert image object returned from <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/> to <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage"/>.
            </summary>
            <param name="image">the image returned from load event</param>
            <returns>converted image or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.ImageFromStreamInt(System.IO.Stream)">
            <summary>
            Create an <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage"/> object from the given stream.
            </summary>
            <param name="memoryStream">the stream to create image from</param>
            <returns>new image instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.CreateFontInt(System.String,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family name, size and style.
            </summary>
            <param name="family">the font family name</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.CreateFontInt(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFontFamily,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get font instance by given font family instance, size and style.<br/>
            Used to support custom fonts that require explicit font family instance to be created.
            </summary>
            <param name="family">the font family instance</param>
            <param name="size">font size</param>
            <param name="style">font style</param>
            <returns>font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.GetClipboardDataObjectInt(System.String,System.String)">
            <summary>
            Get data object for the given html and plain text data.<br />
            The data object can be used for clipboard or drag-drop operation.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
            <returns>drag-drop data object</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.SetToClipboardInt(System.String)">
            <summary>
            Set the given text to the clipboard
            </summary>
            <param name="text">the text to set</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.SetToClipboardInt(System.String,System.String)">
            <summary>
            Set the given html and plain text data to clipboard.
            </summary>
            <param name="html">the html data</param>
            <param name="plainText">the plain text data</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.SetToClipboardInt(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage)">
            <summary>
            Set the given image to clipboard.
            </summary>
            <param name="image"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.CreateContextMenuInt">
            <summary>
            Create a context menu that can be used on the control
            </summary>
            <returns>new context menu</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter.SaveToFileInt(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage,System.String,System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl)">
            <summary>
            Save the given image to file by showing save dialog to the client.
            </summary>
            <param name="image">the image to save</param>
            <param name="name">the name of the image for save dialog</param>
            <param name="extension">the extension of the image for save dialog</param>
            <param name="control">optional: the control to show the dialog on</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RBrush">
            <summary>
            Adapter for platform specific brush objects - used to fill graphics (rectangles, polygons and paths).<br/>
            The brush can be solid color, gradient or image.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RContextMenu">
            <summary>
            Adapter for platform specific context menu - used to create and show context menu at specific location.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RContextMenu.ItemsCount">
            <summary>
            The total number of items in the context menu
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RContextMenu.AddDivider">
            <summary>
            AddBulk divider item to the context menu.<br />
            The divider is a non clickable place holder used to separate items.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RContextMenu.AddItem(System.String,System.Boolean,System.EventHandler)">
            <summary>
            AddBulk item to the context menu with the given text that will raise the given event when clicked.
            </summary><param name="text">the text to set on the new context menu item</param><param name="enabled">if to set the item as enabled or disabled</param><param name="onClick">the event to raise when the item is clicked</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RContextMenu.RemoveLastDivider">
            <summary>
            Remove the last item from the context menu iff it is a divider
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RContextMenu.Show(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Show the context menu in the given parent control at the given location.
            </summary><param name="parent">the parent control to show in</param><param name="location">the location to show at relative to the parent control</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl">
            <summary>
            Adapter for platform specific control object - used to handle updating the control that the html is rendered on.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl._adapter">
            <summary>
            The platform adapter.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter)">
            <summary>
            Init control with platform adapter.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.Adapter">
            <summary>
            The platform adapter.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.LeftMouseButton">
            <summary>
            Is the left mouse button is currently in pressed state
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.RightMouseButton">
            <summary>
            Is the right mouse button is currently in pressed state
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.MouseLocation">
            <summary>
            Get the current location of the mouse relative to the control
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.SetCursorDefault">
            <summary>
            Set the cursor over the control to default cursor
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.SetCursorHand">
            <summary>
            Set the cursor over the control to hand cursor
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.SetCursorIBeam">
            <summary>
            Set the cursor over the control to I beam cursor
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.DoDragDropCopy(System.Object)">
            <summary>
            Do drag-drop copy operation for the given data object.
            </summary>
            <param name="dragDropData">the drag-drop data object</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.MeasureString(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont,System.Double,System.Int32@,System.Double@)">
            <summary>
            Measure the width of string under max width restriction calculating the number of characters that can fit and the width those characters take.<br/>
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <param name="maxWidth">the max width to calculate fit characters</param>
            <param name="charFit">the number of characters that will fit under <see cref="!:maxWidth"/> restriction</param>
            <param name="charFitWidth">the width that only the characters that fit into max width take</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl.Invalidate">
            <summary>
            Invalidates the entire surface of the control and causes the control to be redrawn.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont">
            <summary>
            Adapter for platform specific font object - used to render text using specific font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont.Size">
            <summary>
            Gets the em-size of this FontDefault measured in the units specified by the Unit property.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont.Height">
            <summary>
            The line spacing, in pixels, of this font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont.UnderlineOffset">
            <summary>
            Get the vertical offset of the font underline location from the top of the font.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont.LeftPadding">
            <summary>
            Get the left padding, in pixels, of the font.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFontFamily">
            <summary>
            Adapter for platform specific font family object - define the available font families to use.<br/>
            Required for custom fonts handling: fonts that are not installed on the system.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFontFamily.Name">
            <summary>
            Gets the name of this FontDefault Family.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics">
            <summary>
            Adapter for platform specific graphics rendering object - used to render graphics and text in platform specific context.<br/>
            The core HTML Renderer components use this class for rendering logic, extending this
            class in different platform: WinForms, WPF, Metro, PDF, etc.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics._adapter">
            <summary>
            the global adapter
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics._clipStack">
            <summary>
            The clipping bound stack as clips are pushed/poped to/from the graphics
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics._suspendedClips">
            <summary>
            The suspended clips
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.GetPen(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get color pen.
            </summary>
            <param name="color">the color to get the pen for</param>
            <returns>pen instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.GetSolidBrush(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Get solid color brush.
            </summary>
            <param name="color">the color to get the brush for</param>
            <returns>solid color brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.GetLinearGradientBrush(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get linear gradient color brush from <paramref name="color1"/> to <paramref name="color2"/>.
            </summary>
            <param name="rect">the rectangle to get the brush for</param>
            <param name="color1">the start color of the gradient</param>
            <param name="color2">the end color of the gradient</param>
            <param name="angle">the angle to move the gradient from start color to end color in the rectangle</param>
            <returns>linear gradient color brush instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.GetClip">
            <summary>
            Gets a Rectangle structure that bounds the clipping region of this Graphics.
            </summary>
            <returns>A rectangle structure that represents a bounding rectangle for the clipping region of this Graphics.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.PopClip">
            <summary>
            Pop the latest clip push.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.PushClip(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Push the clipping region of this Graphics to interception of current clipping rectangle and the given rectangle.
            </summary>
            <param name="rect">Rectangle to clip to.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.PushClipExclude(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Push the clipping region of this Graphics to exclude the given rectangle from the current clipping rectangle.
            </summary>
            <param name="rect">Rectangle to exclude clipping in.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.SuspendClipping">
            <summary>
            Restore the clipping region to the initial clip.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.ResumeClipping">
            <summary>
            Resumes the suspended clips.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.SetAntiAliasSmoothingMode">
            <summary>
            Set the graphics smooth mode to use anti-alias.<br/>
            Use <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.ReturnPreviousSmoothingMode(System.Object)"/> to return back the mode used.
            </summary>
            <returns>the previous smooth mode before the change</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.ReturnPreviousSmoothingMode(System.Object)">
            <summary>
            Return to previous smooth mode before anti-alias was set as returned from <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.SetAntiAliasSmoothingMode"/>.
            </summary>
            <param name="prevMode">the previous mode to set</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.GetTextureBrush(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get TextureBrush object that uses the specified image and bounding rectangle.
            </summary>
            <param name="image">The Image object with which this TextureBrush object fills interiors.</param>
            <param name="dstRect">A Rectangle structure that represents the bounding rectangle for this TextureBrush object.</param>
            <param name="translateTransformLocation">The dimension by which to translate the transformation</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.GetGraphicsPath">
            <summary>
            Get GraphicsPath object.
            </summary>
            <returns>graphics path instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.MeasureString(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont)">
            <summary>
            Measure the width and height of string <paramref name="str"/> when drawn on device context HDC
            using the given font <paramref name="font"/>.
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <returns>the size of the string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.MeasureString(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont,System.Double,System.Int32@,System.Double@)">
            <summary>
            Measure the width of string under max width restriction calculating the number of characters that can fit and the width those characters take.<br/>
            Not relevant for platforms that don't render HTML on UI element.
            </summary>
            <param name="str">the string to measure</param>
            <param name="font">the font to measure string with</param>
            <param name="maxWidth">the max width to calculate fit characters</param>
            <param name="charFit">the number of characters that will fit under <see cref="!:maxWidth"/> restriction</param>
            <param name="charFitWidth">the width that only the characters that fit into max width take</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.DrawString(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFont,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,System.Boolean)">
            <summary>
            Draw the given string using the given font and foreground color at given location.
            </summary>
            <param name="str">the string to draw</param>
            <param name="font">the font to use to draw the string</param>
            <param name="color">the text color to set</param>
            <param name="point">the location to start string draw (top-left)</param>
            <param name="size">used to know the size of the rendered text for transparent text support</param>
            <param name="rtl">is to render the string right-to-left (true - RTL, false - LTR)</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.DrawLine(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the line. </param>
            <param name="x1">The x-coordinate of the first point. </param>
            <param name="y1">The y-coordinate of the first point. </param>
            <param name="x2">The x-coordinate of the second point. </param>
            <param name="y2">The y-coordinate of the second point. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.DrawRectangle(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RPen,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a rectangle specified by a coordinate pair, a width, and a height.
            </summary>
            <param name="pen">A Pen that determines the color, width, and style of the rectangle. </param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to draw. </param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to draw. </param>
            <param name="width">The width of the rectangle to draw. </param>
            <param name="height">The height of the rectangle to draw. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.DrawRectangle(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RBrush,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fills the interior of a rectangle specified by a pair of coordinates, a width, and a height.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="x">The x-coordinate of the upper-left corner of the rectangle to fill. </param>
            <param name="y">The y-coordinate of the upper-left corner of the rectangle to fill. </param>
            <param name="width">Width of the rectangle to fill. </param>
            <param name="height">Height of the rectangle to fill. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.DrawImage(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draws the specified portion of the specified <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage"/> at the specified location and with the specified size.
            </summary>
            <param name="image">Image to draw. </param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. The image is scaled to fit the rectangle. </param>
            <param name="srcRect">Rectangle structure that specifies the portion of the <paramref name="image"/> object to draw. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.DrawImage(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draws the specified Image at the specified location and with the specified size.
            </summary>
            <param name="image">Image to draw. </param>
            <param name="destRect">Rectangle structure that specifies the location and size of the drawn image. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.DrawPath(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RPen,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphicsPath)">
            <summary>
            Draws a GraphicsPath.
            </summary>
            <param name="pen">Pen that determines the color, width, and style of the path. </param>
            <param name="path">GraphicsPath to draw. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.DrawPath(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RBrush,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphicsPath)">
            <summary>
            Fills the interior of a GraphicsPath.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="path">GraphicsPath that represents the path to fill. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.DrawPolygon(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RBrush,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint[])">
            <summary>
            Fills the interior of a polygon defined by an array of points specified by Point structures.
            </summary>
            <param name="brush">Brush that determines the characteristics of the fill. </param>
            <param name="points">Array of Point structures that represent the vertices of the polygon to fill. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphicsPath">
            <summary>
            Adapter for platform specific graphics path object - used to render (draw/fill) path shape.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphicsPath.Start(System.Double,System.Double)">
            <summary>
            Start path at the given point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphicsPath.LineTo(System.Double,System.Double)">
            <summary>
            AddBulk stright line to the given point from te last point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphicsPath.ArcTo(System.Double,System.Double,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphicsPath.Corner)">
            <summary>
            AddBulk circular arc of the given size to the given point from the last point.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphicsPath.Dispose">
            <summary>
            Release path resources.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphicsPath.Corner">
            <summary>
            The 4 corners that are handled in arc rendering.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage">
            <summary>
            Adapter for platform specific image object - used to render images.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage.Width">
            <summary>
            Get the width, in pixels, of the image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage.Height">
            <summary>
            Get the height, in pixels, of the image.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RPen">
            <summary>
            Adapter for platform specific pen objects - used to draw graphics (lines, rectangles and paths) 
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RPen.Width">
            <summary>
            Gets or sets the width of this Pen, in units of the Graphics object used for drawing.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RPen.DashStyle">
            <summary>
            Gets or sets the style used for dashed lines drawn with this Pen.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData">
            <summary>
            Holds parsed stylesheet css blocks arranged by media and classes.<br/>
            <seealso cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock"/>
            </summary>
            <remarks>
            To learn more about CSS blocks visit CSS spec: http://www.w3.org/TR/CSS21/syndata.html#block
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData._emptyArray">
            <summary>
            used to return empty array
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData._mediaBlocks">
            <summary>
            dictionary of media type to dictionary of css class name to the cssBlocks collection with all the data.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData.#ctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData.Parse(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter,System.String,System.Boolean)">
            <summary>
            Parse the given stylesheet to <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData"/> object.<br/>
            If <paramref name="combineWithDefault"/> is true the parsed css blocks are added to the 
            default css data (as defined by W3), merged if class name already exists. If false only the data in the given stylesheet is returned.
            </summary>
            <seealso cref="!:http://www.w3.org/TR/CSS21/sample.html"/>
            <param name="adapter">Platform adapter</param>
            <param name="stylesheet">the stylesheet source to parse</param>
            <param name="combineWithDefault">true - combine the parsed css data with default css data, false - return only the parsed css data</param>
            <returns>the parsed css data</returns>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData.MediaBlocks">
            <summary>
            dictionary of media type to dictionary of css class name to the cssBlocks collection with all the data
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData.ContainsCssBlock(System.String,System.String)">
            <summary>
            Check if there are css blocks for the given class selector.
            </summary>
            <param name="className">the class selector to check for css blocks by</param>
            <param name="media">optional: the css media type (default - all)</param>
            <returns>true - has css blocks for the class, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData.GetCssBlock(System.String,System.String)">
            <summary>
            Get collection of css blocks for the requested class selector.<br/>
            the <paramref name="className"/> can be: class name, html element name, html element and 
            class name (elm.class), hash tag with element id (#id).<br/>
            returned all the blocks that word on the requested class selector, it can contain simple
            selector or hierarchy selector.
            </summary>
            <param name="className">the class selector to get css blocks by</param>
            <param name="media">optional: the css media type (default - all)</param>
            <returns>collection of css blocks, empty collection if no blocks exists (never null)</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData.AddCssBlock(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            AddBulk the given css block to the css data, merging to existing block if required.
            </summary>
            <remarks>
            If there is no css blocks for the same class it will be added to data collection.<br/>
            If there is already css blocks for the same class it will check for each existing block
            if the hierarchical selectors match (or not exists). if do the two css blocks will be merged into
            one where the new block properties overwrite existing if needed. if the new block doesn't mach any
            existing it will be added either to the beginning of the list if it has no  hierarchical selectors or at the end.<br/>
            Css block without hierarchical selectors must be added to the beginning of the list so more specific block
            can overwrite it when the style is applied.
            </remarks>
            <param name="media">the media type to add the CSS to</param>
            <param name="cssBlock">the css block to add</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData.Combine(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData)">
            <summary>
            Combine this CSS data blocks with <paramref name="other"/> CSS blocks for each media.<br/>
            Merge blocks if exists in both.
            </summary>
            <param name="other">the CSS data to combine with</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData.Clone">
            <summary>
            Create deep copy of the css data with cloned css blocks.
            </summary>
            <returns>cloned object</returns>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssDefaults.DefaultStyleSheet">
            <summary>
            CSS Specification's Default Style Sheet for HTML 4
            </summary>
            <remarks>
            http://www.w3.org/TR/CSS21/sample.html
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.Border">
            <summary>
            Border types
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox">
            <summary>
            Represents a CSS Box of text or replaced elements.
            </summary>
            <remarks>
            The Box can contains other boxes, that's the way that the CSS Tree
            is composed.
            
            To know more about boxes visit CSS spec:
            http://www.w3.org/TR/CSS21/box.html
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox._parentBox">
            <summary>
            the parent css box of this css box in the hierarchy
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox._htmlContainer">
            <summary>
            the root container for the hierarchy
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox._htmltag">
            <summary>
            the html tag that is associated with this css box, null if anonymous box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox._text">
            <summary>
            the inner text of the box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox._tableFixed">
            <summary>
            Do not use or alter this flag
            </summary>
            <remarks>
            Flag that indicates that CssTable algorithm already made fixes on it.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox._imageLoadHandler">
            <summary>
            handler for loading background image
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parentBox">optional: the parent of this css box in html</param>
            <param name="tag">optional: the html tag associated with this css box</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.HtmlContainer">
            <summary>
            Gets the HtmlContainer of the Box.
            WARNING: May be null.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.ParentBox">
            <summary>
            Gets or sets the parent box of this box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.Boxes">
            <summary>
            Gets the children boxes of this box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.IsBrElement">
            <summary>
            Is the box is of "br" element.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.IsInline">
            <summary>
            is the box "Display" is "Inline", is this is an inline box and not block.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.IsBlock">
            <summary>
            is the box "Display" is "Block", is this is an block box and not inline.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.IsClickable">
            <summary>
            Is the css box clickable (by default only "a" element is clickable)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.IsFixed">
            <summary>
            Gets a value indicating whether this instance or one of its parents has Position = fixed.
            </summary>
            <value>
              <c>true</c> if this instance is fixed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.HrefLink">
            <summary>
            Get the href link of the box (by default get "href" attribute)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.ContainingBlock">
            <summary>
            Gets the containing block-box of this box. (The nearest parent box with display=block)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.HtmlTag">
            <summary>
            Gets the HTMLTag that hosts this box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.IsImage">
            <summary>
            Gets if this box represents an image
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.IsSpaceOrEmpty">
            <summary>
            Tells if the box is empty or contains just blank spaces
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.Text">
            <summary>
            Gets or sets the inner text of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.LineBoxes">
            <summary>
            Gets the line-boxes of this box (if block box)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.ParentLineBoxes">
            <summary>
            Gets the linebox(es) that contains words of this box (if inline)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.Rectangles">
            <summary>
            Gets the rectangles where this box should be painted
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.Words">
            <summary>
            Gets the BoxWords of text in the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.FirstWord">
            <summary>
            Gets the first word of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.FirstHostingLineBox">
            <summary>
            Gets or sets the first linebox where content of this box appear
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.LastHostingLineBox">
            <summary>
            Gets or sets the last linebox where content of this box appear
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.CreateBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Create new css box for the given parent with the given html tag.<br/>
            </summary>
            <param name="tag">the html tag to define the box</param>
            <param name="parent">the box to add the new box to it as child</param>
            <returns>the new box</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.CreateBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Create new css box for the given parent with the given optional html tag and insert it either
            at the end or before the given optional box.<br/>
            If no html tag is given the box will be anonymous.<br/>
            If no before box is given the new box will be added at the end of parent boxes collection.<br/>
            If before box doesn't exists in parent box exception is thrown.<br/>
            </summary>
            <remarks>
            To learn more about anonymous inline boxes visit: http://www.w3.org/TR/CSS21/visuren.html#anonymous
            </remarks>
            <param name="parent">the box to add the new box to it as child</param>
            <param name="tag">optional: the html tag to define the box</param>
            <param name="before">optional: to insert as specific location in parent box</param>
            <returns>the new box</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.CreateBlock">
            <summary>
            Create new css block box.
            </summary>
            <returns>the new block box</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.CreateBlock(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Create new css block box for the given parent with the given optional html tag and insert it either
            at the end or before the given optional box.<br/>
            If no html tag is given the box will be anonymous.<br/>
            If no before box is given the new box will be added at the end of parent boxes collection.<br/>
            If before box doesn't exists in parent box exception is thrown.<br/>
            </summary>
            <remarks>
            To learn more about anonymous block boxes visit CSS spec:
            http://www.w3.org/TR/CSS21/visuren.html#anonymous-block-level
            </remarks>
            <param name="parent">the box to add the new block box to it as child</param>
            <param name="tag">optional: the html tag to define the box</param>
            <param name="before">optional: to insert as specific location in parent box</param>
            <returns>the new block box</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.PerformLayout(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.<br/>
            Performs layout of the DOM structure creating lines by set bounds restrictions.
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.Paint(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.SetBeforeBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Set this box in 
            </summary>
            <param name="before"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.SetAllBoxes(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Move all child boxes from <paramref name="fromBox"/> to this box.
            </summary>
            <param name="fromBox">the box to move all its child boxes from</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.ParseToWords">
            <summary>
            Splits the text into words and saves the result
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.PerformLayoutImp(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.<br/>
            Performs layout of the DOM structure creating lines by set bounds restrictions.<br/>
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.MeasureWordsSize(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Assigns words its width and height
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetParent">
            <summary>
            Get the parent of this css properties instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetIndexForList">
            <summary>
            Gets the index of the box to be used on a (ordered) list
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.CreateListItemBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Creates the <see cref="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox._listItemBox"/>
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.FirstWordOccourence(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Searches for the first word occurrence inside the box, on the specified linebox
            </summary>
            <param name="b"></param>
            <param name="line"> </param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetAttribute(System.String)">
            <summary>
            Gets the specified Attribute, returns string.Empty if no attribute specified
            </summary>
            <param name="attribute">Attribute to retrieve</param>
            <returns>Attribute value or string.Empty if no attribute specified</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetAttribute(System.String,System.String)">
            <summary>
            Gets the value of the specified attribute of the source HTML tag.
            </summary>
            <param name="attribute">Attribute to retrieve</param>
            <param name="defaultValue">Value to return if attribute is not specified</param>
            <returns>Attribute value or defaultValue if no attribute specified</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetMinimumWidth">
            <summary>
            Gets the minimum width that the box can be.<br/>
            The box can be as thin as the longest word plus padding.<br/>
            The check is deep thru box tree.<br/>
            </summary>
            <returns>the min width of the box</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetMinimumWidth_LongestWord(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Double@,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect@)">
            <summary>
            Gets the longest word (in width) inside the box, deeply.
            </summary>
            <param name="box"></param>
            <param name="maxWidth"> </param>
            <param name="maxWidthWord"> </param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetWidthMarginDeep(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Get the total margin value (left and right) from the given box to the given end box.<br/>
            </summary>
            <param name="box">the box to start calculation from.</param>
            <returns>the total margin</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetMaximumBottom(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Double)">
            <summary>
            Gets the maximum bottom of the boxes inside the startBox
            </summary>
            <param name="startBox"></param>
            <param name="currentMaxBottom"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetMinMaxWidth(System.Double@,System.Double@)">
            <summary>
            Get the <paramref name="minWidth"/> and <paramref name="maxWidth"/> width of the box content.<br/>
            </summary>
            <param name="minWidth">The minimum width the content must be so it won't overflow (largest word + padding).</param>
            <param name="maxWidth">The total width the content can take without line wrapping (with padding).</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetMinMaxSumWords(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Get the <paramref name="min"/> and <paramref name="maxSum"/> of the box words content and <paramref name="paddingSum"/>.<br/>
            </summary>
            <param name="box">the box to calculate for</param>
            <param name="min">the width that allows for each word to fit (width of the longest word)</param>
            <param name="maxSum">the max width a single line of words can take without wrapping</param>
            <param name="paddingSum">the total amount of padding the content has </param>
            <param name="marginSum"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.HasJustInlineSiblings">
            <summary>
            Gets if this box has only inline siblings (including itself)
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.InheritStyle(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Boolean)">
            <summary>
            Gets the rectangles where inline box will be drawn. See Remarks for more info.
            </summary>
            <returns>Rectangles where content should be placed</returns>
            <remarks>
            Inline boxes can be split across different LineBoxes, that's why this method
            Delivers a rectangle for each LineBox related to this box, if inline.
            </remarks>
            <summary>
            Inherits inheritable values from parent.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.MarginTopCollapse(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties)">
            <summary>
            Gets the result of collapsing the vertical margins of the two boxes
            </summary>
            <param name="prevSibling">the previous box under the same parent</param>
            <returns>Resulting top margin</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.CalculateActualRight">
            <summary>
            Calculate the actual right of the box by the actual right of the child boxes if this box actual right is not set.
            </summary>
            <returns>the calculated actual right value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.MarginBottomCollapse">
            <summary>
            Gets the result of collapsing the vertical margins of the two boxes
            </summary>
            <returns>Resulting bottom margin</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.OffsetTop(System.Double)">
            <summary>
            Deeply offsets the top of the box and its contents
            </summary>
            <param name="amount"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.PaintImp(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.PaintBackground(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Paints the background of the box
            </summary>
            <param name="g">the device to draw into</param>
            <param name="rect">the bounding rectangle to draw in</param>
            <param name="isFirst">is it the first rectangle of the element</param>
            <param name="isLast">is it the last rectangle of the element</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.PaintWords(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Paint all the words in the box.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="offset">the current scroll offset to offset the words</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.PaintDecoration(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Paints the text decoration (underline/strike-through/over-line)
            </summary>
            <param name="g">the device to draw into</param>
            <param name="rectangle"> </param>
            <param name="isFirst"> </param>
            <param name="isLast"> </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.OffsetRectangle(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox,System.Double)">
            <summary>
            Offsets the rectangle of the specified linebox by the specified gap,
            and goes deep for rectangles of children in that linebox.
            </summary>
            <param name="lineBox"></param>
            <param name="gap"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.RectanglesReset">
            <summary>
            Resets the <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.Rectangles"/> array
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.OnImageLoadComplete(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Boolean)">
            <summary>
            On image load process complete with image request refresh for it to be painted.
            </summary>
            <param name="image">the image loaded or null if failed</param>
            <param name="rectangle">the source rectangle to draw in the image (empty - draw everything)</param>
            <param name="async">is the callback was called async to load image call</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetSelectionForeBrush">
            <summary>
            Get brush for the text depending if there is selected text color set.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.GetSelectionBackBrush(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,System.Boolean)">
            <summary>
            Get brush for selection background depending if it has external and if alpha is required for images.
            </summary>
            <param name="g"></param>
            <param name="forceAlpha">used for images so they will have alpha effect</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox.ToString">
            <summary>
            ToString override.
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame">
            <summary>
            CSS box for iframe element.<br/>
            If the iframe is of embedded YouTube or Vimeo video it will show image with play.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame._imageWord">
            <summary>
            the image word of this image box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame._isVideo">
            <summary>
            is the iframe is of embeded video
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame._videoTitle">
            <summary>
            the title of the video
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame._videoImageUrl">
            <summary>
            the url of the video thumbnail image
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame._videoLinkUrl">
            <summary>
            link to the video on the site
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame._imageLoadHandler">
            <summary>
            handler used for image loading by source
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame._imageLoadingComplete">
            <summary>
            is image load is finished, used to know if no image is found
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parent">the parent box of this box</param>
            <param name="tag">the html tag data of this box</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.IsClickable">
            <summary>
            Is the css box clickable ("a" element is clickable)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.HrefLink">
            <summary>
            Get the href link of the box (by default get "href" attribute)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.IsVideo">
            <summary>
            is the iframe is of embeded video
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.LoadYoutubeDataAsync(System.Uri)">
            <summary>
            Load YouTube video data (title, image, link) by calling YouTube API.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.OnDownloadYoutubeApiCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            Parse YouTube API response to get video data (title, image, link).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.LoadVimeoDataAsync(System.Uri)">
            <summary>
            Load Vimeo video data (title, image, link) by calling Vimeo API.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.OnDownloadVimeoApiCompleted(System.Object,System.Net.DownloadStringCompletedEventArgs)">
            <summary>
            Parse Vimeo API response to get video data (title, image, link).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.HandleDataLoadFailure(System.Exception,System.String)">
            <summary>
            Handle error occurred during video data load to handle if the video was not found.
            </summary>
            <param name="ex">the exception that occurred during data load web request</param>
            <param name="source">the name of the video source (YouTube/Vimeo/Etc.)</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.HandlePostApiCall(System.Object)">
            <summary>
            Create image handler for downloading video image if found and release the WebClient instance used for API call.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.PaintImp(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.DrawImage(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw video image over the iframe if found.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.DrawTitle(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw video title on top of the iframe if found.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.DrawPlay(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw play over the iframe if we found link url.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.MeasureWordsSize(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Assigns words its width and height
            </summary>
            <param name="g">the device to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.SetErrorBorder">
            <summary>
            Set error image border on the image box.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxFrame.OnLoadImageComplete(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Boolean)">
            <summary>
            On image load process is complete with image or without update the image box.
            </summary>
            <param name="image">the image loaded or null if failed</param>
            <param name="rectangle">the source rectangle to draw in the image (empty - draw everything)</param>
            <param name="async">is the callback was called async to load image call</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxHr">
            <summary>
            CSS box for hr element.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxHr.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parent">the parent box of this box</param>
            <param name="tag">the html tag data of this box</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxHr.PerformLayoutImp(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.<br/>
            Performs layout of the DOM structure creating lines by set bounds restrictions.
            </summary>
            <param name="g">Device context to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxHr.PaintImp(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage">
            <summary>
            CSS box for image element.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage._imageWord">
            <summary>
            the image word of this image box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage._imageLoadHandler">
            <summary>
            handler used for image loading by source
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage._imageLoadingComplete">
            <summary>
            is image load is finished, used to know if no image is found
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag)">
            <summary>
            Init.
            </summary>
            <param name="parent">the parent box of this box</param>
            <param name="tag">the html tag data of this box</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage.Image">
            <summary>
            Get the image of this image box.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage.PaintImp(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Paints the fragment
            </summary>
            <param name="g">the device to draw to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage.MeasureWordsSize(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Assigns words its width and height
            </summary>
            <param name="g">the device to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage.SetErrorBorder">
            <summary>
            Set error image border on the image box.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxImage.OnLoadImageComplete(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Boolean)">
            <summary>
            On image load process is complete with image or without update the image box.
            </summary>
            <param name="image">the image loaded or null if failed</param>
            <param name="rectangle">the source rectangle to draw in the image (empty - draw everything)</param>
            <param name="async">is the callback was called async to load image call</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties">
            <summary>
            Base class for css box to handle the css properties.<br/>
            Has field and property for every css property that can be set, the properties add additional parsing like
            setting the correct border depending what border value was set (single, two , all four).<br/>
            Has additional fields to control the location and size of the box and 'actual' css values for some properties
            that require additional calculations and parsing.<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties._location">
            <summary>
            Gets or sets the location of the box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties._size">
            <summary>
            Gets or sets the size of the box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties._actualLineHeight">
            <summary>
            the width of whitespace between words
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.Location">
            <summary>
            Gets or sets the location of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.Size">
            <summary>
            Gets or sets the size of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.Bounds">
            <summary>
            Gets the bounds of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.AvailableWidth">
            <summary>
            Gets the width available on the box, counting padding and margin.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualRight">
            <summary>
            Gets the right of the box. When setting, it will affect only the width of the box.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBottom">
            <summary>
            Gets or sets the bottom of the box. 
            (When setting, alters only the Size.Height of the box)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ClientLeft">
            <summary>
            Gets the left of the client rectangle (Where content starts rendering)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ClientTop">
            <summary>
            Gets the top of the client rectangle (Where content starts rendering)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ClientRight">
            <summary>
            Gets the right of the client rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ClientBottom">
            <summary>
            Gets the bottom of the client rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ClientRectangle">
            <summary>
            Gets the client rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualHeight">
            <summary>
            Gets the actual height
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualWidth">
            <summary>
            Gets the actual height
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualPaddingTop">
            <summary>
            Gets the actual top's padding
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualPaddingLeft">
            <summary>
            Gets the actual padding on the left
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualPaddingBottom">
            <summary>
            Gets the actual Padding of the bottom
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualPaddingRight">
            <summary>
            Gets the actual padding on the right
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualMarginTop">
            <summary>
            Gets the actual top's Margin
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.CollapsedMarginTop">
            <summary>
            The margin top value if was effected by margin collapse.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualMarginLeft">
            <summary>
            Gets the actual Margin on the left
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualMarginBottom">
            <summary>
            Gets the actual Margin of the bottom
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualMarginRight">
            <summary>
            Gets the actual Margin on the right
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderTopWidth">
            <summary>
            Gets the actual top border width
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderLeftWidth">
            <summary>
            Gets the actual Left border width
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderBottomWidth">
            <summary>
            Gets the actual Bottom border width
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderRightWidth">
            <summary>
            Gets the actual Right border width
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderTopColor">
            <summary>
            Gets the actual top border Color
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderLeftColor">
            <summary>
            Gets the actual Left border Color
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderBottomColor">
            <summary>
            Gets the actual Bottom border Color
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderRightColor">
            <summary>
            Gets the actual Right border Color
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualCornerNw">
            <summary>
            Gets the actual length of the north west corner
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualCornerNe">
            <summary>
            Gets the actual length of the north east corner
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualCornerSe">
            <summary>
            Gets the actual length of the south east corner
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualCornerSw">
            <summary>
            Gets the actual length of the south west corner
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.IsRounded">
            <summary>
            Gets a value indicating if at least one of the corners of the box is rounded
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualWordSpacing">
            <summary>
            Gets the actual width of whitespace between words.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualColor">
            <summary>
            
            Gets the actual color for the text.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBackgroundColor">
            <summary>
            Gets the actual background color of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBackgroundGradient">
            <summary>
            Gets the second color that creates a gradient for the background
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBackgroundGradientAngle">
            <summary>
            Gets the actual angle specified for the background gradient
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualParentFont">
            <summary>
            Gets the actual font of the parent
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualFont">
            <summary>
            Gets the font that should be actually used to paint the text of the box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualLineHeight">
            <summary>
            Gets the line height
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualTextIndent">
            <summary>
            Gets the text indentation (on first line only)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderSpacingHorizontal">
            <summary>
            Gets the actual horizontal border spacing for tables
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualBorderSpacingVertical">
            <summary>
            Gets the actual vertical border spacing for tables
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.GetParent">
            <summary>
            Get the parent of this css properties instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.GetEmHeight">
            <summary>
            Gets the height of the font in the specified units
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.NoEms(System.String)">
            <summary>
            Ensures that the specified length is converted to pixels if necessary
            </summary>
            <param name="length"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.SetAllBorders(System.String,System.String,System.String)">
            <summary>
            Set the style/width/color for all 4 borders on the box.<br/>
            if null is given for a value it will not be set.
            </summary>
            <param name="style">optional: the style to set</param>
            <param name="width">optional: the width to set</param>
            <param name="color">optional: the color to set</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.MeasureWordSpacing(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Measures the width of whitespace between words (set <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.ActualWordSpacing"/>).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties.InheritStyle(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Boolean)">
            <summary>
            Inherits inheritable values from specified box.
            </summary>
            <param name="everything">Set to true to inherit all CSS properties instead of only the ineritables</param>
            <param name="p">Box to inherit the properties</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine">
            <summary>
            Helps on CSS Layout.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.MeasureImageSize(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectImage)">
            <summary>
            Measure image box size by the width\height set on the box and the actual rendered image size.<br/>
            If no image exists for the box error icon will be set.
            </summary>
            <param name="imageWord">the image word to measure</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.CreateLineBoxes(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Creates line boxes for the specified blockbox
            </summary>
            <param name="g"></param>
            <param name="blockBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyCellVerticalAlignment(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Applies special vertical alignment for table-cells
            </summary>
            <param name="g"></param>
            <param name="cell"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.FlowBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Double,System.Double,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Recursively flows the content of the box using the inline model
            </summary>
            <param name="g">Device Info</param>
            <param name="blockbox">Blockbox that contains the text flow</param>
            <param name="box">Current box to flow its content</param>
            <param name="limitRight">Maximum reached right</param>
            <param name="linespacing">Space to use between rows of text</param>
            <param name="startx">x starting coordinate for when breaking lines of text</param>
            <param name="line">Current linebox being used</param>
            <param name="curx">Current x coordinate that will be the left of the next word</param>
            <param name="cury">Current y coordinate that will be the top of the next word</param>
            <param name="maxRight">Maximum right reached so far</param>
            <param name="maxbottom">Maximum bottom reached so far</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.AdjustAbsolutePosition(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Double,System.Double)">
            <summary>
            Adjust the position of absolute elements by letf and top margins.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.BubbleRectangles(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Recursively creates the rectangles of the blockBox, by bubbling from deep to outside of the boxes 
            in the rectangle structure
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyHorizontalAlignment(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies vertical and horizontal alignment to words in lineboxes
            </summary>
            <param name="g"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyRightToLeft(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies right to left direction to words
            </summary>
            <param name="blockBox"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyRightToLeftOnLine(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies RTL direction to all the words on the line.
            </summary>
            <param name="line">the line to apply RTL to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyRightToLeftOnSingleBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Applies RTL direction to specific box words on the line.
            </summary>
            <param name="lineBox"></param>
            <param name="box"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyVerticalAlignment(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies vertical alignment to the linebox
            </summary>
            <param name="g"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyJustifyAlignment(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies centered alignment to the text on the linebox
            </summary>
            <param name="g"></param>
            <param name="lineBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyCenterAlignment(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies centered alignment to the text on the linebox
            </summary>
            <param name="g"></param>
            <param name="line"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyRightAlignment(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Applies right alignment to the text on the linebox
            </summary>
            <param name="g"></param>
            <param name="line"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ApplyLeftAlignment(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox)">
            <summary>
            Simplest alignment, just arrange words.
            </summary>
            <param name="g"></param>
            <param name="line"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngine.ToList``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            todo: optimizate, not creating a list each time
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable">
            <summary>
            Layout engine for tables executing the complex layout of tables with rows/columns/headers/etc.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable._tableBox">
            <summary>
            the main box of the table
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable._caption">
            <summary>
            
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable._bodyrows">
            <summary>
            collection of all rows boxes
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable._columns">
            <summary>
            collection of all columns boxes
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable._allRows">
            <summary>
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Init.
            </summary>
            <param name="tableBox"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetTableSpacing(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Get the table cells spacing for all the cells in the table.<br/>
            Used to calculate the spacing the table has in addition to regular padding and borders.
            </summary>
            <param name="tableBox">the table box to calculate the spacing for</param>
            <returns>the calculated spacing</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.PerformLayout(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            
            </summary>
            <param name="g"></param>
            <param name="tableBox"> </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.Layout(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Analyzes the Table and assigns values to this CssTable object.
            To be called from the constructor
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.AssignBoxKinds">
            <summary>
            Get the table boxes into the proper fields.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.InsertEmptyBoxes">
            <summary>
            Insert EmptyBoxes for vertical cell spanning.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.CalculateCountAndWidth">
            <summary>
            Determine Row and Column Count, and ColumnWidths
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.DetermineMissingColumnWidths(System.Double)">
            <summary>
            
            </summary>
            <param name="availCellSpace"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.EnforceMaximumSize">
            <summary>
            While table width is larger than it should, and width is reductable.<br/>
            If table max width is limited by we need to lower the columns width even if it will result in clipping<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.EnforceMinimumSize">
            <summary>
            Check for minimum sizes (increment widths if necessary)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.LayoutCells(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Layout the cells by the calculated table layout
            </summary>
            <param name="g"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetSpannedMinWidth(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Int32,System.Int32)">
            <summary>
            Gets the spanned width of a cell (With of all columns it spans minus one).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetCellRealColumnIndex(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the cell column index checking its position and other cells colspans
            </summary>
            <param name="row"></param>
            <param name="cell"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetCellWidth(System.Int32,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the cells width, taking colspan and being in the specified column
            </summary>
            <param name="column"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetColSpan(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the colspan of the specified box
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetRowSpan(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the rowspan of the specified box
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.MeasureWords(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Recursively measures words inside the box
            </summary>
            <param name="box">the box to measure</param>
            <param name="g">Device to use</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.CanReduceWidth">
            <summary>
            Tells if the columns widths can be reduced,
            by checking the minimum widths of all cells
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.CanReduceWidth(System.Int32)">
            <summary>
            Tells if the specified column can be reduced,
            by checking its minimum width
            </summary>
            <param name="columnIndex"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetAvailableTableWidth">
            <summary>
            Gets the available width for the whole table.
            It also sets the value of WidthSpecified
            </summary>
            <returns></returns>
            <remarks>
            The table's width can be larger than the result of this method, because of the minimum 
            size that individual boxes.
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetMaxTableWidth">
            <summary>
            Gets the available width for the whole table.
            It also sets the value of WidthSpecified
            </summary>
            <returns></returns>
            <remarks>
            The table's width can be larger than the result of this method, because of the minimum 
            size that individual boxes.
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetColumnsMinMaxWidthByContent(System.Boolean,System.Double[]@,System.Double[]@)">
            <summary>
            Calculate the min and max width for each column of the table by the content in all rows.<br/>
            the min width possible without clipping content<br/>
            the max width the cell content can take without wrapping<br/>
            </summary>
            <param name="onlyNans">if to measure only columns that have no calculated width</param>
            <param name="minFullWidths">return the min width for each column - the min width possible without clipping content</param>
            <param name="maxFullWidths">return the max width for each column - the max width the cell content can take without wrapping</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetAvailableCellWidth">
            <summary>
            Gets the width available for cells
            </summary>
            <returns></returns>
            <remarks>
            It takes away the cell-spacing from <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetAvailableTableWidth"/>
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetWidthSum">
            <summary>
            Gets the current sum of column widths
            </summary>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetSpan(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the span attribute of the tag of the specified box
            </summary>
            <param name="b"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetColumnMinWidths">
            <summary>
            Gets the minimum width of each column
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetHorizontalSpacing">
            <summary>
            Gets the actual horizontal spacing of the table
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetHorizontalSpacing(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the actual horizontal spacing of the table
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLayoutEngineTable.GetVerticalSpacing">
            <summary>
            Gets the actual vertical spacing of the table
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength">
            <summary>
            Represents and gets info about a CSS Length
            </summary>
            <remarks>
            http://www.w3.org/TR/CSS21/syndata.html#length-units
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength.#ctor(System.String)">
            <summary>
            Creates a new CssLength from a length specified on a CSS style sheet or fragment
            </summary>
            <param name="length">Length as specified in the Style Sheet or style fragment</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength.Number">
            <summary>
            Gets the number in the length
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength.HasError">
            <summary>
            Gets if the length has some parsing error
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength.IsPercentage">
            <summary>
            Gets if the length represents a precentage (not actually a length)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength.IsRelative">
            <summary>
            Gets if the length is specified in relative units
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength.Unit">
            <summary>
            Gets the unit of the length
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength.Length">
            <summary>
            Gets the length as specified in the string
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength.ConvertEmToPoints(System.Double)">
            <summary>
            If length is in Ems, returns its value in points
            </summary>
            <param name="emSize">Em size factor to multiply</param>
            <returns>Points size of this em</returns>
            <exception cref="T:System.InvalidOperationException">If length has an error or isn't in ems</exception>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength.ConvertEmToPixels(System.Double)">
            <summary>
            If length is in Ems, returns its value in pixels
            </summary>
            <param name="pixelFactor">Pixel size factor to multiply</param>
            <returns>Pixels size of this em</returns>
            <exception cref="T:System.InvalidOperationException">If length has an error or isn't in ems</exception>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLength.ToString">
            <summary>
            Returns the length formatted ready for CSS interpreting.
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox">
            <summary>
            Represents a line of text.
            </summary>
            <remarks>
            To learn more about line-boxes see CSS spec:
            http://www.w3.org/TR/CSS21/visuren.html
            </remarks>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Creates a new LineBox
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.RelatedBoxes">
            <summary>
            Gets a list of boxes related with the linebox. 
            To know the words of the box inside this linebox, use the <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.WordsOf(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)"/> method.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.Words">
            <summary>
            Gets the words inside the linebox
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.OwnerBox">
            <summary>
            Gets the owner box
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.Rectangles">
            <summary>
            Gets a List of rectangles that are to be painted on this linebox
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.LineHeight">
            <summary>
            Get the height of this box line (the max height of all the words)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.LineBottom">
            <summary>
            Get the bottom of this box line (the max bottom of all the words)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.ReportExistanceOf(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            Lets the linebox add the word an its box to their lists if necessary.
            </summary>
            <param name="word"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.WordsOf(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Return the words of the specified box that live in this linebox
            </summary>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.UpdateRectangle(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Updates the specified rectangle of the specified box.
            </summary>
            <param name="box"></param>
            <param name="x"></param>
            <param name="y"></param>
            <param name="r"></param>
            <param name="b"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.AssignRectanglesToBoxes">
            <summary>
            Copies the rectangles to their specified box
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.SetBaseLine(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Double)">
            <summary>
            Sets the baseline of the words of the specified box to certain height
            </summary>
            <param name="g">Device info</param>
            <param name="b">box to check words</param>
            <param name="baseline">baseline</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.IsLastSelectedWord(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            Check if the given word is the last selected word in the line.<br/>
            It can either be the last word in the line or the next word has no selection.
            </summary>
            <param name="word">the word to check</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox.ToString">
            <summary>
            Returns the words of the linebox
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect">
            <summary>
            Represents a word inside an inline box
            </summary>
            <remarks>
            Because of performance, words of text are the most atomic 
            element in the project. It should be characters, but come on,
            imagine the performance when drawing char by char on the device.<br/>
            It may change for future versions of the library.
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect._ownerBox">
            <summary>
            the CSS box owner of the word
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect._rect">
            <summary>
            Rectangle
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect._selection">
            <summary>
            If the word is selected this points to the selection handler for more data
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Init.
            </summary>
            <param name="owner">the CSS box owner of the word</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.OwnerBox">
            <summary>
            Gets the Box where this word belongs.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Rectangle">
            <summary>
            Gets or sets the bounds of the rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Left">
            <summary>
            Left of the rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Top">
            <summary>
            Top of the rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Width">
            <summary>
            Width of the rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.FullWidth">
            <summary>
            Get the full width of the word including the spacing.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.ActualWordSpacing">
            <summary>
            Gets the actual width of whitespace between words.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Height">
            <summary>
            Height of the rectangle
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Right">
            <summary>
            Gets or sets the right of the rectangle. When setting, it only affects the Width of the rectangle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Bottom">
            <summary>
            Gets or sets the bottom of the rectangle. When setting, it only affects the Height of the rectangle.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Selection">
            <summary>
            If the word is selected this points to the selection handler for more data
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.HasSpaceBefore">
            <summary>
            was there a whitespace before the word chars (before trim)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.HasSpaceAfter">
            <summary>
            was there a whitespace after the word chars (before trim)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Image">
            <summary>
            Gets the image this words represents (if one exists)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.IsImage">
            <summary>
            Gets if the word represents an image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.IsSpaces">
            <summary>
            Gets a bool indicating if this word is composed only by spaces.
            Spaces include tabs and line breaks
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.IsLineBreak">
            <summary>
            Gets if the word is composed by only a line break
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Text">
            <summary>
            Gets the text of the word
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.Selected">
            <summary>
            is the word is currently selected
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.SelectedStartIndex">
            <summary>
            the selection start index if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.SelectedEndIndexOffset">
            <summary>
            the selection end index if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.SelectedStartOffset">
            <summary>
            the selection start offset if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.SelectedEndOffset">
            <summary>
            the selection end offset if the word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.LeftGlyphPadding">
            <summary>
            Gets or sets an offset to be considered in measurements
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect.ToString">
            <summary>
            Represents this word for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectImage">
            <summary>
            Represents a word inside an inline box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectImage._image">
            <summary>
            the image object if it is image word (can be null if not loaded)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectImage._imageRectangle">
            <summary>
            the image rectangle restriction as returned from image load event
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectImage.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Creates a new BoxWord which represents an image
            </summary>
            <param name="owner">the CSS box owner of the word</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectImage.Image">
            <summary>
            Gets the image this words represents (if one exists)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectImage.IsImage">
            <summary>
            Gets if the word represents an image.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectImage.ImageRectangle">
            <summary>
            the image rectange restriction as returned from image load event
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectImage.ToString">
            <summary>
            Represents this word for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord">
            <summary>
            Represents a word inside an inline box
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord._text">
            <summary>
            The word text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord._hasSpaceBefore">
            <summary>
            was there a whitespace before the word chars (before trim)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord._hasSpaceAfter">
            <summary>
            was there a whitespace after the word chars (before trim)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.String,System.Boolean,System.Boolean)">
            <summary>
            Init.
            </summary>
            <param name="owner">the CSS box owner of the word</param>
            <param name="text">the word chars </param>
            <param name="hasSpaceBefore">was there a whitespace before the word chars (before trim)</param>
            <param name="hasSpaceAfter">was there a whitespace after the word chars (before trim)</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord.HasSpaceBefore">
            <summary>
            was there a whitespace before the word chars (before trim)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord.HasSpaceAfter">
            <summary>
            was there a whitespace after the word chars (before trim)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord.IsSpaces">
            <summary>
            Gets a bool indicating if this word is composed only by spaces.
            Spaces include tabs and line breaks
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord.IsLineBreak">
            <summary>
            Gets if the word is composed by only a line break
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord.Text">
            <summary>
            Gets the text of the word
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRectWord.ToString">
            <summary>
            Represents this word for debugging purposes
            </summary>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssSpacingBox">
            <summary>
            Used to make space on vertical cell combination
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssSpacingBox._startRow">
            <summary>
            the index of the row where box starts
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssSpacingBox._endRow">
            <summary>
            the index of the row where box ends
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssSpacingBox.StartRow">
            <summary>
            Gets the index of the row where box starts
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssSpacingBox.EndRow">
            <summary>
            Gets the index of the row where box ends
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssUnit">
            <summary>
            Represents the possible units of the CSS lengths
            </summary>
            <remarks>
            http://www.w3.org/TR/CSS21/syndata.html#length-units
            </remarks>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HoverBoxBlock">
            <summary>
            CSS boxes that have ":hover" selector on them.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HoverBoxBlock._cssBox">
            <summary>
            the box that has :hover css on
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HoverBoxBlock._cssBlock">
            <summary>
            the :hover style block data
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HoverBoxBlock.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HoverBoxBlock.CssBox">
            <summary>
            the box that has :hover css on
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HoverBoxBlock.CssBlock">
            <summary>
            the :hover style block data
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag._name">
            <summary>
            the name of the html tag
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag._isSingle">
            <summary>
            if the tag is single placed; in other words it doesn't have a separate closing tag;
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag._attributes">
            <summary>
            collection of attributes and their value the html tag has
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag.#ctor(System.String,System.Boolean,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Init.
            </summary>
            <param name="name">the name of the html tag</param>
            <param name="isSingle">if the tag is single placed; in other words it doesn't have a separate closing tag;</param>
            <param name="attributes">collection of attributes and their value the html tag has</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag.Name">
            <summary>
            Gets the name of this tag
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag.Attributes">
            <summary>
            Gets collection of attributes and their value the html tag has
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag.IsSingle">
            <summary>
            Gets if the tag is single placed; in other words it doesn't have a separate closing tag; <br/>
            e.g. &lt;br&gt;
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag.HasAttributes">
            <summary>
            is the html tag has attributes.
            </summary>
            <returns>true - has attributes, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag.HasAttribute(System.String)">
            <summary>
            Gets a boolean indicating if the attribute list has the specified attribute
            </summary>
            <param name="attribute">attribute name to check if exists</param>
            <returns>true - attribute exists, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag.TryGetAttribute(System.String,System.String)">
            <summary>
            Get attribute value for given attribute name or null if not exists.
            </summary>
            <param name="attribute">attribute name to get by</param>
            <param name="defaultValue">optional: value to return if attribute is not specified</param>
            <returns>attribute value or null if not found</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock">
            <summary>
            Represents a block of CSS property values.<br/>
            Contains collection of key-value pairs that are CSS properties for specific css class.<br/>
            Css class can be either custom or html tag name.
            </summary>
            <remarks>
            To learn more about CSS blocks visit CSS spec: http://www.w3.org/TR/CSS21/syndata.html#block
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock._class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock._properties">
            <summary>
            the CSS block properties and values
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock._selectors">
            <summary>
            additional selectors to used in hierarchy (p className1 > className2)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock._hover">
            <summary>
            is the css block has :hover pseudo-class
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.Collections.Generic.List{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlockSelectorItem},System.Boolean)">
            <summary>
            Creates a new block from the block's source
            </summary>
            <param name="class">the name of the css class of the block</param>
            <param name="properties">the CSS block properties and values</param>
            <param name="selectors">optional: additional selectors to used in hierarchy</param>
            <param name="hover">optional: is the css block has :hover pseudo-class</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.Class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.Selectors">
            <summary>
            additional selectors to used in hierarchy (p className1 > className2)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.Properties">
            <summary>
            Gets the CSS block properties and its values
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.Hover">
            <summary>
            is the css block has :hover pseudo-class
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.Merge(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Merge the other block properties into this css block.<br/>
            Other block properties can overwrite this block properties.
            </summary>
            <param name="other">the css block to merge with</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.Clone">
            <summary>
            Create deep copy of the CssBlock.
            </summary>
            <returns>new CssBlock with same data</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.Equals(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Check if the two css blocks are the same (same class, selectors and properties).
            </summary>
            <param name="other">the other block to compare to</param>
            <returns>true - the two blocks are the same, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.EqualsSelector(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Check if the selectors of the css blocks is the same.
            </summary>
            <param name="other">the other block to compare to</param>
            <returns>true - the selectors on blocks are the same, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.Equals(System.Object)">
            <summary>
            Check if the two css blocks are the same (same class, selectors and properties).
            </summary>
            <param name="obj">the other block to compare to</param>
            <returns>true - the two blocks are the same, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.GetHashCode">
            <summary>
            Serves as a hash function for a particular type. 
            </summary>
            <returns>A hash code for the current <see cref="T:System.Object"/>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlockSelectorItem">
            <summary>
            Holds single class selector in css block hierarchical selection (p class1 > div.class2)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlockSelectorItem._class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlockSelectorItem._directParent">
            <summary>
            is the selector item has to be direct parent
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlockSelectorItem.#ctor(System.String,System.Boolean)">
            <summary>
            Creates a new block from the block's source
            </summary>
            <param name="class">the name of the css class of the block</param>
            <param name="directParent"> </param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlockSelectorItem.Class">
            <summary>
            the name of the css class of the block
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlockSelectorItem.DirectParent">
            <summary>
            is the selector item has to be direct parent
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlockSelectorItem.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents the current <see cref="T:System.Object"/>.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle">
            <summary>
            Controls the way styles are generated when html is generated.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle.None">
            <summary>
            styles are not generated at all
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle.Inline">
            <summary>
            style are inserted in style attribute for each html tag
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle.InHeader">
            <summary>
            style section is generated in the head of the html
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadCallback">
            <summary>
            Callback used in <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/> to allow setting image externally and async.<br/>
            The callback can provide path to image file path, URL or the actual image to use.<br/>
            If <paramref name="imageRectangle"/> is given (not <see cref="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Empty"/>) then only the specified rectangle will
            be used from the loaded image and not all of it, also the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="path">the path to the image to load (file path or URL)</param>
            <param name="image">the image to use</param>
            <param name="imageRectangle">optional: limit to specific rectangle in the loaded image</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs">
            <summary>
            Invoked when an image is about to be loaded by file path, URL or inline data in 'img' element or background-image CSS style.<br/>
            Allows to overwrite the loaded image by providing the image object manually, or different source (file or URL) to load from.<br/>
            Example: image 'src' can be non-valid string that is interpreted in the overwrite delegate by custom logic to resource image object<br/>
            Example: image 'src' in the html is relative - the overwrite intercepts the load and provide full source URL to load the image from<br/>
            Example: image download requires authentication - the overwrite intercepts the load, downloads the image to disk using custom code and 
            provide file path to load the image from. Can also use the asynchronous image overwrite not to block HTML rendering is applicable.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs._handled">
            <summary>
            use to cancel the image loading by html renderer, the provided image will be used.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs._src">
            <summary>
            the source of the image (file path or uri)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs._attributes">
            <summary>
            collection of all the attributes that are defined on the image element
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs._callback">
            <summary>
            Callback used to allow setting image externally and async.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String},KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadCallback)">
            <summary>
            Init.
            </summary>
            <param name="src">the source of the image (file path or Uri)</param>
            <param name="attributes">collection of all the attributes that are defined on the image element</param>
            <param name="callback">Callback used to allow setting image externally and async.</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Src">
            <summary>
            the source of the image (file path, URL or inline data)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Attributes">
            <summary>
            collection of all the attributes that are defined on the image element or CSS style
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled">
            <summary>
            Indicate the image load is handled asynchronously.
            Cancel this image loading and overwrite the image asynchronously using callback method.<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Callback">
            <summary>
            Callback to overwrite the loaded image with error image.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Callback(System.String)">
            <summary>
            Callback to overwrite the loaded image with image to load from given URI.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            </summary>
            <param name="path">the path to the image to load (file path or URL)</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Callback(System.String,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Callback to overwrite the loaded image with image to load from given URI.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            Only the specified rectangle (x,y,width,height) will be used from the loaded image and not all of it, also 
            the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="path">the path to the image to load (file path or URL)</param>
            <param name="imageRectangle">optional: limit to specific rectangle of the image and not all of it</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Callback(System.Object)">
            <summary>
            Callback to overwrite the loaded image with given image object.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            If <paramref name="imageRectangle"/> is given (not <see cref="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect.Empty"/>) then only the specified rectangle will
            be used from the loaded image and not all of it, also the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="image">the image to load</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Callback(System.Object,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Callback to overwrite the loaded image with given image object.<br/>
            Can be called directly from delegate handler or asynchronously after setting <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs.Handled"/> to True.<br/>
            Only the specified rectangle (x,y,width,height) will be used from the loaded image and not all of it, also 
            the rectangle will be used for size and not the actual image size.<br/> 
            </summary>
            <param name="image">the image to load</param>
            <param name="imageRectangle">optional: limit to specific rectangle of the image and not all of it</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs">
            <summary>
            Raised when the user clicks on a link in the html.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs._link">
            <summary>
            the link href that was clicked
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs._attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs._handled">
            <summary>
            use to cancel the execution of the link
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Init.
            </summary>
            <param name="link">the link href that was clicked</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs.Link">
            <summary>
            the link href that was clicked
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs.Attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedEventArgs.Handled">
            <summary>
            use to cancel the execution of the link
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedException">
            <summary>
            Exception thrown when client code subscribed to LinkClicked event thrown exception.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error. </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlLinkClickedException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Exception"/> class with a specified error message and a reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the reason for the exception. </param><param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs">
            <summary>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).<br/>
            It can happen if some async event has occurred that requires re-paint and re-layout of the html.<br/>
            Example: async download of image is complete.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs._layout">
            <summary>
            is re-layout is required for the refresh
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs.#ctor(System.Boolean)">
            <summary>
            Init.
            </summary>
            <param name="layout">is re-layout is required for the refresh</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRefreshEventArgs.Layout">
            <summary>
            is re-layout is required for the refresh
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs">
            <summary>
            Raised when an error occurred during html rendering.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs._type">
            <summary>
            error type that is reported
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs._message">
            <summary>
            the error message
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs._exception">
            <summary>
            the exception that occurred (can be null)
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorType,System.String,System.Exception)">
            <summary>
            Init.
            </summary>
            <param name="type">the type of error to report</param>
            <param name="message">the error message</param>
            <param name="exception">optional: the exception that occurred</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs.Type">
            <summary>
            error type that is reported
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs.Message">
            <summary>
            the error message
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorEventArgs.Exception">
            <summary>
            the exception that occurred (can be null)
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorType">
            <summary>
            Enum of possible error types that can be reported.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlScrollEventArgs">
            <summary>
            Raised when Html Renderer request scroll to specific location.<br/>
            This can occur on document anchor click.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlScrollEventArgs._location">
            <summary>
            the location to scroll to
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlScrollEventArgs.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Init.
            </summary>
            <param name="location">the location to scroll to</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlScrollEventArgs.X">
            <summary>
            the x location to scroll to
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlScrollEventArgs.Y">
            <summary>
            the x location to scroll to
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs">
            <summary>
            Invoked when a stylesheet is about to be loaded by file path or URL in 'link' element.<br/>
            Allows to overwrite the loaded stylesheet by providing the stylesheet data manually, or different source (file or URL) to load from.<br/>
            Example: The stylesheet 'href' can be non-valid URI string that is interpreted in the overwrite delegate by custom logic to pre-loaded stylesheet object<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs._src">
            <summary>
            the source of the stylesheet as found in the HTML (file path or URL)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs._attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs._setSrc">
            <summary>
            provide the new source (file path or URL) to load stylesheet from
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs._setStyleSheet">
            <summary>
            provide the stylesheet to load
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs._setStyleSheetData">
            <summary>
            provide the stylesheet data to load
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.#ctor(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Init.
            </summary>
            <param name="src">the source of the image (file path or URL)</param>
            <param name="attributes">collection of all the attributes that are defined on the image element</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.Src">
            <summary>
            the source of the stylesheet as found in the HTML (file path or URL)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.Attributes">
            <summary>
            collection of all the attributes that are defined on the link element
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.SetSrc">
            <summary>
            provide the new source (file path or URL) to load stylesheet from
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.SetStyleSheet">
            <summary>
            provide the stylesheet to load
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs.SetStyleSheetData">
            <summary>
            provide the stylesheet data to load
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.LinkElementData`1">
            <summary>
            Holds data on link element in HTML.<br/>
            Used to expose data outside of HTML Renderer internal structure.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.LinkElementData`1._id">
            <summary>
            the id of the link element if present
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.LinkElementData`1._href">
            <summary>
            the href data of the link
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.LinkElementData`1._rectangle">
            <summary>
            the rectangle of element as calculated by html layout
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.LinkElementData`1.#ctor(System.String,System.String,`0)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.LinkElementData`1.Id">
            <summary>
            the id of the link element if present
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.LinkElementData`1.Href">
            <summary>
            the href data of the link
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.LinkElementData`1.Rectangle">
            <summary>
            the rectangle of element as calculated by html layout
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.LinkElementData`1.IsAnchor">
            <summary>
            Is the link is directed to another element in the html
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.LinkElementData`1.AnchorId">
            <summary>
            Return the id of the element this anchor link is referencing.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler">
            <summary>
            Contains all the paint code to paint different background images.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler.DrawBackgroundImage(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw the background image of the given box in the given rectangle.<br/>
            Handle background-repeat and background-position values.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="box">the box to draw its background image</param>
            <param name="imageLoadHandler">the handler that loads image to draw</param>
            <param name="rectangle">the rectangle to draw image in</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler.GetLocation(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Get top-left location to start drawing the image at depending on background-position value.
            </summary>
            <param name="backgroundPosition">the background-position value</param>
            <param name="rectangle">the rectangle to position image in</param>
            <param name="imgSize">the size of the image</param>
            <returns>the top-left location</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler.DrawRepeatX(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Draw the background image at the required location repeating it over the X axis.<br/>
            Adjust location to left if starting location doesn't include all the range (adjusted to center or right).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler.DrawRepeatY(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Draw the background image at the required location repeating it over the Y axis.<br/>
            Adjust location to top if starting location doesn't include all the range (adjusted to center or bottom).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BackgroundImageDrawHandler.DrawRepeat(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Draw the background image at the required location repeating it over the X and Y axis.<br/>
            Adjust location to left-top if starting location doesn't include all the range (adjusted to center or bottom/right).
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler">
            <summary>
            Contains all the complex paint code to paint different style borders.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler._borderPts">
            <summary>
            used for all border paint to use the same points and not create new array each time.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler.DrawBoxBorders(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Draws all the border of the box with respect to style, width, etc.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="box">the box to draw borders for</param>
            <param name="rect">the bounding rectangle to draw in</param>
            <param name="isFirst">is it the first rectangle of the element</param>
            <param name="isLast">is it the last rectangle of the element</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler.DrawBorder(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.Border,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RBrush,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw simple border.
            </summary>
            <param name="border">Desired border</param>
            <param name="g">the device to draw to</param>
            <param name="box">Box which the border corresponds</param>
            <param name="brush">the brush to use</param>
            <param name="rectangle">the bounding rectangle to draw in</param>
            <returns>Beveled border path, null if there is no rounded corners</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler.DrawBorder(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.Border,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Draw specific border (top/bottom/left/right) with the box data (style/width/rounded).<br/>
            </summary>
            <param name="border">desired border to draw</param>
            <param name="box">the box to draw its borders, contain the borders data</param>
            <param name="g">the device to draw into</param>
            <param name="rect">the rectangle the border is enclosing</param>
            <param name="isLineStart">Specifies if the border is for a starting line (no bevel on left)</param>
            <param name="isLineEnd">Specifies if the border is for an ending line (no bevel on right)</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler.SetInOutsetRectanglePoints(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.Border,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Boolean,System.Boolean)">
            <summary>
            Set rectangle for inset/outset border as it need diagonal connection to other borders.
            </summary>
            <param name="border">Desired border</param>
            <param name="b">Box which the border corresponds</param>
            <param name="r">the rectangle the border is enclosing</param>
            <param name="isLineStart">Specifies if the border is for a starting line (no bevel on left)</param>
            <param name="isLineEnd">Specifies if the border is for an ending line (no bevel on right)</param>
            <returns>Beveled border path, null if there is no rounded corners</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler.GetRoundedBorderPath(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.Border,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Makes a border path for rounded borders.<br/>
            To support rounded dotted/dashed borders we need to use arc in the border path.<br/>
            Return null if the border is not rounded.<br/>
            </summary>
            <param name="g">the device to draw into</param>
            <param name="border">Desired border</param>
            <param name="b">Box which the border corresponds</param>
            <param name="r">the rectangle the border is enclosing</param>
            <returns>Beveled border path, null if there is no rounded corners</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler.GetPen(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor,System.Double)">
            <summary>
            Get pen to be used for border draw respecting its style.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler.GetColor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.Border,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties,System.String)">
            <summary>
            Get the border color for the given box border.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler.GetWidth(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.Border,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties)">
            <summary>
            Get the border width for the given box border.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler.GetStyle(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.Border,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties)">
            <summary>
            Get the border style for the given box border.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.BordersDrawHandler.Darken(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Makes the specified color darker for inset/outset borders.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler">
            <summary>
            Handle context menu.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._selectAll">
            <summary>
            select all text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._copy">
            <summary>
            copy selected text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._copyLink">
            <summary>
            copy the link source
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._openLink">
            <summary>
            open link (as left mouse click)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._copyImageLink">
            <summary>
            copy the source of the image
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._copyImage">
            <summary>
            copy image to clipboard
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._saveImage">
            <summary>
            save image to disk
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._openVideo">
            <summary>
            open video in browser
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._copyVideoUrl">
            <summary>
            copy video url to browser
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._selectionHandler">
            <summary>
            the selection handler linked to the context menu handler
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._htmlContainer">
            <summary>
            the html container the handler is on
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._contextMenu">
            <summary>
            the last context menu shown
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._parentControl">
            <summary>
            the control that the context menu was shown on
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._currentRect">
            <summary>
            the css rectangle that context menu shown on
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler._currentLink">
            <summary>
            the css link box that context menu shown on
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.#cctor">
            <summary>
            Init context menu items strings.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt)">
            <summary>
            Init.
            </summary>
            <param name="selectionHandler">the selection handler linked to the context menu handler</param>
            <param name="htmlContainer">the html container the handler is on</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.ShowContextMenu(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Show context menu clicked on given rectangle.
            </summary>
            <param name="parent">the parent control to show the context menu on</param>
            <param name="rect">the rectangle that was clicked to show context menu</param>
            <param name="link">the link that was clicked to show context menu on</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.DisposeContextMenu">
            <summary>
            Dispose of the last used context menu.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnOpenLinkClick(System.Object,System.EventArgs)">
            <summary>
            Handle link click.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnCopyLinkClick(System.Object,System.EventArgs)">
            <summary>
            Copy the href of a link to clipboard.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnSaveImageClick(System.Object,System.EventArgs)">
            <summary>
            Open save as dialog to save the image
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnCopyImageLinkClick(System.Object,System.EventArgs)">
            <summary>
            Copy the image source to clipboard.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnCopyImageClick(System.Object,System.EventArgs)">
            <summary>
            Copy image object to clipboard.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnCopyClick(System.Object,System.EventArgs)">
            <summary>
            Copy selected text.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ContextMenuHandler.OnSelectAllClick(System.Object,System.EventArgs)">
            <summary>
            Select all text.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler">
            <summary>
            Utilities for fonts and fonts families handling.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler._adapter">
            <summary>
            
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler._fontsMapping">
            <summary>
            Allow to map not installed fonts to different
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler._existingFontFamilies">
            <summary>
            collection of all installed and added font families to check if font exists
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler._fontsCache">
            <summary>
            cache of all the font used not to create same font again and again
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler.IsFontExists(System.String)">
            <summary>
            Check if the given font family exists by name
            </summary>
            <param name="family">the font to check</param>
            <returns>true - font exists by given family name, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler.AddFontFamily(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RFontFamily)">
            <summary>
            Adds a font family to be used.
            </summary>
            <param name="fontFamily">The font family to add.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler.AddFontFamilyMapping(System.String,System.String)">
            <summary>
            Adds a font mapping from <paramref name="fromFamily"/> to <paramref name="toFamily"/> iff the <paramref name="fromFamily"/> is not found.<br/>
            When the <paramref name="fromFamily"/> font is used in rendered html and is not found in existing 
            fonts (installed or added) it will be replaced by <paramref name="toFamily"/>.<br/>
            </summary>
            <param name="fromFamily">the font family to replace</param>
            <param name="toFamily">the font family to replace with</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler.GetCachedFont(System.String,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get cached font instance for the given font properties.<br/>
            Improve performance not to create same font multiple times.
            </summary>
            <returns>cached font instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler.TryGetFont(System.String,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RFontStyle)">
            <summary>
            Get cached font if it exists in cache or null if it is not.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.FontsHandler.CreateFont(System.String,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RFontStyle)" -->
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.DownloadFileAsyncCallback">
            <summary>
            On download file async complete, success or fail.
            </summary>
            <param name="imageUri">The online image uri</param>
            <param name="filePath">the path to the downloaded file</param>
            <param name="error">the error if download failed</param>
            <param name="canceled">is the file download request was canceled</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader">
            <summary>
            Handler for downloading images from the web.<br/>
            Single instance of the handler used for all images downloaded in a single html, this way if the html contains more
            than one reference to the same image it will be downloaded only once.<br/>
            Also handles corrupt, partial and canceled downloads by first downloading to temp file and only if successful moving to cached 
            file location.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader._clients">
            <summary>
            the web client used to download image from URL (to cancel on dispose)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader._imageDownloadCallbacks">
            <summary>
            dictionary of image cache path to callbacks of download to handle multiple requests to download the same image 
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader.DownloadImage(System.Uri,System.String,System.Boolean,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.DownloadFileAsyncCallback)">
            <summary>
            Makes a request to download the image from the server and raises the <see cref="!:cachedFileCallback"/> when it's down.<br/>
            </summary>
            <param name="imageUri">The online image uri</param>
            <param name="filePath">the path on disk to download the file to</param>
            <param name="async">is to download the file sync or async (true-async)</param>
            <param name="cachedFileCallback">This callback will be called with local file path. If something went wrong in the download it will return null.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader.DownloadImageFromUrl(System.Uri,System.String,System.String)">
            <summary>
            Download the requested file in the URI to the given file path.<br/>
            Use async sockets API to download from web, <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader.OnDownloadImageAsyncCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)"/>.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader.DownloadImageFromUrlAsync(System.Object)">
            <summary>
            Download the requested file in the URI to the given file path.<br/>
            Use async sockets API to download from web, <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader.OnDownloadImageAsyncCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)"/>.
            </summary>
            <param name="data">key value pair of URL and file info to download the file to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader.OnDownloadImageAsyncCompleted(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            On download image complete to local file.<br/>
            If the download canceled do nothing, if failed report error.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader.OnDownloadImageCompleted(System.Net.WebClient,System.Uri,System.String,System.String,System.Exception,System.Boolean)">
            <summary>
            Checks if the file was downloaded and raises the cachedFileCallback from <see cref="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader._imageDownloadCallbacks"/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageDownloader.ReleaseObjects">
            <summary>
            Release the image and client objects.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler">
            <summary>
            Handler for all loading image logic.<br/>
            <p>
            Loading by <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs"/>.<br/>
            Loading by file path.<br/>
            Loading by URI.<br/>
            </p>
            </summary>
            <remarks>
            <para>
            Supports sync and async image loading.
            </para>
            <para>
            If the image object is created by the handler on calling dispose of the handler the image will be released, this
            makes release of unused images faster as they can be large.<br/>
            Disposing image load handler will also cancel download of image from the web.
            </para>
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler._htmlContainer">
            <summary>
            the container of the html to handle load image for
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler._loadCompleteCallback">
            <summary>
            callback raised when image load process is complete with image or without
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler._imageFileStream">
            <summary>
            Must be open as long as the image is in use
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler._image">
            <summary>
            the image instance of the loaded image
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler._imageRectangle">
            <summary>
            the image rectangle restriction as returned from image load event
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler._asyncCallback">
            <summary>
            to know if image load event callback was sync or async raised
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler._releaseImageObject">
            <summary>
            flag to indicate if to release the image object on box dispose (only if image was loaded by the box)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler._disposed">
            <summary>
            is the handler has been disposed
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.ActionInt{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RImage,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Boolean})">
            <summary>
            Init.
            </summary>
            <param name="htmlContainer">the container of the html to handle load image for</param>
            <param name="loadCompleteCallback">callback raised when image load process is complete with image or without</param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.Image">
            <summary>
            the image instance of the loaded image
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.Rectangle">
            <summary>
            the image rectangle restriction as returned from image load event
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.LoadImage(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Set image of this image box by analyzing the src attribute.<br/>
            Load the image from inline base64 encoded string.<br/>
            Or from calling property/method on the bridge object that returns image or URL to image.<br/>
            Or from file path<br/>
            Or from URI.
            </summary>
            <remarks>
            File path and URI image loading is executed async and after finishing calling <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/>
            on the main thread and not thread-pool.
            </remarks>
            <param name="src">the source of the image to load</param>
            <param name="attributes">the collection of attributes on the element to use in event</param>
            <returns>the image object (null if failed)</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.OnHtmlImageLoadEventCallback(System.String,System.Object,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Set the image using callback from load image event, use the given data.
            </summary>
            <param name="path">the path to the image to load (file path or uri)</param>
            <param name="image">the image to load</param>
            <param name="imageRectangle">optional: limit to specific rectangle of the image and not all of it</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.SetFromInlineData(System.String)">
            <summary>
            Load the image from inline base64 encoded string data.
            </summary>
            <param name="src">the source that has the base64 encoded image</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.GetImageFromData(System.String)">
            <summary>
            Extract image object from inline base64 encoded data in the src of the html img element.
            </summary>
            <param name="src">the source that has the base64 encoded image</param>
            <returns>image from base64 data string or null if failed</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.SetImageFromPath(System.String)">
            <summary>
            Load image from path of image file or URL.
            </summary>
            <param name="path">the file path or uri to load image from</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.SetImageFromFile(System.IO.FileInfo)">
            <summary>
            Load the image file on thread-pool thread and calling <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/> after.
            </summary>
            <param name="source">the file path to get the image from</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.LoadImageFromFile(System.String)">
            <summary>
            Load the image file on thread-pool thread and calling <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/> after.<br/>
            Calling <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)"/> on the main thread and not thread-pool.
            </summary>
            <param name="source">the file path to get the image from</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.SetImageFromUrl(System.Uri)">
            <summary>
            Load image from the given URI by downloading it.<br/>
            Create local file name in temp folder from the URI, if the file already exists use it as it has already been downloaded.
            If not download the file.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.OnDownloadImageCompleted(System.Uri,System.String,System.Exception,System.Boolean)">
            <summary>
            On download image complete to local file use <see cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.LoadImageFromFile(System.String)"/> to load the image file.<br/>
            If the download canceled do nothing, if failed report error.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.ImageLoadComplete(System.Boolean)">
            <summary>
            Flag image load complete and request refresh for re-layout and invalidate.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.ImageLoadHandler.ReleaseObjects">
            <summary>
            Release the image and client objects.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler">
            <summary>
            Handler for text selection in the html.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._root">
            <summary>
            the root of the handled html tree
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._contextMenuHandler">
            <summary>
            handler for showing context menu on right click
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._selectionStartPoint">
            <summary>
            the mouse location when selection started used to ignore small selections
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._selectionStart">
            <summary>
            the starting word of html selection<br/>
            where the user started the selection, if the selection is backwards then it will be the last selected word.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._selectionEnd">
            <summary>
            the ending word of html selection<br/>
            where the user ended the selection, if the selection is backwards then it will be the first selected word.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._selectionStartIndex">
            <summary>
            the selection start index if the first selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._selectionEndIndex">
            <summary>
            the selection end index if the last selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._selectionStartOffset">
            <summary>
            the selection start offset if the first selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._selectionEndOffset">
            <summary>
            the selection end offset if the last selected word is partially selected (-1 if not selected or fully selected)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._backwardSelection">
            <summary>
            is the selection goes backward in the html, the starting word comes after the ending word in DFS traversing.<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._inSelection">
            <summary>
            used to ignore mouse up after selection
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._isDoubleClickSelect">
            <summary>
            current selection process is after double click (full word selection)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._mouseDownInControl">
            <summary>
            used to know if selection is in the control or started outside so it needs to be ignored
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._mouseDownOnSelectedWord" -->
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._cursorChanged">
            <summary>
            is the cursor on the control has been changed by the selection handler
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._lastMouseDown">
            <summary>
            used to know if double click selection is requested
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler._dragDropData" -->
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Init.
            </summary>
            <param name="root">the root of the handled html tree</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.SelectAll(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl)">
            <summary>
            Select all the words in the html.
            </summary>
            <param name="control">the control hosting the html to invalidate</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.SelectWord(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Select the word at the given location if found.
            </summary>
            <param name="control">the control hosting the html to invalidate</param>
            <param name="loc">the location to select word at</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.HandleMouseDown(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="loc">the location of the mouse on the html</param>
            <param name="isMouseInContainer"> </param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.HandleMouseUp(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,System.Boolean)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="leftMouseButton">is the left mouse button has been released</param>
            <returns>is the mouse up should be ignored</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.HandleMouseMove(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="loc">the location of the mouse on the html</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.HandleMouseLeave(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl)">
            <summary>
            On mouse leave change the cursor back to default.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.CopySelectedHtml">
            <summary>
            Copy the currently selected html segment to clipboard.<br/>
            Copy rich html text and plain text.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectedText">
            <summary>
            Get the currently selected text segment in the html.<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectedHtml">
            <summary>
            Copy the currently selected html segment with style.<br/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectingStartIndex(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            The selection start index if the first selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection start index for</param>
            <returns>data value or -1 if not applicable</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectedEndIndexOffset(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            The selection end index if the last selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection end index for</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectedStartOffset(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            The selection start offset if the first selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection start offset for</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.GetSelectedEndOffset(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            The selection end offset if the last selected word is partially selected (-1 if not selected or fully selected)<br/>
            if the given word is not starting or ending selection word -1 is returned as full word selection is in place.
            </summary>
            <remarks>
            Handles backward selecting by returning the selection end data instead of start.
            </remarks>
            <param name="word">the word to return the selection end offset for</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.HandleSelection(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Handle html text selection by mouse move over the html with left mouse button pressed.<br/>
            Calculate the words in the selected range and set their selected property.
            </summary>
            <param name="control">the control hosting the html to invalidate</param>
            <param name="loc">the mouse location</param>
            <param name="allowPartialSelect">true - partial word selection allowed, false - only full words selection</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.ClearSelection(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Clear the selection from all the words in the css box recursively.
            </summary>
            <param name="box">the css box to selectionStart clear at</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.StartDragDrop(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl)" -->
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.SelectAllWords(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Select all the words that are under <paramref name="box"/> DOM hierarchy.<br/>
            </summary>
            <param name="box">the box to start select all at</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.CheckNonEmptySelection(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Check if the current selection is non empty, has some selection data.
            </summary>
            <param name="loc"></param>
            <param name="allowPartialSelect">true - partial word selection allowed, false - only full words selection</param>
            <returns>true - is non empty selection, false - empty selection</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.SelectWordsInRange(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            Select all the words that are between <paramref name="selectionStart"/> word and <paramref name="selectionEnd"/> word in the DOM hierarchy.<br/>
            </summary>
            <param name="root">the root of the DOM sub-tree the selection is in</param>
            <param name="selectionStart">selection start word limit</param>
            <param name="selectionEnd">selection end word limit</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.SelectWordsInRange(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect,System.Boolean@)">
            <summary>
            Select all the words that are between <paramref name="selectionStart"/> word and <paramref name="selectionEnd"/> word in the DOM hierarchy.
            </summary>
            <param name="box">the current traversal node</param>
            <param name="selectionStart">selection start word limit</param>
            <param name="selectionEnd">selection end word limit</param>
            <param name="inSelection">used to know the traversal is currently in selected range</param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.CalculateWordCharIndexAndOffset(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Calculate the character index and offset by characters for the given word and given offset.<br/>
            <seealso cref="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.CalculateWordCharIndexAndOffset(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)"/>.
            </summary>
            <param name="control">used to create graphics to measure string</param>
            <param name="word">the word to calculate its index and offset</param>
            <param name="loc">the location to calculate for</param>
            <param name="selectionStart">to set the starting or ending char and offset data</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.CalculateWordCharIndexAndOffset(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean,System.Int32@,System.Double@)">
            <summary>
            Calculate the character index and offset by characters for the given word and given offset.<br/>
            If the location is below the word line then set the selection to the end.<br/>
            If the location is to the right of the word then set the selection to the end.<br/>
            If the offset is to the left of the word set the selection to the beginning.<br/>
            Otherwise calculate the width of each substring to find the char the location is on.
            </summary>
            <param name="control">used to create graphics to measure string</param>
            <param name="word">the word to calculate its index and offset</param>
            <param name="loc">the location to calculate for</param>
            <param name="inclusive">is to include the first character in the calculation</param>
            <param name="selectionIndex">return the index of the char under the location</param>
            <param name="selectionOffset">return the offset of the char under the location</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.SelectionHandler.CheckSelectionDirection">
            <summary>
            Check if the selection direction is forward or backward.<br/>
            Is the selection start word is before the selection end word in DFS traversal.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.StylesheetLoadHandler">
            <summary>
            Handler for loading a stylesheet data.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.StylesheetLoadHandler.LoadStylesheet(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,System.String,System.Collections.Generic.Dictionary{System.String,System.String},System.String@,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData@)">
            <summary>
            Load stylesheet data from the given source.<br/>
            The source can be local file or web URI.<br/>
            First raise <see cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs"/> event to allow the client to overwrite the stylesheet loading.<br/>
            If the stylesheet is downloaded from URI we will try to correct local URIs to absolute.<br/>
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="src">the source of the element to load the stylesheet by</param>
            <param name="attributes">the attributes of the link element</param>
            <param name="stylesheet">return the stylesheet string that has been loaded (null if failed or <paramref name="stylesheetData"/> is given)</param>
            <param name="stylesheetData">return stylesheet data object that was provided by overwrite (null if failed or <paramref name="stylesheet"/> is given)</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.StylesheetLoadHandler.LoadStylesheet(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,System.String)">
            <summary>
            Load stylesheet string from given source (file path or uri).
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="src">the file path or uri to load the stylesheet from</param>
            <returns>the stylesheet string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.StylesheetLoadHandler.LoadStylesheetFromFile(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,System.String)">
            <summary>
            Load the stylesheet from local file by given path.
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="path">the stylesheet file to load</param>
            <returns>the loaded stylesheet string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.StylesheetLoadHandler.LoadStylesheetFromUri(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,System.Uri)">
            <summary>
            Load the stylesheet from uri by downloading the string.
            </summary>
            <param name="htmlContainer">the container of the html to handle load stylesheet for</param>
            <param name="uri">the uri to download from</param>
            <returns>the loaded stylesheet string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Handlers.StylesheetLoadHandler.CorrectRelativeUrls(System.String,System.Uri)">
            <summary>
            Make relative URLs absolute in the stylesheet using the URI of the stylesheet.
            </summary>
            <param name="stylesheet">the stylesheet to correct</param>
            <param name="baseUri">the stylesheet uri to use to create absolute URLs</param>
            <returns>Corrected stylesheet</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt">
            <summary>
            Low level handling of Html Renderer logic.<br/>
            Allows html layout and rendering without association to actual control, those allowing to handle html rendering on any graphics object.<br/>
            Using this class will require the client to handle all propagation's of mouse/keyboard events, layout/paint calls, scrolling offset, 
            location/size/rectangle handling and UI refresh requests.<br/>
            </summary>
            <remarks>
            <para>
            <b>MaxSize and ActualSize:</b><br/>
            The max width and height of the rendered html.<br/>
            The max width will effect the html layout wrapping lines, resize images and tables where possible.<br/>
            The max height does NOT effect layout, but will not render outside it (clip).<br/>
            <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.ActualSize"/> can exceed the max size by layout restrictions (unwrap-able line, set image size, etc.).<br/>
            Set zero for unlimited (width/height separately).<br/>
            </para>
            <para>
            <b>ScrollOffset:</b><br/>
            This will adjust the rendered html by the given offset so the content will be "scrolled".<br/>
            Element that is rendered at location (50,100) with offset of (0,200) will not be rendered 
            at -100, therefore outside the client rectangle.
            </para>
            <para>
            <b>LinkClicked event</b><br/>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link to overwrite by custom logic.<br/>
            If error occurred in event handler it will propagate up the stack.
            </para>
            <para>
            <b>StylesheetLoad event:</b><br/>
            Raised when a stylesheet is about to be loaded by file path or URL in 'link' element.<br/>
            Allows to overwrite the loaded stylesheet by providing the stylesheet data manually, or different source (file or URL) to load from.<br/>
            Example: The stylesheet 'href' can be non-valid URI string that is interpreted in the overwrite delegate by custom logic to pre-loaded stylesheet object<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <b>ImageLoad event:</b><br/>
            Raised when an image is about to be loaded by file path, URL or inline data in 'img' element or background-image CSS style.<br/>
            Allows to overwrite the loaded image by providing the image object manually, or different source (file or URL) to load from.<br/>
            Example: image 'src' can be non-valid string that is interpreted in the overwrite delegate by custom logic to resource image object<br/>
            Example: image 'src' in the html is relative - the overwrite intercepts the load and provide full source URL to load the image from<br/>
            Example: image download requires authentication - the overwrite intercepts the load, downloads the image to disk using custom code and provide 
            file path to load the image from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </para>
            <para>
            <b>Refresh event:</b><br/>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).<br/>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </para>
            <para>
            <b>RenderError event:</b><br/>
            Raised when an error occurred during html rendering.<br/>
            </para>
            </remarks>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._adapter">
            <summary>
            Main adapter to framework specific logic.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._cssParser">
            <summary>
            parser for CSS data
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._root">
            <summary>
            the root css box of the parsed html
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._hoverBoxes">
            <summary>
            list of all css boxes that have ":hover" selector on them
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._selectionHandler">
            <summary>
            Handler for text selection in the html. 
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._imageDownloader">
            <summary>
            Handler for downloading of images in the html
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._selectionForeColor">
            <summary>
            the text fore color use for selected text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._selectionBackColor">
            <summary>
            the back-color to use for selected text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._cssData">
            <summary>
            the parsed stylesheet data used for handling the html
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._isSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._isContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled (default - true)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._avoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided 
            for geometry like backgrounds and borders
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._avoidAsyncImagesLoading">
            <summary>
            Gets or sets a value indicating if image asynchronous loading should be avoided (default - false).<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._avoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._loadComplete">
            <summary>
            is the load of the html document is complete
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._location">
            <summary>
            the top-left most location of the rendered html
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._maxSize">
            <summary>
            the max width and height of the rendered html, effects layout, actual size cannot exceed this values.<br/>
            Set zero for unlimited.<br/>
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._scrollOffset">
            <summary>
            Gets or sets the scroll offset of the document for scroll controls
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._actualSize">
            <summary>
            The actual size of the rendered html (after layout)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._marginTop">
            <summary>
            the top margin between the page start and the text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._marginBottom">
            <summary>
            the bottom margin between the page end and the text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._marginLeft">
            <summary>
            the left margin between the page start and the text
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt._marginRight">
            <summary>
            the right margin between the page end and the text
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.Adapter">
            <summary>
            
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.CssParser">
            <summary>
            parser for CSS data
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.LoadComplete">
            <summary>
            Raised when the set html document has been fully loaded.<br/>
            Allows manipulation of the html dom, scroll position, etc.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.LinkClicked">
            <summary>
            Raised when the user clicks on a link in the html.<br/>
            Allows canceling the execution of the link.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.Refresh">
            <summary>
            Raised when html renderer requires refresh of the control hosting (invalidation and re-layout).
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.ScrollChange">
            <summary>
            Raised when Html Renderer request scroll to specific location.<br/>
            This can occur on document anchor click.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.RenderError">
            <summary>
            Raised when an error occurred during html rendering.<br/>
            </summary>
            <remarks>
            There is no guarantee that the event will be raised on the main thread, it can be raised on thread-pool thread.
            </remarks>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.StylesheetLoad">
            <summary>
            Raised when a stylesheet is about to be loaded by file path or URI by link element.<br/>
            This event allows to provide the stylesheet manually or provide new source (file or Uri) to load from.<br/>
            If no alternative data is provided the original source will be used.<br/>
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.ImageLoad">
            <summary>
            Raised when an image is about to be loaded by file path or URI.<br/>
            This event allows to provide the image manually, if not handled the image will be loaded from file or download from URI.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.CssData">
            <summary>
            the parsed stylesheet data used for handling the html
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.AvoidGeometryAntialias">
            <summary>
            Gets or sets a value indicating if anti-aliasing should be avoided for geometry like backgrounds and borders (default - false).
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.AvoidAsyncImagesLoading">
            <summary>
            Gets or sets a value indicating if image asynchronous loading should be avoided (default - false).<br/>
            True - images are loaded synchronously during html parsing.<br/>
            False - images are loaded asynchronously to html parsing when downloaded from URL or loaded from disk.<br/>
            </summary>
            <remarks>
            Asynchronously image loading allows to unblock html rendering while image is downloaded or loaded from disk using IO 
            ports to achieve better performance.<br/>
            Asynchronously image loading should be avoided when the full html content must be available during render, like render to image.
            </remarks>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.AvoidImagesLateLoading">
            <summary>
            Gets or sets a value indicating if image loading only when visible should be avoided (default - false).<br/>
            True - images are loaded as soon as the html is parsed.<br/>
            False - images that are not visible because of scroll location are not loaded until they are scrolled to.
            </summary>
            <remarks>
            Images late loading improve performance if the page contains image outside the visible scroll area, especially if there is large 
            amount of images, as all image loading is delayed (downloading and loading into memory).<br/>
            Late image loading may effect the layout and actual size as image without set size will not have actual size until they are loaded
            resulting in layout change during user scroll.<br/>
            Early image loading may also effect the layout if image without known size above the current scroll location are loaded as they
            will push the html elements down.
            </remarks>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.IsSelectionEnabled">
            <summary>
            Is content selection is enabled for the rendered html (default - true).<br/>
            If set to 'false' the rendered html will be static only with ability to click on links.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.IsContextMenuEnabled">
            <summary>
            Is the build-in context menu enabled and will be shown on mouse right click (default - true)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.ScrollOffset">
            <summary>
            The scroll offset of the html.<br/>
            This will adjust the rendered html by the given offset so the content will be "scrolled".<br/>
            </summary>
            <example>
            Element that is rendered at location (50,100) with offset of (0,200) will not be rendered as it
            will be at -100 therefore outside the client rectangle.
            </example>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.Location">
            <summary>
            The top-left most location of the rendered html.<br/>
            This will offset the top-left corner of the rendered html.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.MaxSize">
            <summary>
            The max width and height of the rendered html.<br/>
            The max width will effect the html layout wrapping lines, resize images and tables where possible.<br/>
            The max height does NOT effect layout, but will not render outside it (clip).<br/>
            <see cref="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.ActualSize"/> can be exceed the max size by layout restrictions (unwrapable line, set image size, etc.).<br/>
            Set zero for unlimited (width\height separately).<br/>
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.ActualSize">
            <summary>
            The actual size of the rendered html (after layout)
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.MarginTop">
            <summary>
            the top margin between the page start and the text
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.MarginBottom">
            <summary>
            the bottom margin between the page end and the text
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.MarginLeft">
            <summary>
            the left margin between the page start and the text
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.MarginRight">
            <summary>
            the right margin between the page end and the text
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.SetMargins(System.Int32)">
            <summary>
            Set all 4 margins to the given value.
            </summary>
            <param name="value"></param>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.SelectedText">
            <summary>
            Get the currently selected text segment in the html.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.SelectedHtml">
            <summary>
            Copy the currently selected html segment with style.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.Root">
            <summary>
            the root css box of the parsed html
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.SelectionForeColor">
            <summary>
            the text fore color use for selected text
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.SelectionBackColor">
            <summary>
            the back-color to use for selected text
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.SetHtml(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData)">
            <summary>
            Init with optional document and stylesheet.
            </summary>
            <param name="htmlSource">the html to init with, init empty if not given</param>
            <param name="baseCssData">optional: the stylesheet to init with, init default if not given</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.Clear">
            <summary>
            Clear the content of the HTML container releasing any resources used to render previously existing content.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.ClearSelection">
            <summary>
            Clear the current selection.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.GetHtml(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle)">
            <summary>
            Get html from the current DOM tree with style if requested.
            </summary>
            <param name="styleGen">Optional: controls the way styles are generated when html is generated (default: <see cref="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle.Inline"/>)</param>
            <returns>generated html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.GetAttributeAt(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,System.String)">
            <summary>
            Get attribute value of element at the given x,y location by given key.<br/>
            If more than one element exist with the attribute at the location the inner most is returned.
            </summary>
            <param name="location">the location to find the attribute at</param>
            <param name="attribute">the attribute key to get value by</param>
            <returns>found attribute value or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.GetLinks">
            <summary>
            Get all the links in the HTML with the element rectangle and href data.
            </summary>
            <returns>collection of all the links in the HTML</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.GetLinkAt(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get css link href at the given x,y location.
            </summary>
            <param name="location">the location to find the link at</param>
            <returns>css link href if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.GetElementRectangle(System.String)">
            <summary>
            Get the rectangle of html element as calculated by html layout.<br/>
            Element if found by id (id attribute on the html element).<br/>
            Note: to get the screen rectangle you need to adjust by the hosting control.<br/>
            </summary>
            <param name="elementId">the id of the element to get its rectangle</param>
            <returns>the rectangle of the element or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.PerformLayout(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Measures the bounds of box and children, recursively.
            </summary>
            <param name="g">Device context to draw</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.PerformPaint(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics)">
            <summary>
            Render the html using the given device.
            </summary>
            <param name="g">the device to use to render</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.HandleMouseDown(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse down to handle selection.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="location">the location of the mouse</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.HandleMouseUp(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RMouseEvent)">
            <summary>
            Handle mouse up to handle selection and link click.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="location">the location of the mouse</param>
            <param name="e">the mouse event data</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.HandleMouseDoubleClick(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse double click to select word under the mouse.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="location">the location of the mouse</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.HandleMouseMove(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Handle mouse move to handle hover cursor and text selection.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
            <param name="location">the location of the mouse</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.HandleMouseLeave(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl)">
            <summary>
            Handle mouse leave to handle hover cursor.
            </summary>
            <param name="parent">the control hosting the html to set cursor and invalidate</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.HandleKeyDown(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RKeyEvent)">
            <summary>
            Handle key down event for selection and copy.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="e">the pressed key</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.RaiseHtmlStylesheetLoadEvent(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlStylesheetLoadEventArgs)">
            <summary>
            Raise the stylesheet load event with the given event args.
            </summary>
            <param name="args">the event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.RaiseHtmlImageLoadEvent(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlImageLoadEventArgs)">
            <summary>
            Raise the image load event with the given event args.
            </summary>
            <param name="args">the event args</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.RequestRefresh(System.Boolean)">
            <summary>
            Request invalidation and re-layout of the control hosting the renderer.
            </summary>
            <param name="layout">is re-layout is required for the refresh</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.ReportError(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlRenderErrorType,System.String,System.Exception)">
            <summary>
            Report error in html render process.
            </summary>
            <param name="type">the type of error to report</param>
            <param name="message">the error message</param>
            <param name="exception">optional: the exception that occured</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.HandleLinkClicked(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RControl,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Handle link clicked going over <see cref="E:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.LinkClicked"/> event and using <see cref="M:System.Diagnostics.Process.Start"/> if not canceled.
            </summary>
            <param name="parent">the control hosting the html to invalidate</param>
            <param name="location">the location of the mouse</param>
            <param name="link">the link that was clicked</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.AddHoverBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            AddBulk css box that has ":hover" selector to be handled on mouse hover.
            </summary>
            <param name="box">the box that has the hover selector</param>
            <param name="block">the css block with the css data with the selector</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.GetImageDownloader">
            <summary>
            Get image downloader to be used to download images for the current html rendering.<br/>
            Lazy create single downloader to be used for all images in the current html.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.OffsetByScroll(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Adjust the offset of the given location by the current scroll offset.
            </summary>
            <param name="location">the location to adjust</param>
            <returns>the adjusted location</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.IsMouseInContainer(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Check if the mouse is currently on the html container.<br/>
            Relevant if the html container is not filled in the hosted control (location is not zero and the size is not the full size of the control).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt.Dispose(System.Boolean)">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlRendererUtils">
            <summary>
            General utilities.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlRendererUtils.MeasureHtmlByRestrictions(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Measure the size of the html by performing layout under the given restrictions.
            </summary>
            <param name="g">the graphics to use</param>
            <param name="htmlContainer">the html to calculate the layout for</param>
            <param name="minSize">the minimal size of the rendered html (zero - not limit the width/height)</param>
            <param name="maxSize">the maximum size of the rendered html, if not zero and html cannot be layout within the limit it will be clipped (zero - not limit the width/height)</param>
            <returns>return: the size of the html to be rendered within the min/max limits</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlRendererUtils.Layout(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,System.Boolean,System.Boolean)">
            <summary>
            Perform the layout of the html container by given size restrictions returning the final size.<br/>
            The layout can be effected by the HTML content in the <paramref name="htmlContainer"/> if <paramref name="autoSize"/> or
            <paramref name="autoSizeHeightOnly"/> is set to true.<br/>
            Handle minimum and maximum size restrictions.<br/>
            Handle auto size and auto size for height only. if <paramref name="autoSize"/> is true <paramref name="autoSizeHeightOnly"/>
            is ignored.<br/>
            </summary>
            <param name="g">the graphics used for layout</param>
            <param name="htmlContainer">the html container to layout</param>
            <param name="size">the current size</param>
            <param name="minSize">the min size restriction - can be empty for no restriction</param>
            <param name="maxSize">the max size restriction - can be empty for no restriction</param>
            <param name="autoSize">if to modify the size (width and height) by html content layout</param>
            <param name="autoSizeHeightOnly">if to modify the height by html content layout</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser">
            <summary>
            Parser to parse CSS stylesheet source string into CSS objects.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser._cssBlockSplitters">
            <summary>
            split CSS rule
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser._adapter">
            <summary>
            
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser._valueParser">
            <summary>
            Utility for value parsing.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser._cssClassTrimChars">
            <summary>
            The chars to trim the css class name by
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseStyleSheet(System.String,System.Boolean)">
            <summary>
            Parse the given stylesheet source to CSS blocks dictionary.<br/>
            The CSS blocks are organized into two level buckets of media type and class name.<br/>
            Root media type are found under 'all' bucket.<br/>
            If <paramref name="combineWithDefault"/> is true the parsed css blocks are added to the 
            default css data (as defined by W3), merged if class name already exists. If false only the data in the given stylesheet is returned.
            </summary>
            <seealso cref="!:http://www.w3.org/TR/CSS21/sample.html"/>
            <param name="stylesheet">raw css stylesheet to parse</param>
            <param name="combineWithDefault">true - combine the parsed css data with default css data, false - return only the parsed css data</param>
            <returns>the CSS data with parsed CSS objects (never null)</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseStyleSheet(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.String)">
            <summary>
            Parse the given stylesheet source to CSS blocks dictionary.<br/>
            The CSS blocks are organized into two level buckets of media type and class name.<br/>
            Root media type are found under 'all' bucket.<br/>
            The parsed css blocks are added to the given css data, merged if class name already exists.
            </summary>
            <param name="cssData">the CSS data to fill with parsed CSS objects</param>
            <param name="stylesheet">raw css stylesheet to parse</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseCssBlock(System.String,System.String)">
            <summary>
            Parse single CSS block source into CSS block instance.
            </summary>
            <param name="className">the name of the css class of the block</param>
            <param name="blockSource">the CSS block to parse</param>
            <returns>the created CSS block instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseFontFamily(System.String)">
            <summary>
            Parse a complex font family css property to check if it contains multiple fonts and if the font exists.<br/>
            returns the font family name to use or 'inherit' if failed.
            </summary>
            <param name="value">the font-family value to parse</param>
            <returns>parsed font-family value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseColor(System.String)">
            <summary>
            Parses a color value in CSS style; e.g. #ff0000, red, rgb(255,0,0), rgb(100%, 0, 0) 
            </summary>
            <param name="colorStr">color string value to parse</param>
            <returns>color value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.RemoveStylesheetComments(System.String)">
            <summary>
            Remove comments from the given stylesheet.
            </summary>
            <param name="stylesheet">the stylesheet to remove comments from</param>
            <returns>stylesheet without comments</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseStyleBlocks(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.String)">
            <summary>
            Parse given stylesheet for CSS blocks<br/>
            This blocks are added under the "all" keyword.
            </summary>
            <param name="cssData">the CSS data to fill with parsed CSS objects</param>
            <param name="stylesheet">the stylesheet to parse</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseMediaStyleBlocks(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.String)">
            <summary>
            Parse given stylesheet for media CSS blocks<br/>
            This blocks are added under the specific media block they are found.
            </summary>
            <param name="cssData">the CSS data to fill with parsed CSS objects</param>
            <param name="stylesheet">the stylesheet to parse</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.FeedStyleBlock(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.String,System.String)">
            <summary>
            Feeds the style with a block about the specific media.<br/>
            When no media is specified, "all" will be used.
            </summary>
            <param name="cssData"> </param>
            <param name="block">the CSS block to handle</param>
            <param name="media">optional: the media (default - all)</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseCssBlockImp(System.String,System.String)">
            <summary>
            Parse single CSS block source into CSS block instance.
            </summary>
            <param name="className">the name of the css class of the block</param>
            <param name="blockSource">the CSS block to parse</param>
            <returns>the created CSS block instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseCssBlockSelector(System.String,System.String@)">
            <summary>
            Parse css block selector to support hierarchical selector (p class1 > class2).
            </summary>
            <param name="className">the class selector to parse</param>
            <param name="firstClass">return the main class the css block is on</param>
            <returns>returns the hierarchy of classes or null if single class selector</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseCssBlockProperties(System.String)">
            <summary>
            Parse the properties of the given css block into a key-value dictionary.
            </summary>
            <param name="blockSource">the raw css block to parse</param>
            <returns>dictionary with parsed css block properties</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.AddProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            AddBulk the given property to the given properties collection, if the property is complex containing
            multiple css properties then parse them and add the inner properties.
            </summary>
            <param name="propName">the name of the css property to add</param>
            <param name="propValue">the value of the css property to add</param>
            <param name="properties">the properties collection to add to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseLengthProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse length property to add only valid lengths.
            </summary>
            <param name="propName">the name of the css property to add</param>
            <param name="propValue">the value of the css property to add</param>
            <param name="properties">the properties collection to add to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseColorProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse color property to add only valid color.
            </summary>
            <param name="propName">the name of the css property to add</param>
            <param name="propValue">the value of the css property to add</param>
            <param name="properties">the properties collection to add to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseFontProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex font property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseImageProperty(System.String)">
            <summary>
            
            </summary>
            <param name="propValue">the value of the property to parse</param>
            <returns>parsed value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseFontFamilyProperty(System.String)">
            <summary>
            Parse a complex font family css property to check if it contains multiple fonts and if the font exists.<br/>
            returns the font family name to use or 'inherit' if failed.
            </summary>
            <param name="propValue">the value of the property to parse</param>
            <returns>parsed font-family value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseBorderProperty(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="direction">the left, top, right or bottom direction of the border to parse</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseMarginProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex margin property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseBorderStyleProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border style property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseBorderWidthProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border width property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseBorderColorProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex border color property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParsePaddingProperty(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Parse a complex padding property value that contains multiple css properties into specific css properties.
            </summary>
            <param name="propValue">the value of the property to parse to specific values</param>
            <param name="properties">the properties collection to add the specific properties to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.SplitMultiDirectionValues(System.String,System.String@,System.String@,System.String@,System.String@)">
            <summary>
            Split multi direction value into the proper direction values (left, top, right, bottom).
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.SplitValues(System.String,System.Char)">
            <summary>
            Split the value by the specified separator; e.g. Useful in values like 'padding:5 4 3 inherit'
            </summary>
            <param name="value">Value to be splitted</param>
            <param name="separator"> </param>
            <returns>Splitted and trimmed values</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseBorder(System.String,System.String@,System.String@,System.String@)">
            <summary>
            
            </summary>
            <param name="value"></param>
            <param name="width"> </param>
            <param name="style"></param>
            <param name="color"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseBorderWidth(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given substring to extract border width substring.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>found border width value or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseBorderStyle(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given substring to extract border style substring.<br/>
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>found border width value or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser.ParseBorderColor(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given substring to extract border style substring.<br/>
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>found border width value or null</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser">
            <summary>
            Parse CSS properties values like numbers, Urls, etc.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser._adapter">
            <summary>
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RAdapter)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.IsFloat(System.String,System.Int32,System.Int32)">
            <summary>
            Check if the given substring is a valid double number.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>true - valid double number, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.IsInt(System.String,System.Int32,System.Int32)">
            <summary>
            Check if the given substring is a valid double number.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>true - valid int number, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.IsValidLength(System.String)">
            <summary>
            Check if the given string is a valid length value.
            </summary>
            <param name="value">the string value to check</param>
            <returns>true - valid, false - invalid</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.ParseNumber(System.String,System.Double)">
            <summary>
            Evals a number and returns it. If number is a percentage, it will be multiplied by <see cref="!:hundredPercent"/>
            </summary>
            <param name="number">Number to be parsed</param>
            <param name="hundredPercent">Number that represents the 100% if parsed number is a percentage</param>
            <returns>Parsed number. Zero if error while parsing.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.ParseLength(System.String,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties,System.Boolean)">
            <summary>
            Parses a length. Lengths are followed by an unit identifier (e.g. 10px, 3.1em)
            </summary>
            <param name="length">Specified length</param>
            <param name="hundredPercent">Equivalent to 100 percent when length is percentage</param>
            <param name="fontAdjust">if the length is in pixels and the length is font related it needs to use 72/96 factor</param>
            <param name="box"></param>
            <returns>the parsed length value with adjustments</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.ParseLength(System.String,System.Double,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties,System.String)">
            <summary>
            Parses a length. Lengths are followed by an unit identifier (e.g. 10px, 3.1em)
            </summary>
            <param name="length">Specified length</param>
            <param name="hundredPercent">Equivalent to 100 percent when length is percentage</param>
            <param name="box"></param>
            <param name="defaultUnit"></param>
            <returns>the parsed length value with adjustments</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.ParseLength(System.String,System.Double,System.Double,System.String,System.Boolean,System.Boolean)">
            <summary>
            Parses a length. Lengths are followed by an unit identifier (e.g. 10px, 3.1em)
            </summary>
            <param name="length">Specified length</param>
            <param name="hundredPercent">Equivalent to 100 percent when length is percentage</param>
            <param name="emFactor"></param>
            <param name="defaultUnit"></param>
            <param name="fontAdjust">if the length is in pixels and the length is font related it needs to use 72/96 factor</param>
            <param name="returnPoints">Allows the return double to be in points. If false, result will be pixels</param>
            <returns>the parsed length value with adjustments</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.GetUnit(System.String,System.String,System.Boolean@)">
            <summary>
            Get the unit to use for the length, use default if no unit found in length string.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.IsColorValid(System.String)">
            <summary>
            Check if the given color string value is valid.
            </summary>
            <param name="colorValue">color string value to parse</param>
            <returns>true - valid, false - invalid</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.GetActualColor(System.String)">
            <summary>
            Parses a color value in CSS style; e.g. #ff0000, red, rgb(255,0,0), rgb(100%, 0, 0)
            </summary>
            <param name="colorValue">color string value to parse</param>
            <returns>Color value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.TryGetColor(System.String,System.Int32,System.Int32,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor@)">
            <summary>
            Parses a color value in CSS style; e.g. #ff0000, RED, RGB(255,0,0), RGB(100%, 0, 0)
            </summary>
            <param name="str">color substring value to parse</param>
            <param name="idx">substring start idx </param>
            <param name="length">substring length</param>
            <param name="color">return the parsed color</param>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.GetActualBorderWidth(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties)">
            <summary>
            Parses a border value in CSS style; e.g. 1px, 1, thin, thick, medium
            </summary>
            <param name="borderValue"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.GetColorByHex(System.String,System.Int32,System.Int32,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor@)">
            <summary>
            Get color by parsing given hex value color string (#A28B34).
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.GetColorByRgb(System.String,System.Int32,System.Int32,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor@)">
            <summary>
            Get color by parsing given RGB value color string (RGB(255,180,90))
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.GetColorByRgba(System.String,System.Int32,System.Int32,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor@)">
            <summary>
            Get color by parsing given RGBA value color string (RGBA(255,180,90,180))
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.GetColorByName(System.String,System.Int32,System.Int32,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor@)">
            <summary>
            Get color by given name, including .NET name.
            </summary>
            <returns>true - valid color, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.ParseIntAtIndex(System.String,System.Int32@)">
            <summary>
            Parse the given decimal number string to positive int value.<br/>
            Start at given <paramref name="startIdx"/>, ignore whitespaces and take
            as many digits as possible to parse to int.
            </summary>
            <param name="str">the string to parse</param>
            <param name="startIdx">the index to start parsing at</param>
            <returns>parsed int or 0</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.ParseInt(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given decimal number string to positive int value.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>int value, -1 if not valid</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssValueParser.ParseHexInt(System.String,System.Int32,System.Int32)">
            <summary>
            Parse the given hex number string to positive int value.
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>int value, -1 if not valid</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser">
            <summary>
            Handle css DOM tree generation from raw html and stylesheet.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser._cssParser">
            <summary>
            Parser for CSS
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.#ctor(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser)">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.GenerateCssTree(System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData@)">
            <summary>
            Generate css tree by parsing the given html and applying the given css style data on it.
            </summary>
            <param name="html">the html to parse</param>
            <param name="htmlContainer">the html container to use for reference resolve</param>
            <param name="cssData">the css data to use</param>
            <returns>the root of the generated tree</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.CascadeParseStyles(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData@,System.Boolean@)">
            <summary>
            Read styles defined inside the dom structure in links and style elements.<br/>
            If the html tag is "style" tag parse it content and add to the css data for all future tags parsing.<br/>
            If the html tag is "link" that point to style data parse it content and add to the css data for all future tags parsing.<br/>
            </summary>
            <param name="box">the box to parse style data in</param>
            <param name="htmlContainer">the html container to use for reference resolve</param>
            <param name="cssData">the style data to fill with found styles</param>
            <param name="cssDataChanged">check if the css data has been modified by the handled html not to change the base css data</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.CascadeApplyStyles(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData)">
            <summary>
            Applies style to all boxes in the tree.<br/>
            If the html tag has style defined for each apply that style to the css box of the tag.<br/>
            If the html tag has "class" attribute and the class name has style defined apply that style on the tag css box.<br/>
            If the html tag has "style" attribute parse it and apply the parsed style on the tag css box.<br/>
            </summary>
            <param name="box">the box to apply the style to</param>
            <param name="cssData">the style data for the html</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.SetTextSelectionStyle(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData)">
            <summary>
            Set the selected text style (selection text color and background color).
            </summary>
            <param name="htmlContainer"> </param>
            <param name="cssData">the style data</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.AssignClassCssBlocks(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData)">
            <summary>
            Assigns the given css classes to the given css box checking if matching.<br/>
            Support multiple classes in single attribute separated by whitespace.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="cssData">the css data to use to get the matching css blocks</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.AssignCssBlocks(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData,System.String)">
            <summary>
            Assigns the given css style blocks to the given css box checking if matching.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="cssData">the css data to use to get the matching css blocks</param>
            <param name="className">the class selector to search for css blocks</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.IsBlockAssignableToBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Check if the given css block is assignable to the given css box.<br/>
            the block is assignable if it has no hierarchical selectors or if the hierarchy matches.<br/>
            Special handling for ":hover" pseudo-class.<br/>
            </summary>
            <param name="box">the box to check assign to</param>
            <param name="block">the block to check assign of</param>
            <returns>true - the block is assignable to the box, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.IsBlockAssignableToBoxWithSelector(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Check if the given css block is assignable to the given css box by validating the selector.<br/>
            </summary>
            <param name="box">the box to check assign to</param>
            <param name="block">the block to check assign of</param>
            <returns>true - the block is assignable to the box, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.AssignCssBlock(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.CssBlock)">
            <summary>
            Assigns the given css style block properties to the given css box.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="block">the css block to assign</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.IsStyleOnElementAllowed(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.String,System.String)">
            <summary>
            Check if the given style is allowed to be set on the given css box.<br/>
            Used to prevent invalid CssBoxes creation like table with inline display style.
            </summary>
            <param name="box">the css box to assign css to</param>
            <param name="key">the style key to cehck</param>
            <param name="value">the style value to check</param>
            <returns>true - style allowed, false - not allowed</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.CloneCssData(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData@,System.Boolean@)">
            <summary>
            Clone css data if it has not already been cloned.<br/>
            Used to preserve the base css data used when changed by style inside html.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.TranslateAttributes(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            
            </summary>
            <param name="tag"></param>
            <param name="box"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.TranslateLength(System.String)">
            <summary>
            Converts an HTML length into a Css length
            </summary>
            <param name="htmlLength"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.ApplyTableBorder(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.String)">
            <summary>
            Cascades to the TD's the border spacified in the TABLE tag.
            </summary>
            <param name="table"></param>
            <param name="border"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.ApplyTablePadding(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.String)">
            <summary>
            Cascades to the TD's the border spacified in the TABLE tag.
            </summary>
            <param name="table"></param>
            <param name="padding"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.SetForAllCells(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.ActionInt{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox})">
            <summary>
            Execute action on all the "td" cells of the table.<br/>
            Handle if there is "theader" or "tbody" exists.
            </summary>
            <param name="table">the table element</param>
            <param name="action">the action to execute</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.CorrectTextBoxes(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Go over all the text boxes (boxes that have some text that will be rendered) and
            remove all boxes that have only white-spaces but are not 'preformatted' so they do not effect
            the rendered html.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.CorrectImgBoxes(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Go over all image boxes and if its display style is set to block, put it inside another block but set the image to inline.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.CorrectLineBreaksBlocks(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Boolean@)">
            <summary>
            Correct the DOM tree recursively by replacing  "br" html boxes with anonymous blocks that respect br spec.<br/>
            If the "br" tag is after inline box then the anon block will have zero height only acting as newline,
            but if it is after block box then it will have min-height of the font size so it will create empty line.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
            <param name="followingBlock">used to know if the br is following a box so it should create an empty line or not so it only
            move to a new line</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.CorrectBlockInsideInline(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Correct DOM tree if there is block boxes that are inside inline blocks.<br/>
            Need to rearrange the tree so block box will be only the child of other block box.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.CorrectBlockInsideInlineImp(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Rearrange the DOM of the box to have block box with boxes before the inner block box and after.
            </summary>
            <param name="box">the box that has the problem</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.CorrectBlockSplitBadBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Split bad box that has inline and block boxes into two parts, the left - before the block box
            and right - after the block box.
            </summary>
            <param name="parentBox">the parent box that has the problem</param>
            <param name="badBox">the box to split into different boxes</param>
            <param name="leftBlock">the left block box that is created for the split</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.CorrectInlineBoxesParent(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Makes block boxes be among only block boxes and all inline boxes have block parent box.<br/>
            Inline boxes should live in a pool of Inline boxes only so they will define a single block.<br/>
            At the end of this process a block box will have only block siblings and inline box will have
            only inline siblings.
            </summary>
            <param name="box">the current box to correct its sub-tree</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.ContainsInlinesOnlyDeep(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Check if the given box contains only inline child boxes in all subtree.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - only inline child boxes, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.DomParser.ContainsVariantBoxes(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Check if the given box contains inline and block child boxes.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - has variant child boxes, false - otherwise</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.HtmlParser">
            <summary>
            
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.HtmlParser.ParseDocument(System.String)">
            <summary>
            Parses the source html to css boxes tree structure.
            </summary>
            <param name="source">the html source to parse</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.HtmlParser.AddTextBox(System.String,System.Int32,System.Int32,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox@)">
            <summary>
            AddBulk html text anon box to the current box, this box will have the rendered text<br/>
            Adding box also for text that contains only whitespaces because we don't know yet if
            the box is preformatted. At later stage they will be removed if not relevant.
            </summary>
            <param name="source">the html source to parse</param>
            <param name="startIdx">the start of the html part</param>
            <param name="tagIdx">the index of the next html tag</param>
            <param name="curBox">the current box in html tree parsing</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.HtmlParser.ParseHtmlTag(System.String,System.Int32,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox@)">
            <summary>
            Parse the html part, the part from prev parsing index to the beginning of the next html tag.<br/>
            </summary>
            <param name="source">the html source to parse</param>
            <param name="tagIdx">the index of the next html tag</param>
            <param name="curBox">the current box in html tree parsing</param>
            <returns>the end of the parsed part, the new start index</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.HtmlParser.ParseHtmlTag(System.String,System.Int32,System.Int32,System.String@,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            Parse raw html tag source to <seealso cref="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.HtmlTag"/> object.<br/>
            Extract attributes found on the tag.
            </summary>
            <param name="source">the html source to parse</param>
            <param name="idx">the start index of the tag in the source</param>
            <param name="length">the length of the tag from the start index in the source</param>
            <param name="name">return the name of the html tag</param>
            <param name="attributes">return the dictionary of tag attributes</param>
            <returns>true - the tag is closing tag, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.HtmlParser.ExtractAttributes(System.String,System.Int32,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String}@)">
            <summary>
            Extract html tag attributes from the given sub-string.
            </summary>
            <param name="source">the html source to parse</param>
            <param name="idx">the start index of the tag attributes in the source</param>
            <param name="length">the length of the tag attributes from the start index in the source</param>
            <param name="attributes">return the dictionary of tag attributes</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils">
            <summary>
            Collection of regular expressions used when parsing
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssMediaTypes">
            <summary>
            Extracts the media types from a media at-rule; e.g. @media print, 3d, screen {
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssBlocks">
            <summary>
            Extracts defined blocks in CSS. 
            WARNING: Blocks will include blocks inside at-rules.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssNumber">
            <summary>
            Extracts a number; e.g.  5, 6, 7.5, 0.9
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssPercentage">
            <summary>
            Extracts css percentages from the string; e.g. 100% .5% 5.4%
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssLength">
            <summary>
            Extracts CSS lengths; e.g. 9px 3pt .89em
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssLineHeight">
            <summary>
            Extracts line-height values (normal, numbers, lengths, percentages)
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontFamily">
            <summary>
            Extracts font-family values
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontStyle">
            <summary>
            Extracts CSS font-styles; e.g. normal italic oblique
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontVariant">
            <summary>
            Extracts CSS font-variant values; e.g. normal, small-caps
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontWeight">
            <summary>
            Extracts font-weight values; e.g. normal, bold, bolder...
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontSize">
            <summary>
            Exracts font sizes: xx-small, larger, small, 34pt, 30%, 2em
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.CssFontSizeAndLineHeight">
            <summary>
            Gets the font-size[/line-height]? on the font shorthand property.
            Check http://www.w3.org/TR/CSS21/fonts.html#font-shorthand
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils._regexes">
            <summary>
            the regexes cache that is used by the parser so not to create regex each time
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.GetCssAtRules(System.String,System.Int32@)">
            <summary>
            Get CSS at rule from the given stylesheet.
            </summary>
            <param name="stylesheet">the stylesheet data to retrieve the rule from</param>
            <param name="startIdx">the index to start the search for the rule, on return will be the value of the end of the found rule</param>
            <returns>the found at rule or null if not exists</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.Match(System.String,System.String)">
            <summary>
            Extracts matches from the specified source
            </summary>
            <param name="regex">Regular expression to extract matches</param>
            <param name="source">Source to extract matches</param>
            <returns>Collection of matches</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.Search(System.String,System.String)">
            <summary>
            Searches the specified regex on the source
            </summary>
            <param name="regex"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.Search(System.String,System.String,System.Int32@)">
            <summary>
            Searches the specified regex on the source
            </summary>
            <param name="regex"></param>
            <param name="source"></param>
            <param name="position"> </param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.RegexParserUtils.GetRegex(System.String)">
            <summary>
            Get regex instance for the given regex string.
            </summary>
            <param name="regex">the regex string to use</param>
            <returns>the regex instance</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.ArgChecker">
            <summary>
            Static class that contains argument-checking methods
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.ArgChecker.AssertIsTrue``1(System.Boolean,System.String)">
            <summary>
            Validate given <see cref="!:condition"/> is true, otherwise throw exception.
            </summary>
            <typeparam name="TException">Exception type to throw.</typeparam>
            <param name="condition">Condition to assert.</param>
            <param name="message">Exception message in-case of assert failure.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.ArgChecker.AssertArgNotNull(System.Object,System.String)">
            <summary>
            Validate given argument isn't Null.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null</exception>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.ArgChecker.AssertArgNotNull(System.IntPtr,System.String)">
            <summary>
            Validate given argument isn't <see cref="F:System.IntPtr.Zero"/>.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is <see cref="F:System.IntPtr.Zero"/></exception>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.ArgChecker.AssertArgNotNullOrEmpty(System.String,System.String)">
            <summary>
            Validate given argument isn't Null or empty.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null or empty</exception>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.ArgChecker.AssertArgOfType``1(System.Object,System.String)">
            <summary>
            Validate given argument isn't Null.
            </summary>
            <typeparam name="T">Type expected of <see cref="!:arg"/></typeparam>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null</exception>
            <returns><see cref="!:arg"/> cast as <see cref="!:T"/></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.ArgChecker.AssertFileExist(System.String,System.String)">
            <summary>
            Validate given argument isn't Null or empty AND argument value is the path of existing file.
            </summary>
            <param name="arg">argument to validate</param>
            <param name="argName">Name of the argument checked</param>
            <exception cref="T:System.ArgumentNullException">if <paramref name="arg"/> is Null or empty</exception>
            <exception cref="T:System.IO.FileNotFoundException">if <see cref="!:arg"/> file-path not exist</exception>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils">
            <summary>
            Utility methods for general stuff.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils._romanDigitsTable">
            <summary>
            Table to convert numbers into roman digits
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils._tempPath">
            <summary>
            the temp path to use for local files
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.IsAsianCharecter(System.Char)">
            <summary>
            Check if the given char is of Asian range.
            </summary>
            <param name="ch">the character to check</param>
            <returns>true - Asian char, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.IsDigit(System.Char,System.Boolean)">
            <summary>
            Check if the given char is a digit character (0-9) and (0-9, a-f for HEX)
            </summary>
            <param name="ch">the character to check</param>
            <param name="hex">optional: is hex digit check</param>
            <returns>true - is digit, false - not a digit</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.ToDigit(System.Char,System.Boolean)">
            <summary>
            Convert the given char to digit.
            </summary>
            <param name="ch">the character to check</param>
            <param name="hex">optional: is hex digit check</param>
            <returns>true - is digit, false - not a digit</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.Max(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RSize)">
            <summary>
            Get size that is max of <paramref name="size"/> and <paramref name="other"/> for width and height separately.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.TryGetUri(System.String)">
            <summary>
            Get Uri object for the given path if it is valid uri path.
            </summary>
            <param name="path">the path to get uri for</param>
            <returns>uri or null if not valid</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.GetFirstValueOrDefault``2(System.Collections.Generic.IDictionary{``0,``1},``1)">
            <summary>
            Get the first value in the given dictionary.
            </summary>
            <typeparam name="TKey">the type of dictionary key</typeparam>
            <typeparam name="TValue">the type of dictionary value</typeparam>
            <param name="dic">the dictionary</param>
            <param name="defaultValue">optional: the default value to return of no elements found in dictionary </param>
            <returns>first element or default value</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.TryGetFileInfo(System.String)">
            <summary>
            Get file info object for the given path if it is valid file path.
            </summary>
            <param name="path">the path to get file info for</param>
            <returns>file info or null if not valid</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.GetResponseContentType(System.Net.WebClient)">
            <summary>
            Get web client response content type.
            </summary>
            <param name="client">the web client to get the response content type from</param>
            <returns>response content type or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.GetLocalfileName(System.Uri)">
            <summary>
            Gets the representation of the online uri on the local disk.
            </summary>
            <param name="imageUri">The online image uri.</param>
            <returns>The path of the file on the disk.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.GetNextSubString(System.String,System.Int32,System.Int32@)">
            <summary>
            Get substring separated by whitespace starting from the given idex.
            </summary>
            <param name="str">the string to get substring in</param>
            <param name="idx">the index to start substring search from</param>
            <param name="length">return the length of the found string</param>
            <returns>the index of the substring, -1 if no valid sub-string found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.SubStringEquals(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            Compare that the substring of <paramref name="str"/> is equal to <paramref name="str2"/>
            Assume given substring is not empty and all indexes are valid!<br/>
            </summary>
            <returns>true - equals, false - not equals</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.GetValidFileName(System.String)">
            <summary>
            Replaces invalid filename chars to '_'
            </summary>
            <param name="source">The possibly-not-valid filename</param>
            <returns>A valid filename.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.ConvertToAlphaNumber(System.Int32,System.String)">
            <summary>
            Convert number to alpha numeric system by the requested style (UpperAlpha, LowerRoman, Hebrew, etc.).
            </summary>
            <param name="number">the number to convert</param>
            <param name="style">the css style to convert by</param>
            <returns>converted string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.ConvertToEnglishNumber(System.Int32,System.Boolean)">
            <summary>
            Convert the given integer into alphabetic numeric format (D, AU, etc.)
            </summary>
            <param name="number">the number to convert</param>
            <param name="lowercase">is to use lowercase</param>
            <returns>the roman number string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.ConvertToGreekNumber(System.Int32)">
            <summary>
            Convert the given integer into alphabetic numeric format (alpha, AU, etc.)
            </summary>
            <param name="number">the number to convert</param>
            <returns>the roman number string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.ConvertToRomanNumbers(System.Int32,System.Boolean)">
            <summary>
            Convert the given integer into roman numeric format (II, VI, IX, etc.)
            </summary>
            <param name="number">the number to convert</param>
            <param name="lowercase">if to use lowercase letters for roman digits</param>
            <returns>the roman number string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.ConvertToSpecificNumbers(System.Int32,System.String[0:,0:])">
            <summary>
            Convert the given integer into given alphabet numeric system.
            </summary>
            <param name="number">the number to convert</param>
            <param name="alphabet">the alphabet system to use</param>
            <returns>the number string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CommonUtils.ConvertToSpecificNumbers2(System.Int32,System.String[])">
            <summary>
            Convert the given integer into given alphabet numeric system.
            </summary>
            <param name="number">the number to convert</param>
            <param name="alphabet">the alphabet system to use</param>
            <returns>the number string</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants">
            <summary>
            String constants to avoid typing errors.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants.Cm">
            <summary>
            Centimeters
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants.Mm">
            <summary>
            Millimeters
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants.Px">
            <summary>
            Pixels
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants.In">
            <summary>
            Inches
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants.Em">
            <summary>
            Em - The font size of the relevant font
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants.Ex">
            <summary>
            The 'x-height' of the relevan font
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants.Pt">
            <summary>
            Points
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants.Pc">
            <summary>
            Picas
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants.FontSize">
            <summary>
            Default font size in points. Change this value to modify the default font size.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssConstants.DefaultFont">
            <summary>
            Default font used for the generic 'serif' family
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssUtils">
            <summary>
            Utility method for handling CSS stuff.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssUtils._defaultSelectionBackcolor">
            <summary>
            Brush for selection background
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssUtils.DefaultSelectionBackcolor">
            <summary>
            Brush for selection background
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssUtils.WhiteSpace(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBoxProperties)">
            <summary>
            Gets the white space width of the specified box
            </summary>
            <param name="g"></param>
            <param name="box"></param>
            <returns></returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssUtils.GetPropertyValue(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.String)">
            <summary>
            Get CSS box property value by the CSS name.<br/>
            Used as a mapping between CSS property and the class property.
            </summary>
            <param name="cssBox">the CSS box to get it's property value</param>
            <param name="propName">the name of the CSS property</param>
            <returns>the value of the property, null if no such property exists</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.CssUtils.SetPropertyValue(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.String,System.String)">
            <summary>
            Set CSS box property value by the CSS name.<br/>
            Used as a mapping between CSS property and the class property.
            </summary>
            <param name="cssBox">the CSS box to set it's property value</param>
            <param name="propName">the name of the CSS property</param>
            <param name="value">the value to set</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils">
            <summary>
            Utility class for traversing DOM structure and execution stuff on it.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.IsInBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Check if the given location is inside the given box deep.<br/>
            Check inner boxes and all lines that the given box spans to.
            </summary>
            <param name="box">the box to check</param>
            <param name="location">the location to check</param>
            <returns>true - location inside the box, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.ContainsInlinesOnly(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Check if the given box contains only inline child boxes.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - only inline child boxes, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.FindParent(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.String,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Recursively searches for the parent with the specified HTML Tag name
            </summary>
            <param name="root"></param>
            <param name="tagName"></param>
            <param name="box"></param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetPreviousSibling(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the previous sibling of this box.
            </summary>
            <returns>Box before this one on the tree. Null if its the first</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetPreviousContainingBlockSibling(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the previous sibling of this box.
            </summary>
            <returns>Box before this one on the tree. Null if its the first</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.IsBoxHasWhitespace(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            fix word space for first word in inline tag.
            </summary>
            <param name="box">the box to check</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetNextSibling(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Gets the next sibling of this box.
            </summary>
            <returns>Box before this one on the tree. Null if its the first</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetAttribute(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.String)">
            <summary>
            Get attribute value by given key starting search from given box, search up the tree until
            attribute found or root.
            </summary>
            <param name="box">the box to start lookup at</param>
            <param name="attribute">the attribute to get</param>
            <returns>the value of the attribute or null if not found</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetCssBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint,System.Boolean)">
            <summary>
            Get css box under the given sub-tree at the given x,y location, get the inner most.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box by</param>
            <param name="visible">Optional: if to get only visible boxes (default - true)</param>
            <returns>css link box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetAllLinkBoxes(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Collections.Generic.List{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox})">
            <summary>
            Collect all link boxes found in the HTML tree.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="linkBoxes">collection to add all link boxes to</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetLinkBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get css link box under the given sub-tree at the given x,y location.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box by</param>
            <returns>css link box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetBoxById(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.String)">
            <summary>
            Get css box under the given sub-tree with the given id.<br/>
            </summary>
            <param name="box">the box to start search from</param>
            <param name="id">the id to find the box by</param>
            <returns>css box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetCssLineBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get css line box under the given sub-tree at the given y location or the nearest line from the top.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box at</param>
            <returns>css word box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetCssBoxWord(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get css word box under the given sub-tree at the given x,y location.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="box">the box to start search from</param>
            <param name="location">the location to find the box at</param>
            <returns>css word box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetCssBoxWord(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssLineBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RPoint)">
            <summary>
            Get css word box under the given sub-tree at the given x,y location.<br/>
            the location must be in correct scroll offset.
            </summary>
            <param name="lineBox">the line box to search in</param>
            <param name="location">the location to find the box at</param>
            <returns>css word box if exists or null</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetCssLineBoxByWord(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect)">
            <summary>
            Find the css line box that the given word is in.
            </summary>
            <param name="word">the word to search for it's line box</param>
            <returns>line box that the word is in</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetSelectedPlainText(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Get selected plain text of the given html sub-tree.
            </summary>
            <param name="root">the DOM box to get selected text from its sub-tree</param>
            <returns>the selected plain text string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GenerateHtml(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle,System.Boolean)">
            <summary>
            Generate html from the given DOM tree.<br/>
            Generate all the style inside the html, in header or for every tag depending on <paramref name="styleGen"/> value.
            </summary>
            <param name="root">the box of the html generate html from</param>
            <param name="styleGen">Optional: controls the way styles are generated when html is generated</param>
            <param name="onlySelected">Optional: true - generate only selected html subset, false - generate all (default - false)</param>
            <returns>generated html</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GenerateBoxTree(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Generate textual tree representation of the css boxes tree starting from the given root.<br/>
            Used for debugging html parsing.
            </summary>
            <param name="root">the root to generate tree from</param>
            <returns>generated tree</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetSelectedPlainText(System.Text.StringBuilder,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Get selected plain text of the given html sub-tree.<br/>
            Append all the selected words.
            </summary>
            <param name="sb">the builder to append the selected text to</param>
            <param name="box">the DOM box to get selected text from its sub-tree</param>
            <returns>the index of the last word appended</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.CollectSelectedBoxes(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Collect the boxes that have at least one word down the hierarchy that is selected recursively.<br/>
            </summary>
            <param name="root">the box to check its sub-tree</param>
            <returns>the collection to add the selected tags to</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.CollectSelectedBoxes(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Collections.Generic.Dictionary{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Boolean},System.Collections.Generic.Dictionary{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Boolean})">
            <summary>
            Collect the boxes that have at least one word down the hierarchy that is selected recursively.<br/>
            Use <paramref name="maybeBoxes"/> to handle boxes that are between selected words but don't have selected word inside.<br/>
            </summary>
            <param name="box">the box to check its sub-tree</param>
            <param name="selectedBoxes">the hash to add the selected boxes to</param>
            <param name="maybeBoxes">used to handle boxes that are between selected words but don't have selected word inside</param>
            <returns>is the current box is in selected sub-tree</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetSelectionRoot(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Collections.Generic.Dictionary{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Boolean})">
            <summary>
            find the box the is the root of selected boxes (the first box to contain multiple selected boxes)
            </summary>
            <param name="root">the root of the boxes tree</param>
            <param name="selectedBoxes">the selected boxes to find selection root in</param>
            <returns>the box that is the root of selected boxes</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.ContainsNamedBox(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Check if the given box has a names child box (has html tag) recursively.
            </summary>
            <param name="box">the box to check</param>
            <returns>true - in sub-tree there is a named box, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.WriteHtml(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser,System.Text.StringBuilder,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle,System.Collections.Generic.Dictionary{KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Boolean},KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Write the given html DOM sub-tree into the given string builder.<br/>
            If <paramref name="selectedBoxes"/> are given write html only from those tags.
            </summary>
            <param name="cssParser">used to parse CSS data</param>
            <param name="sb">the string builder to write html into</param>
            <param name="box">the html sub-tree to write</param>
            <param name="styleGen">Controls the way styles are generated when html is generated</param>
            <param name="selectedBoxes">Control if to generate only selected boxes, if given only boxes found in hash will be generated</param>
            <param name="selectionRoot">the box the is the root of selected boxes (the first box to contain multiple selected boxes)</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.WriteHtmlTag(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Parse.CssParser,System.Text.StringBuilder,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Entities.HtmlGenerationStyle)">
            <summary>
            Write the given html tag with all its attributes and styles.
            </summary>
            <param name="cssParser">used to parse CSS data</param>
            <param name="sb">the string builder to write html into</param>
            <param name="box">the css box with the html tag to write</param>
            <param name="styleGen">Controls the way styles are generated when html is generated</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.StripDefaultStyles(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Clean the given style collection by removing default styles so only custom styles remain.<br/>
            Return new collection where the old remains unchanged.
            </summary>
            <param name="box">the box the styles apply to, used to know the default style</param>
            <param name="tagStyles">the collection of styles to clean</param>
            <returns>new cleaned styles collection</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.WriteStylesheet(System.Text.StringBuilder,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.CssData)">
            <summary>
            Write stylesheet data inline into the html.
            </summary>
            <param name="sb">the string builder to write stylesheet into</param>
            <param name="cssData">the css data to write to the head</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GetSelectedWord(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssRect,System.Boolean)">
            <summary>
            Get the selected word with respect to partial selected words.
            </summary>
            <param name="rect">the word to append</param>
            <param name="selectedText">is to get selected text or all the text in the word</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.DomUtils.GenerateBoxTree(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox,System.Text.StringBuilder,System.Int32)">
            <summary>
            Generate textual tree representation of the css boxes tree starting from the given root.<br/>
            Used for debugging html parsing.
            </summary>
            <param name="box">the box to generate for</param>
            <param name="builder">the string builder to generate to</param>
            <param name="indent">the current indent level to set indent of generated text</param>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.HtmlConstants">
            <summary>
            Defines HTML strings
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.HtmlUtils._list">
            <summary>
            List of html tags that don't have content
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.HtmlUtils._encodeDecode">
            <summary>
            the html encode\decode pairs
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.HtmlUtils._decodeOnly">
            <summary>
            the html decode only pairs
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.HtmlUtils.#cctor">
            <summary>
            Init.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.HtmlUtils.IsSingleTag(System.String)">
            <summary>
            Is the given html tag is single tag or can have content.
            </summary>
            <param name="tagName">the tag to check (must be lower case)</param>
            <returns>true - is single tag, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.HtmlUtils.DecodeHtml(System.String)">
            <summary>
            Decode html encoded string to regular string.<br/>
            Handles &lt;, &gt;, "&amp;.
            </summary>
            <param name="str">the string to decode</param>
            <returns>decoded string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.HtmlUtils.EncodeHtml(System.String)">
            <summary>
            Encode regular string into html encoded string.<br/>
            Handles &lt;, &gt;, "&amp;.
            </summary>
            <param name="str">the string to encode</param>
            <returns>encoded string</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.HtmlUtils.DecodeHtmlCharByCode(System.String)">
            <summary>
            Decode html special charecters encoded using char entity code (&#8364;)
            </summary>
            <param name="str">the string to decode</param>
            <returns>decoded string</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.HtmlUtils.DecodeHtmlCharByName(System.String)" -->
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.RenderUtils">
            <summary>
            Provides some drawing functionality
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.RenderUtils.IsColorVisible(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RColor)">
            <summary>
            Check if the given color is visible if painted (has alpha and color values)
            </summary>
            <param name="color">the color to check</param>
            <returns>true - visible, false - not visible</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.RenderUtils.ClipGraphicsByOverflow(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Dom.CssBox)">
            <summary>
            Clip the region the graphics will draw on by the overflow style of the containing block.<br/>
            Recursively travel up the tree to find containing block that has overflow style set to hidden. if not
            block found there will be no clipping and null will be returned.
            </summary>
            <param name="g">the graphics to clip</param>
            <param name="box">the box that is rendered to get containing blocks</param>
            <returns>true - was clipped, false - not clipped</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.RenderUtils.DrawImageLoadingIcon(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw image loading icon.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="htmlContainer"></param>
            <param name="r">the rectangle to draw icon in</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.RenderUtils.DrawImageErrorIcon(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.HtmlContainerInt,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect)">
            <summary>
            Draw image failed to load icon.
            </summary>
            <param name="g">the device to draw into</param>
            <param name="htmlContainer"></param>
            <param name="r">the rectangle to draw icon in</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.RenderUtils.GetRoundRect(KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.RGraphics,KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Adapters.Entities.RRect,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a rounded rectangle using the specified corner radius<br/>
            NW-----NE
             |       |
             |       |
            SW-----SE
            </summary>
            <param name="g">the device to draw into</param>
            <param name="rect">Rectangle to round</param>
            <param name="nwRadius">Radius of the north east corner</param>
            <param name="neRadius">Radius of the north west corner</param>
            <param name="seRadius">Radius of the south east corner</param>
            <param name="swRadius">Radius of the south west corner</param>
            <returns>GraphicsPath with the lines of the rounded rectangle ready to be painted</returns>
        </member>
        <member name="T:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString">
            <summary>
            Represents sub-string of a full string starting at specific location with a specific length.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString._fullString">
            <summary>
            the full string that this sub-string is part of
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString._startIdx">
            <summary>
            the start index of the sub-string
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString._length">
            <summary>
            the length of the sub-string starting at <see cref="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString._startIdx"/>
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.#ctor(System.String)">
            <summary>
            Init sub-string that is the full string.
            </summary>
            <param name="fullString">the full string that this sub-string is part of</param>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Init.
            </summary>
            <param name="fullString">the full string that this sub-string is part of</param>
            <param name="startIdx">the start index of the sub-string</param>
            <param name="length">the length of the sub-string starting at <paramref name="startIdx"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="fullString"/> is null</exception>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.FullString">
            <summary>
            the full string that this sub-string is part of
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.StartIdx">
            <summary>
            the start index of the sub-string
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.Length">
            <summary>
            the length of the sub-string starting at <see cref="F:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString._startIdx"/>
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.Item(System.Int32)">
            <summary>
            Get string char at specific index.
            </summary>
            <param name="idx">the idx to get the char at</param>
            <returns>char at index</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.IsEmpty">
            <summary>
            Is the sub-string is empty string.
            </summary>
            <returns>true - empty string, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.IsEmptyOrWhitespace">
            <summary>
            Is the sub-string is empty string or contains only whitespaces.
            </summary>
            <returns>true - empty or whitespace string, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.IsWhitespace">
            <summary>
            Is the sub-string contains only whitespaces (at least one).
            </summary>
            <returns>true - empty or whitespace string, false - otherwise</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.CutSubstring">
            <summary>
            Get a string of the sub-string.<br/>
            This will create a new string object!
            </summary>
            <returns>new string that is the sub-string represented by this instance</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTooltipHelpers.HtmlRenderer.Core.Utils.SubString.Substring(System.Int32,System.Int32)">
            <summary>
            Retrieves a substring from this instance. The substring starts at a specified character position and has a specified length. 
            </summary>
            <param name="startIdx">The zero-based starting character position of a substring in this instance.</param>
            <param name="length">The number of characters in the substring. </param>
            <returns>A String equivalent to the substring of length length that begins at startIndex in this instance, or 
            Empty if startIndex is equal to the length of this instance and length is zero. </returns>
        </member>
        <member name="T:KimTools.WinForms.KtAnimatorNS.Animation">
            <summary>
            provides the standard animation settings.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtAnimatorNS.TransitionTypes">
            <summary>
            Provides various supported animation types.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.Custom">
            <summary>
            Lets you provide a custom animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.Rotate">
            <summary>
            Rotate animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.HorizSlide">
            <summary>
            Horizontal Slide animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.VertSlide">
            <summary>
            Vertical Slide animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.Scale">
            <summary>
            Scale animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.ScaleAndRotate">
            <summary>
            Scale and Rotate animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.HorizSlideAndRotate">
            <summary>
            Horizontal Slide and Rotate animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.ScaleAndHorizSlide">
            <summary>
            Scale and Horizontal Slide animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.Transparent">
            <summary>
            Transparent animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.Leaf">
            <summary>
            Leaf-bend animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.Mosaic">
            <summary>
            Mosaic Shift animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.Particles">
            <summary>
            Particles effect animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.VertBlind">
            <summary>
            Vertical Blind animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.TransitionTypes.HorizBlind">
            <summary>
            Horizontal Blind animation.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.DoubleBitmapControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtAnimatorNS.DoubleBitmapControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtAnimatorNS.DoubleBitmapControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.KtAnimatorNS.DoubleBitmapForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtAnimatorNS.DoubleBitmapForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtAnimatorNS.DoubleBitmapForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtAnimatorNS.PointFConverter.#ctor">
            <summary>
            Creates a new instance of PointFConverter
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtAnimatorNS.PointFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Boolean, true if the source type is a string
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtAnimatorNS.PointFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts the specified string into a PointF
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtAnimatorNS.PointFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the PointF into a string
            </summary>
        </member>
        <member name="T:KimTools.WinForms.KtTransitions">
            <summary>
            AddBulk beautiful transitions to your controls and 
            container controls when showing/hiding them.
            </summary>
            <seealso cref="T:System.ComponentModel.Component" />
            <seealso cref="T:System.ComponentModel.IExtenderProvider" />
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTransitions" /> class.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.#ctor(System.ComponentModel.IContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTransitions" /> class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.MaxAnimationTime">
            <summary>
            Gets or sets the maximum animation time (in milliseconds).
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.Interval">
            <summary>
            Gets or sets the interval between frames (in milliseconds).
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.TimeStep">
            <summary>
            Gets or sets the animation time step.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.DefaultAnimation">
            <summary>
            Gets or sets the default animation type.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.Cursor">
            <summary>
            Gets or sets the animation control's cursor.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.TransitionEffect">
            <summary>
            Gets or sets the animation type.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.IsCompleted">
            <summary>
            Are all animations completed?
            </summary>
            <value><c>true</c> if this instance is completed; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.AddToQueue(System.Windows.Forms.Control,KimTools.WinForms.AnimateMode,System.Boolean,KimTools.WinForms.KtAnimatorNS.Animation,System.Drawing.Rectangle)">
            <summary>
            Adds the contol to animation queue.
            </summary>
            <param name="control">Target control</param>
            <param name="mode">Animation mode</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
            <param name="clipRectangle">The clip rectangle.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.ClearQueue">
            <summary>
            Clears queue.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.Show(System.Windows.Forms.Control,System.Boolean,KimTools.WinForms.KtAnimatorNS.Animation)">
            <summary>
            Shows the control. As result the control will be shown with animation.
            </summary>
            <param name="control">Target control</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.ShowSync(System.Windows.Forms.Control,System.Boolean,KimTools.WinForms.KtAnimatorNS.Animation)">
            <summary>
            Shows the control and waits while animation will be completed. As result the control will be shown with animation.
            </summary>
            <param name="control">Target control</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.Hide(System.Windows.Forms.Control,System.Boolean,KimTools.WinForms.KtAnimatorNS.Animation)">
            <summary>
            Hides the control. As result the control will be hidden with animation.
            </summary>
            <param name="control">Target control</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.HideSync(System.Windows.Forms.Control,System.Boolean,KimTools.WinForms.KtAnimatorNS.Animation)">
            <summary>
            Hides the control and waits while animation will be completed. As result the control will be hidden with animation.
            </summary>
            <param name="control">Target control</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.BeginUpdate(System.Windows.Forms.Control,System.Boolean,KimTools.WinForms.KtAnimatorNS.Animation,System.Drawing.Rectangle)">
            <summary>
            It makes snapshot of the control before updating. It requires EndUpdate calling.
            </summary>
            <param name="control">Target control</param>
            <param name="parallel">Allows to animate it same time as other animations</param>
            <param name="animation">Personal animation</param>
            <param name="clipRectangle">Clip rectangle for animation</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.EndUpdate(System.Windows.Forms.Control)">
            <summary>
            Upadates control view with animation. It requires to call BeginUpdate before.
            </summary>
            <param name="control">Target control</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.EndUpdateSync(System.Windows.Forms.Control)">
            <summary>
            Upadates control view with animation and waits while animation will be completed. It requires to call BeginUpdate before.
            </summary>
            <param name="control">Target control</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.WaitAllAnimations">
            <summary>
            Waits while all animations will completed.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.WaitAnimation(System.Windows.Forms.Control)">
            <summary>
            Waits while animation of the control will completed.
            </summary>
            <param name="animatedControl">The animated control.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.Work">
            <summary>
            Works this instance.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.CheckRequests">
            <summary>
            initialize component result state of controls.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.RepairState(System.Windows.Forms.Control,KimTools.WinForms.AnimateMode)">
            <summary>
            Repairs the state.
            </summary>
            <param name="control">The control.</param>
            <param name="mode">The mode.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.DoAnimation(KimTools.WinForms.KtTransitions.QueueItem)">
            <summary>
            Does the animation.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.InitDefaultAnimation(KimTools.WinForms.KtAnimatorNS.TransitionTypes)">
            <summary>
            Initializes the default animation.
            </summary>
            <param name="transitionTypes">Type of the animation.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.Init">
            <summary>
            Initializes this instance.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.Start">
            <summary>
            Starts this instance.
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTransitions.AnimationCompleted">
            <summary>
            Occurs when animation of the control is completed
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTransitions.AllAnimationsCompleted">
            <summary>
            Ocuurs when all animations are completed
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTransitions.TransfromNeeded">
            <summary>
            Occurs when needed transform matrix
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTransitions.NonLinearTransfromNeeded">
            <summary>
            Occurs when needed non-linear transformation
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTransitions.MouseDown">
            <summary>
            Occurs when user click on the animated control
            </summary>
        </member>
        <member name="E:KimTools.WinForms.KtTransitions.FramePainted">
            <summary>
            Occurs when frame of animation is painting
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.IsStateOK(System.Windows.Forms.Control,KimTools.WinForms.AnimateMode)">
            <summary>
            Determines whether [is state ok] [the specified control].
            </summary>
            <param name="control">The control.</param>
            <param name="mode">The mode.</param>
            <returns><c>true</c> if [is state ok] [the specified control]; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.OnTimerTick(System.Object,System.EventArgs)">
            <summary>
            Handles the Tick event of the timer control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.OnAnimatorDisposed(System.Object,System.EventArgs)">
            <summary>
            Handles the Disposed event of the Animator control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.OnCompleted(KimTools.WinForms.KtTransitions.QueueItem)">
            <summary>
            Called when [completed].
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.OnFramePainted(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the <see cref="E:FramePainted" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.OnMouseDown(System.Object,System.Windows.Forms.MouseEventArgs)">
            <summary>
            Handles the <see cref="E:MouseDown" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.MouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.OnNonLinearTransfromNeeded(System.Object,KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg)">
            <summary>
            Called when [non linear transfrom needed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.OnTransformNeeded(System.Object,KimTools.WinForms.KtTransitions.TransfromNeededEventArg)">
            <summary>
            Called when [transform needed].
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The e.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.OnAnimationCompleted(KimTools.WinForms.KtTransitions.AnimationCompletedEventArg)">
            <summary>
            Called when [animation completed].
            </summary>
            <param name="e">The e.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.OnAllAnimationsCompleted">
            <summary>
            Called when [all animations completed].
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.CreateDoubleBitmap(System.Windows.Forms.Control,KimTools.WinForms.AnimateMode,KimTools.WinForms.KtAnimatorNS.Animation,System.Drawing.Rectangle)">
            <summary>
            Creates the double bitmap.
            </summary>
            <param name="control">The control.</param>
            <param name="mode">The mode.</param>
            <param name="animation">The animation.</param>
            <param name="clipRect">The clip rect.</param>
            <returns>Controller.</returns>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.AnimationCompletedEventArg.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>The animation.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.AnimationCompletedEventArg.Control">
            <summary>
            Gets the control.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.AnimationCompletedEventArg.Mode">
            <summary>
            Gets the animation mode.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.TransfromNeededEventArg.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:KimTools.WinForms.KtTransitions.TransfromNeededEventArg" /> class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.TransfromNeededEventArg.Matrix">
            <summary>
            Gets or sets the matrix.
            </summary>
            <value>The matrix.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.TransfromNeededEventArg.CurrentTime">
            <summary>
            Gets the current time.
            </summary>
            <value>The current time.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.TransfromNeededEventArg.ClientRectangle">
            <summary>
            Gets the client rectangle.
            </summary>
            <value>The client rectangle.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.TransfromNeededEventArg.ClipRectangle">
            <summary>
            Gets the clip rectangle.
            </summary>
            <value>The clip rectangle.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.TransfromNeededEventArg.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>The animation.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.TransfromNeededEventArg.Control">
            <summary>
            Gets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.TransfromNeededEventArg.Mode">
            <summary>
            Gets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.TransfromNeededEventArg.UseDefaultMatrix">
            <summary>
            Gets or sets a value indicating whether [use default matrix].
            </summary>
            <value><c>true</c> if [use default matrix]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.CurrentTime">
            <summary>
            Gets the current time.
            </summary>
            <value>The current time.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.ClientRectangle">
            <summary>
            Gets the client rectangle.
            </summary>
            <value>The client rectangle.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.Pixels">
            <summary>
            Gets the pixels.
            </summary>
            <value>The pixels.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.Stride">
            <summary>
            Gets the stride.
            </summary>
            <value>The stride.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.SourceClientRectangle">
            <summary>
            Gets the source client rectangle.
            </summary>
            <value>The source client rectangle.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.SourcePixels">
            <summary>
            Gets the source pixels.
            </summary>
            <value>The source pixels.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.SourceStride">
            <summary>
            Gets or sets the source stride.
            </summary>
            <value>The source stride.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.Animation">
            <summary>
            Gets or sets the animation.
            </summary>
            <value>The animation.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.Control">
            <summary>
            Gets the control.
            </summary>
            <value>The control.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.Mode">
            <summary>
            Gets the mode.
            </summary>
            <value>The mode.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.NonLinearTransfromNeededEventArg.UseDefaultTransform">
            <summary>
            Gets or sets a value indicating whether [use default transform].
            </summary>
            <value><c>true</c> if [use default transform]; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:KimTools.WinForms.KtTransitions.QueueItem.IsActive">
            <summary>
            Gets or sets a value indicating whether this instance is active.
            </summary>
            <value><c>true</c> if this instance is active; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.GetDecoration(System.Windows.Forms.Control)">
            <summary>
            Gets the decoration.
            </summary>
            <param name="control">The control.</param>
            <returns>DecorationType.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.SetDecoration(System.Windows.Forms.Control,KimTools.WinForms.DecorationType)">
            <summary>
            Sets the decoration.
            </summary>
            <param name="control">The control.</param>
            <param name="decoration">The decoration.</param>
        </member>
        <member name="F:KimTools.WinForms.KtTransitions.DecorationByControls">
            <summary>
            The decoration by controls
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.CanExtend(System.Object)">
            <summary>
            Specifies whether this object can provide its extender properties to the specified object.
            </summary>
            <param name="extendee">The <see cref="T:System.Object" /> to receive the extender properties.</param>
            <returns>true if this object can provide extender properties to the specified object; otherwise, false.</returns>
        </member>
        <member name="F:KimTools.WinForms.KtTransitions.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.KtTransitions.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:KimTools.WinForms.ObjectEditorForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.ObjectEditorForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.ObjectEditorForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.Storage.GetValidationRules">
            <summary>
            Gets the validation rules.
            </summary>
            <returns></returns>
        </member>
        <member name="F:KimTools.WinForms.TemplatesForm.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.TemplatesForm.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:KimTools.WinForms.TemplatesForm.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.Properties.KtCanvasResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtCanvasResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtCanvasResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:KimTools.WinForms.Properties.KtCanvasResources.rect" -->
        <member name="P:KimTools.WinForms.Properties.KtCanvasResources.svg">
             <summary>
               Looks up a localized string similar to &lt;svg width=&quot;{Width}&quot; height=&quot;{Height}&quot; &gt;
                &lt;defs&gt;&lt;/defs&gt; 
            &lt;/svg&gt;.
             </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtCanvasResources.text">
             <summary>
               Looks up a localized string similar to &lt;text  x=&quot;{Margin.X}&quot; 
                       y=&quot;{Margin.Y}&quot;  
                      text-anchor=&quot;start&quot;    
                      text-decoration=&quot;{TextDecoration}&quot;
                      font-style=&quot;{FontStyle}&quot;
                      font-weight=&quot;{FontWeight}&quot;
                      fill=&quot;{Fill}&quot;
                      style=&quot;font: {FontDefault};&quot;             
            &gt;
                  {Html}
            &lt;/text&gt;.
             </summary>
        </member>
        <member name="T:KimTools.WinForms.Properties.KtControlboxResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtControlboxResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtControlboxResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtControlboxResources.close_dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtControlboxResources.close_light">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtControlboxResources.expand_dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtControlboxResources.expand_light">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtControlboxResources.minimize_dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtControlboxResources.minimize_light">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtControlboxResources.restore_dark">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtControlboxResources.restore_light">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.Properties.KtDateResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtDateResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtDateResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtDateResources.calendar">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.Properties.KtLogAssets">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtLogAssets.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtLogAssets.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtLogAssets.html">
             <summary>
               Looks up a localized string similar to &lt;!DOCTYPE html&gt;
            &lt;html lang=&quot;en&quot;&gt;
            
            &lt;head&gt;
                &lt;meta charset=&quot;UTF-8&quot;&gt;
                &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
                &lt;title&gt;Message Log&lt;/title&gt;
                &lt;script src=&quot;https://cdn.tailwindcss.com&quot;&gt;&lt;/script&gt;
            &lt;/head&gt;
            
            &lt;body class=&quot;bg-gray-900 text-white&quot;&gt;
                &lt;div class=&quot;flex   justify-center min-h-screen p-6&quot;&gt;
                    &lt;div class=&quot;w-full p-6 bg-gray-800 rounded-lg shadow-lg&quot;&gt;
                        &lt;h2 class=&quot;text-2xl font-bold text-center text-pink-400&quot;&gt;KimTools Logs&lt;/h2&gt;
            
                     [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtLogAssets.server">
             <summary>
               Looks up a localized string similar to @echo off
            start msedge --app=&quot;http://127.0.0.1:8080&quot;
            http-server.
             </summary>
        </member>
        <member name="T:KimTools.WinForms.Properties.KtPictureResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtPictureResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtPictureResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtPictureResources.avatar">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.Properties.KtSelectResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtSelectResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtSelectResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.Properties.KtToastResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtToastResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtToastResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtToastResources.error">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtToastResources.info">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtToastResources.success">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.KtToastResources.warning">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="T:KimTools.WinForms.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.adoner_logo_round">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.Borders">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.effects">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.Fill">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.kt_logo_circle_sm">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.kt_name">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.ktLogo_sq">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.layout2">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:KimTools.WinForms.Properties.Resources.Typography">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="M:KimTools.WinForms.CssColorExt.KtAlpha(System.Drawing.Color,System.Int32)">
            <summary>
            Set A [0,255]
            </summary>
            <param name="color">The color.</param>
            <param name="alpha">The alpha.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.CssColorExt.KtAny(System.Drawing.Color,System.Boolean)" -->
        <member name="M:KimTools.WinForms.CssColorExt.KtNone(System.Drawing.Color)">
            <summary>
            Empty or Transparent
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.CssColorExt.KtNone(System.Drawing.Color,System.Boolean)" -->
        <!-- Badly formed XML comment ignored for member "M:KimTools.WinForms.CssColorExt.KtOpaque(System.Drawing.Color)" -->
        <member name="M:KimTools.WinForms.CssColorExt.KtTransparent(System.Drawing.Color)">
            <summary>
            is color.transparent
            </summary>
            <param name="color">The color.</param>
            <returns></returns>
        </member>
        <member name="T:KimTools.WinForms.HashUtils">
            <summary>
            Hashing alogrithmes
            </summary>
        </member>
        <member name="M:KimTools.WinForms.KtExtString.None(System.String)">
            <summary>
            string.IsNullOrWhiteSpace(str);
            </summary>
            <param name="str">
            </param>
            <returns>
            </returns>
        </member>
        <member name="M:KimTools.WinForms.KtProcess.Freeze(System.Int32)">
            <summary>
            Freezes the specified process by suspending all its threads.
            </summary>
            <param name="processId">The ID of the process to freeze.</param>
        </member>
        <member name="M:KimTools.WinForms.KtProcess.GetActiveWindowProcess">
            <summary>
            Gets the process associated with the currently active window.
            </summary>
            <returns>The process associated with the active window, or null if not found.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtProcess.GetActiveWindowTitle">
            <summary>
            Gets the title of the currently active window.
            </summary>
            <returns>The title of the active window, or an empty string if not found.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtProcess.GetProcessById(System.Int32)">
            <summary>
            Gets a process by its ID.
            </summary>
            <param name="processId">The ID of the process.</param>
            <returns>The process with the specified ID, or null if not found.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtProcess.GetProcessesByName(System.String)">
            <summary>
            Gets a list of processes by the specified name.
            </summary>
            <param name="processName">The name of the process.</param>
            <returns>An array of processes with the specified name.</returns>
        </member>
        <member name="M:KimTools.WinForms.KtProcess.Unfreeze(System.Int32)">
            <summary>
            Unfreezes the specified process by resuming all its threads.
            </summary>
            <param name="processId">The ID of the process to unfreeze.</param>
        </member>
        <member name="M:KimTools.WinForms.PropUtils.PropertyDefault(System.Object)">
            <summary>
            Gets the default property.
            </summary>
            <param name="control">
            The control.
            </param>
            <returns>
            </returns>
        </member>
        <member name="T:KtColorEditor">
            <summary>
            Class extending the <see cref="!:ColorEditor"/> which adds the
            capability to also change the alpha value of the color.
            </summary>
        </member>
        <member name="T:KtColorEditor.ColorUIWrapper">
            <summary>
            Wrapper for the private ColorUI class nested within <see cref="!:ColorEditor"/>.
            It publishes its internals via reflection and adds a <see cref="T:System.Windows.Forms.TrackBar"/> to
            adjust teh alpha value.
            </summary>
        </member>
        <member name="M:KtColorEditor.ColorUIWrapper.#ctor(KtColorEditor,System.Windows.Forms.Design.IWindowsFormsEditorService)">
            <summary>
            Creates a new instance.
            </summary>
            <param name="colorEditor">The editor this instance belongs to.</param>
        </member>
        <member name="P:KtColorEditor.ColorUIWrapper.Control">
            <summary>
            The control to be shown when a color is edited.
            The concrete type is ColorUI which is privately hidden
            within System.Drawing.Design.
            </summary>
        </member>
        <member name="P:KtColorEditor.ColorUIWrapper.Value">
            <summary>
            Gets the edited color with applied alpha value.
            </summary>
        </member>
        <member name="M:KtColorEditor.ColorUIWrapper.Start(System.Windows.Forms.Design.IWindowsFormsEditorService,System.Object)">
            <summary>
            Starts the editing process.
            </summary>
            <param name="service">The editor service.</param>
            <param name="value">The value to be edited.</param>
        </member>
        <member name="M:KtColorEditor.ColorUIWrapper.End">
            <summary>
            End the editing process.
            </summary>
        </member>
        <member name="M:KtColorEditor.#ctor">
            <summary>
            Creates a new instance.
            </summary>
        </member>
        <member name="M:KtColorEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the given value.
            </summary>
            <param name="context">Context infromation.</param>
            <param name="provider">Service provider.</param>
            <param name="value">Value to be edited.</param>
            <returns>An edited value.</returns>
        </member>
        <member name="T:Bunifu.UI.WinForms.Renderers.PlaceholderInput">
            <summary>
            Provides a Windows TextBox control 
            with enhanced placeholder capabilities.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.Renderers.PlaceholderInput.#ctor">
            <summary>
            Initializes a new instance of the PlaceholderTextBox class.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.Renderers.PlaceholderInput.avoidTextChanged">
            <summary>
            Flag to avoid the TextChanged Event. Don't access directly, use Method 'ActionWithoutTextChanged(Action act)' instead.
            </summary>
        </member>
        <member name="F:Bunifu.UI.WinForms.Renderers.PlaceholderInput.DEFAULT_PLACEHOLDER">
            <summary>
            Specifies the default placeholder text.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Renderers.PlaceholderInput.SelectionEnabled">
            <summary>
            Gets or sets a value indicating whether selection of texts is enabled.
            This is a necessary property applicable when the textbox is disabled.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Renderers.PlaceholderInput.IsPlaceholderActive">
            <summary>
            Gets a value indicating whether the Placeholder is active.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Renderers.PlaceholderInput.PlaceholderText">
            <summary>
            Gets or sets the placeholder in the PlaceholderTextBox.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Renderers.PlaceholderInput.Text">
            <summary>
            Gets or sets the current text in the TextBox.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Renderers.PlaceholderInput.MaxLength">
            <summary>
            Gets or sets the maximum text length allowed.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Renderers.PlaceholderInput.PlaceholderTextColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Renderers.PlaceholderInput.TextColor">
            <summary>
            Gets or sets the foreground color of the control.
            </summary>
        </member>
        <member name="P:Bunifu.UI.WinForms.Renderers.PlaceholderInput.ForeColor">
            <summary>
            Do not access directly. Use TextColor.
            </summary>
        </member>
        <member name="E:Bunifu.UI.WinForms.Renderers.PlaceholderInput.PlaceholderActiveChanged">
            <summary>
            Occurs when the value of the IsPlaceholderActive property has changed.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.Renderers.PlaceholderInput.Reset">
            <summary>
            Inserts placeholder, assigns placeholder style and sets cursor to first position.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.Renderers.PlaceholderInput.ActionWithoutTextChanged(System.Action)">
            <summary>
            Run an action with avoiding the TextChanged event.
            </summary>
            <param name="act">Specifies the action to run.</param>
        </member>
        <member name="M:Bunifu.UI.WinForms.Renderers.PlaceholderInput.UpdateText">
            <summary>
            Updates control text.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.Renderers.PlaceholderInput.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides the default window messages being broadcasted.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Bunifu.UI.WinForms.Renderers.PlaceholderInput.OnGotFocus(System.EventArgs)">
            <summary>
            This override helps avoid full text selection 
            after first display with TabIndex = 0.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:Bunifu.UI.WinForms.Renderers.PlaceholderActiveChangedEventArgs">
            <summary>
            Provides data for the PlaceholderActiveChanged event.
            </summary>
        </member>
        <member name="M:Bunifu.UI.WinForms.Renderers.PlaceholderActiveChangedEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the PlaceholderActiveChangedEventArgs class.
            </summary>
            <param name="isActive">Specifies whether the placeholder is currently active.</param>
        </member>
        <member name="P:Bunifu.UI.WinForms.Renderers.PlaceholderActiveChangedEventArgs.IsActive">
            <summary>
            Gets the new value of the IsPlaceholderActive property.
            </summary>
        </member>
        <member name="T:HtmlRenderer.Parse.RegexParserHelper">
            <summary>
            Collection of regular expressions used when parsing
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssComments">
            <summary>
            Extracts CSS style comments; e.g. /* comment */
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssMediaTypes">
            <summary>
            Extracts the media types from a media at-rule; e.g. @media print, 3d, screen {
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssBlocks">
            <summary>
            Extracts defined blocks in CSS. 
            WARNING: Blocks will include blocks inside at-rules.
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssNumber">
            <summary>
            Extracts a number; e.g.  5, 6, 7.5, 0.9
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssPercentage">
            <summary>
            Extracts css percentages from the string; e.g. 100% .5% 5.4%
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssLength">
            <summary>
            Extracts CSS lengths; e.g. 9px 3pt .89em
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssColors">
            <summary>
            Extracts CSS colors; e.g. black white #fff #fe98cd rgb(5,5,5) rgb(45%, 0, 0)
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssLineHeight">
            <summary>
            Extracts line-height values (normal, numbers, lengths, percentages)
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssBorderStyle">
            <summary>
            Extracts CSS border styles; e.g. solid none dotted
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssBorderWidth">
            <summary>
            Extracts CSS border widthe; e.g. 1px thin 3em
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssFontFamily">
            <summary>
            Extracts font-family values
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssFontStyle">
            <summary>
            Extracts CSS font-styles; e.g. normal italic oblique
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssFontVariant">
            <summary>
            Extracts CSS font-variant values; e.g. normal, small-caps
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssFontWeight">
            <summary>
            Extracts font-weight values; e.g. normal, bold, bolder...
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssFontSize">
            <summary>
            Exracts font sizes: xx-small, larger, small, 34pt, 30%, 2em
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.CssFontSizeAndLineHeight">
            <summary>
            Gets the font-size[/line-height]? on the font shorthand property.
            Check http://www.w3.org/TR/CSS21/fonts.html#font-shorthand
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.HtmlTag">
            <summary>
            Extracts HTML tags
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper.HmlTagAttributes">
            <summary>
            Extracts attributes from a HTML tag; e.g. att=value, att="value"
            </summary>
        </member>
        <member name="F:HtmlRenderer.Parse.RegexParserHelper._regexes">
            <summary>
            the regexes cache that is used by the parser so not to create regex each time
            </summary>
        </member>
        <member name="M:HtmlRenderer.Parse.RegexParserHelper.GetCssAtRules(System.String,System.Int32@)">
            <summary>
            Get CSS at rule from the given stylesheet.
            </summary>
            <param name="stylesheet">the stylesheet data to retrieve the rule from</param>
            <param name="startIdx">the index to start the search for the rule, on return will be the value of the end of the found rule</param>
            <returns>the found at rule or null if not exists</returns>
        </member>
        <member name="M:HtmlRenderer.Parse.RegexParserHelper.Match(System.String,System.String)">
            <summary>
            Extracts matches from the specified source
            </summary>
            <param name="regex">Regular expression to extract matches</param>
            <param name="source">Source to extract matches</param>
            <returns>Collection of matches</returns>
        </member>
        <member name="M:HtmlRenderer.Parse.RegexParserHelper.Search(System.String,System.String)">
            <summary>
            Searches the specified regex on the source
            </summary>
            <param name="regex"></param>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:HtmlRenderer.Parse.RegexParserHelper.Search(System.String,System.String,System.Int32@)">
            <summary>
            Searches the specified regex on the source
            </summary>
            <param name="regex"></param>
            <param name="source"></param>
            <param name="position"> </param>
            <returns></returns>
        </member>
        <member name="M:HtmlRenderer.Parse.RegexParserHelper.GetRegex(System.String)">
            <summary>
            Get regex instance for the given regex string.
            </summary>
            <param name="regex">the regex string to use</param>
            <returns>the regex instance</returns>
        </member>
    </members>
</doc>
